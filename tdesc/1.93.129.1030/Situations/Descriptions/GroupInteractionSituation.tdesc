<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="GroupInteractionSituation" module="situations.complex.group_interaction_situation" muid="5753F44429BB72A0" description="The group interaction situations." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Tunable type="interaction" name="affordance" class="TunableReference" display="Affordance" muid="4EB3F0E6763FBA4E" description="The affordance for leader sim to run when all sims have gathered." allow_none="False" Deprecated="False" filter="0" group="Group_Interaction" restrict="SuperInteraction" />

        <Tunable type="interaction" name="constraint_affordance" class="TunableReference" display="Constraint Affordance" muid="83126393F3DBF5F7" description="The interaction that puts the followers into the constraint." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SuperInteraction" />

        <Tunable type="interaction" name="constraint_leader_affordance" class="TunableReference" display="Constraint Leader Affordance" muid="A04C1858B4EE4464" description="The interaction that puts the leader into the constraint." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SuperInteraction" />

        <TunableTuple name="interaction_state" class="Tunable_InteractionState" display="Interaction State" muid="AED98EABCAF395E9" description="The state that sim is doing the interaction." Deprecated="False" filter="0" group="Group_Interaction">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="F3FD7EA620E950CF" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="6671D3175FE5CB6" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                <TunableList name="affordances" class="TunableList" display="Affordances" muid="2C75A60D6010BBBD" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                    <Tunable type="interaction" class="TunableReference" muid="1DDCD1D92FDB07E2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <TunableList name="tags" class="TunableSet" display="Tags" muid="A84E2789484A9D7B" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3317411D67778AF1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                </TunableList>
            </TunableTuple>
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="A35FF1E071790C38" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="1F3719CF774AE3FF" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="340F9C2F0A2541AF" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="1D8B6146B73E5008" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="E41BF5DC0CFB7F77" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E87FDF30615F436E" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="88B26D0EB92D8BED" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="802FA0253D4C8332" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="F8BB8CD8AE7BF45C" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="C20E7FCB88878C3B" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="BCF0CE0C039FF9CD" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="92DDCB40C55E2C14" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="9A6C643FDEA7FCC3" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="71877151C1BCED59" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="45FEB93929F41821" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="9C53C9ADD532F98D" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="A9197A723EC0F91F" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="EBBDBB6EB0023937" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="98E4F2BC62F4AA55" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="41F60A82A97775F7" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="FB171090064DC527" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="BB52EEFC7DCEB625" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="2A14482B4FB138AF" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="974ECFFA7D066B7E" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="BB549B62DE3EADB7" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="A9208B9A8F74C920" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="1424662E519B275C" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="DDE8137D202D5073" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4757DC96BCE39424" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EAD278F719BB5EF4" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="734A40B47D792F59" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="901F4D3138E821D7" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="532D0160D2EE3D89" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="337492EEC7E770D7" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="927D5DC3941379F0" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="93E115A9B65794BD" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D4EAB49C232C1F7E" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="9BA883B163BF59A2" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="9B6A17FF9469D26" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="E2676C84A69E52D5" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="D22F337DD383CC42" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="F5EA3A0C48464470" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="D6C4A500C2F7E45D" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="A0E729BC4B69B28" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="BAA5FECC984F6254" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7F7C468172EC891" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="DE991013389ED611" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="33675411323C703B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7434FDAA502517E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="3FCC895CA4A22033" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D0FA2643675460B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FAADE782496D40EC" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8361D6C84AFCCC87" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9B75DB40E5E2895F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4D7964F8742F66D5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F9E38C7D786DA850" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="DD62B937B6F5B093" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DDBA096DF6D8A8DA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E5CDB43565AA9628" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E408EA6B0A741C33" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9552201E73FEE39B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="61232848E92183B6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="77B72D8A1A280245" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7C17A50464084334" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="6BDDB2637630B64B" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="237E14DF2E6261E8" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5859B15392D27A11" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="704221056FD90181" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="E0EB61FD01FA9F4" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8750AB5D7CEEB8F3" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8F2B908677F4B08B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4E48B91BA1DDF9EB" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="AE1D5DF4A087461B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="6F52C8DD4FA85728" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="598D83644D5A68C0" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9FA56760B87CAC55" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E06C95F1EF8BF6B2" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D208300FA294BBAF" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BA0717D504101B48" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="A9D2B49B74FD2BE1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="80D2E71CAD0B05AC" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F33E03C98B033E85" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1A3C6F22E9B2E07F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7270DEEE5B4FC15" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="54025DA2D9C55518" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="566871961CF91CAC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="CD590FF7D341D2D9" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EA625B9610DBF1FB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="66B581A42D7CD609" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="37837E4AD22D73A4" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="82ADB6B195670BDC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E8BF5C4EB2E84658" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F9E4ADED5CEA3E4C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3342DC4B82E9A54" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="79812A0F94BD1C14" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="7FC4597D0A4CC4F3" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="F6CB2B36531C130D" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="71F61297595B2B5A" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="3CB687545DEABEE7" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="25B26582DB604DAF" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="6FB0D40851BFB028" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="F324AB8CEA1AAA62" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="2A74F4694433574D" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="7FC31F3072CAB027" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="34795E0EC8EA2F23" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="8FC681835E085366" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EE968016E7BB24D0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A37F0F31ADFB229A" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="6A35EF695E47A9EC" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="3F14EB80337E46A5" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A077203099984EBA" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="3134186333CC3A9E" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="4C8AFB78E635762D" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="F7E812AC177F513C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7B652417BCBD7C7B" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A5AEF6B0EFC8F7C1" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="4A1C00BC3A56F149" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="E324AB2EBA102A3" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="40B1C327C13A86C6" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="C29AEA55BEA8D868" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="75864E21EF96E1B" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="A84AFC0E273525AE" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="C0BB79D6A501C1B3" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="FF532D15D1E3D49C" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="2C195436EC184F58" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="113DD2E692A8A35D" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="86A35D240AAE1E63" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="E3C43999961C5E33" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="B8ADD7649AF3EBAE" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="F74DD9A9F01BAD9A" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="B125CE92D6C51DF3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="9FB5ADA763062434" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="8F6DD0E2D43428A1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="2CEF550538601554" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C98B0DE5F0AAFD5C" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="AF70BE0D6B85644F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="187259ED103D58DC" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="92E2C8D571CD1ABB" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="85EF74A16A3BACB" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="18F7CFAEFECC1E16" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B5F79E635A9E8A91" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C75635CC7EB699C3" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3E3DED69A5729228" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F2D1D595C438B1B7" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="21C273DC3E2261A0" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="6972FF780C31D1D1" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="8639D4BD598503D5" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="997EAC8CA3CBB54F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="981EC84AD3C3BE8D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="E1070DCFE7384F04" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="7A767FB6D898813E" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="4262995579C2FB8B" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="4951024413725073" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="49E14DEDADC8260" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="14F89607E21203E2" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="8F1F87D1220AF62C" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E924EEC8AC099204" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="112CD81D9AF198CE" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="2C86B1371FC3B680" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="188C2D138566DE3F" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="5370CC008F74AFA7" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="38A4453DF9245AE9" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="52B96E4FE0498A46" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8235E43F58088DD9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CE20742E3397B0DB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C3E3957B905AFC4" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="98834B052DA71DAE" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="2058B5D02ADCEEF8" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8FC1F1819A3C8F46" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="B3C3F2E6731C3074" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="30E858EC283EBB4F" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="FC44C03659A70D76" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="A0ED96C9B78A12D7" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6EAAE5925E74FFA5" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="A53D12B49FC3C501" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="503AB4B0A4421A02" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="639CB197BE7A27B8" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D36EA34ED00403CA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="E49AADFEAC2A39DE" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="65AC10776F114EAC" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="5A68D0D15F784A53" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="55A61E8A7E75B171" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="B9321A9B39415822" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="E9F7D38504283DC2" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="E6EC6A31A919CFE0" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="C4FD4A144CCC2DD2" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="727A83DC645C2510" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="F924E593739B0037" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B58B9BEDEE0FBBB9" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="AF62BEB942900A40" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="6E56C8A645EE1D1B" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="136E797C52D5282A" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="F9C5E4C5D6E320EB" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="738EC967CFA96BD5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3EED53CC34EDFEA6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3139306FAB3AD1EE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="76455C612A910E83" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="28D560CA521FA98B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="49638AD370F01D9E" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="10798E28D2565129" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="775822FE124C79C7" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="A07DB17022F41F6" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="BB614F890E39E131" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9B2F5AC0113BC10E" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="86E0AA45DF86189E" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="D1CF72B226209489" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="705102BEB3E8AEBC" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="1E63C28F7FB6611A" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C59616D415932F27" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="5439B1883080CB5F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="70C2DDA727B56D17" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="60A44483FC0DB380" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4E9AE58D2D8281AB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="A97127D15A2B2B22" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5D90F9DFB63B49B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2E603B761A02E0B3" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="51EE7BCCCCD424BF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="674FDCC03AA2873B" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C1E642D5BCC77A5D" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="D61043F1BCBAB8D7" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="68A5E5B40C7B239A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="39D26D2FF08A8057" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="E668EE58D5A9916F" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="D849D7200CE3AD61" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="A7FCD1D61892226" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="F79D723736F06C7F" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="44B73761FC017838" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="50715D803864864D" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="2E8E3987A9B9AD78" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="53FE90571A65D1C1" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="856937EC1BB59758" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="4DD2F2A73F70A28" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="EF2F0B458E8C4D4D" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9592C44AD1FC2DD2" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="52B4AD5374AA65F3" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="6A86789965B6A071" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="C45AD1AFBEA007B2" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="FFE41A46FE0116" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="4AC71500B26B78CC" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="1E164360A0581A3D" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="284C44B45AE34575" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="58649A0731FD01C3" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4135E3EDDA0C69D1" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="D78E7D3B1DB7F3EC" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="1CC202B4F293F3FE" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D0E6206C884F280D" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A111AF54B93C2A17" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="D1C87E681996E3DC" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="705EE2E797BD1AF8" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="950CB305A7585349" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="C0DBCC8858A809DC" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BEF8CC2A31955D03" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="43C313EABEF40F3" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="819537360043FA19" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="68358A7B3F245951" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="2333929A294970AC" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="4232899CEDB1457D" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34A5E439EC5A618C" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="9590B9FDF6BD456D" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="69EC27F38D6C2234" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="3E568C9ADBC8DFAB" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="20513215CD25C3A6" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="DC6A74FA8733819E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="F2DDFE99A2DD7743" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="AE038115771DFA32" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="F13C0B791FC0E6FF" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="366ABEDD359158AB" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="9364D5C031382A41" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="76CC1AE2CD568B78" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="84E1B474B4933912" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="559424ABD3418EBB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="5C4F73CE785C127E" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="DB811E1DB34B61A3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="CB6396E961C46416" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="76B517BDB4B1D394" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C9BC33A766410C54" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="D4D39DB9009B8F8B" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="556D667A1F25095A" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="6F5979226792368D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="666AE429DD3149E8" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="80130594933CBA" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="7413D9294DE5FCAC" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="4AFF6EA8EAC49450" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="713916C5107598E8" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="D69615BF7753D694" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="587F1B4AAA7642EF" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="182A9DEF5FC90B4F" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="AB0CEBA05CB80752" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="AB6A2D99D16D554C" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="F9F4C3BA2181DE74" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="E44CF1112197604" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5201960CB447475" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="6EBBA0F4990B38C6" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="D9FFE325DAC2F7E0" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A873E9E2A0BC292E" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C6B8F57573EC2D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9567DFA5113578CA" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="A72AD35856532AFC" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="7424DE20FA9BFC39" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2DF6A4E83AB66DC" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="D07E4AC76CFCDC19" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B0B6DF3E9C061F6D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D7260DE1B2FF1B3A" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="4A00799F72D6D70F" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E0D168AA06BB11C" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="1C097E454BB5994F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5BF10A7C9D82A44D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="202D2CC51D1FF2DE" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="885D7FF331B4EF3D" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="246C6A50386926BE" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="2CC0EACC74CE1BD8" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="54B3F1A3320476B4" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="FCEBF57CF02B4290" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EED6BAF2BC81658C" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9AA45EAB92FEDC7A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FE5F74B9BE138BD3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="EDB2C1A7149ABAF7" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="91CF1B6463D49442" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="5E9D4303207DF63F" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="BCD5E6E42C738F6B" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="8C2224105724F171" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="EE8B137C2DE56AAC" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="EB24728E70B0AE03" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F20DDA1E25D8A48C" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F47F4E2DF9B2F324" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="37871F9BBF8F3FC5" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="44F2A7101FEEED92" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="68720F186B9D80A8" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="48EC4C2A2C6D160" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5FF5237F35E0B3A" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="ED7027E3281E16D7" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="106FA925748DC65E" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="62D4B853970D7A8E" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="7326298C1C6F9F2E" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="2D682366AED654A0" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="6B8A6EC660856D1E" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="15E832B9C88CF27B" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="1A6FB435C1D870E" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="97E5008605A2EB47" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3FA398CA9299681C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="DC24F5C0559C4824" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AB7FB93F0FEA033" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D5729B8529A31E77" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7F7C766C16AD7C70" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="960F122A1D7BD8B8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="3FFEA59003AA2AC6" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="227E6B5242B1D408" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B118D4357F724A2F" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="177B7C9C7AAC6C5F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="4C5D3BD77E167F16" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="3A2F06CB56BAC1C7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="43C3802FD55D22FD" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B75750E4D9819EDA" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="1E42DE4735A7C78C" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="35A45C2CA0D57326" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="A042EB0724FCC5FE" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="853E6AB5CE663C98" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="E7B900F8DA4A709C" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2E66D18A192CE63D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="C5D1385D3652ED23" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="C6A2F51F50398D10" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="23D0E18F7E1875CB" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="106763A3610ADC84" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E2E939EB1A09909" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="53AA3BB0717CB976" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="D2F98449EDCFA7C1" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="A7642808E2D7F2F1" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="632D46D060E40115" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="99FEA2DC33713BD7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="780D617D57AF06AB" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="1EEF3AA80D824F30" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="DAC8784AAE647E91" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="1D074DE1DA8FA467" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BF01468ED5321ADD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="BE0E6FB7CDD3E867" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="4627DEC90893C4E1" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="94F2F545060F9E52" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="7C51E56A546A610A" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="D4738149BF5229B3" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="3F1619BE5A9A8B77" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="75B959E2A68E257A" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="63D87FEC42B21404" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="FDD640178B779BBD" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="FFBE9F126EEA900F" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2B953FE8F1CAAE1C" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="CBDD31A61B0F23B5" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="AA3605E486AFF75F" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7C8693821766D004" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="AF20646072235366" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="5299EB54DB2F96DC" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="A6081607484011A7" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="BC66638946735472" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4C9E29A3079C14D8" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="E98B732090E382B1" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="46188477D2FC047C" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8478C1EEF9FE739" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D1A041C71BD6ED0B" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="D24C9C20127C2213" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="F982F4BF2F2A84DA" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4E0F85AE5B427FDB" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="8DEEBF0BB8DA8A42" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="421DAE3BF4D34AEC" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="BE478C8925638118" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="2DF706B42076D03F" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="48DA343BF59184EB" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="99EBFD829BB87A88" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="73927ADC488630A7" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="33D74D0A9B262F12" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="5022EB92CA8E4F43" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="3BC8944F5E19B9EE" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="16C4431E3400A1A2" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="7BD443A3908A014C" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="87D5E8C6C6266122" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="DA16A6F1145FADE1" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="F45C9EB5B94DC5EE" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="9042F124ECF3DA1F" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="342946BBF3D68F08" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="B052B8613C39F9D3" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="22143C616A82205D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="46B59CCAFE97E2BA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="71E5651AAD28A05A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="7A7757283F53F54F" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FEF75062B5541940" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38C940ABAE27A7BD" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A9F48A1953A7FFA8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="5B1C8E0E85F7BE12" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="25AD88520B199FF9" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="970142803367771E" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="674461EA43AAD45F" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="72EA2F96E02DD040" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="BD0B4FEB68BF0E68" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="F9DED962625E9A9B" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="23A3CA8879F5890F" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="703E6E8CD96D3F81" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="859BA98DA3E0BBC7" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="9D71EE67BAECAF74" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6134F0F9FE824700" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B00A62CD7E23DB83" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="EA11E55560F31CBC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="255EF3F0DF1F1E06" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="89D262CBA797576" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="B6E288929F9AAF35" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="1BE99DA4D5453811" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4BA6505C955C19A6" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3D7154B9D0C0CD35" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D420E3372BD7FDBF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="C5EA88B0929F2165" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="79689136439BAA04" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="D7336BF146192414" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="8305AA9859E6D678" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5031E6E96DA1926A" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="D36D6EB8F9A61E6E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="B8B8A7EF6E4CDB9E" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="5CE7E230BD88DC80" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A654015BF4EC9774" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="73760CFE8D595636" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="91D945A79870AFC4" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="E7E61799E10FB3CF" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="72D75CD4AA42A376" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="948027D9914AFBAF" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8C195ED76FC6A7EA" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="AAEF1745BAEE2C6F" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="1F9692C6C4FD56B6" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="73980EF8E4DAA6A2" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="B785D4017A6487C7" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="4E0EE2392D089868" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="8E03C980BA5C8353" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3DE1875B28C30E0B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A7CA134EF39C2825" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="F82D0D026D8D0C4C" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E0CE11832E711B3B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9AFE0690333E246F" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="89E010B9B516A9D9" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="48B63E009A6A323A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FD9A8C5D74FA1CA9" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="73FC6C3F186DF398" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F3A1B7A30B2F8C7E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B44BF75E0941E198" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="4CD925ED30B368D8" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="15E6A01021F58E86" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="35CB2B0A7FB32851" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E29B942B3642B37B" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="31FE142ADE4DDFD1" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="687AC9CE0FA9A5DB" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="DE1A3A89AD5428EA" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B5F2886E1CCEC6D7" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="1931C161D6F3AC5D" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F7E324ABE53D9053" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2C275067FEA93DD4" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AD9A025E37F6D15C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8FD57D352D399B78" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="8FC089AE88410A55" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BF9CC49B7E97BD06" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="41E098697ED83FDC" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7385DD7ABF58ADF6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D7BF7293772DFFBC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="91D2E6A406B61A91" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="CE58141648E2A89D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="ED4087DE9E0075F0" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5F16F3A4639C9D1F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7CD5E3B1CA369D96" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="49AB57B2272BA41B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E90437E963E46027" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F73D98A5AF50707D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="50AB0E02B6B2BA60" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1ADDCCA6582DB3D0" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="5D9C6DF6296A8A4B" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="9B60CF5A6299B05A" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A07CA28ED6F04AFF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75EC3EAB48AE8EFF" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="34225F3CA71820C2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="B5F8D624CC9B7FB8" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="640C9229DFD12C99" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="A877C6A16451D703" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="BA583E880093571C" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="7CC8FA2AC4F95252" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="7C312669FB2D4507" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9C8F6F33D3D35CA8" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="936F5FF9043312C1" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EE9A9903A41B3AC3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D417A6CCF7711AAC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="A16BD8629BD66413" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="2292BE94ACFF2370" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="3FBBA8F9C566DE53" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="828515186CCBCAA9" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="2A2EDCAC3A694000" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3E07A5E4E02535F6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A969367ED5AFFE5F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="625F521AD03DCEC9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="D1DD2360FDC7F90" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="E6705794B6804E8F" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="AEAE0DC0BD156A8E" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="C5EDC9BA3221D79F" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="37DD879DC26548D3" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="77153CB24B3DBF57" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="1134443B72A40FFE" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="715FCFC8267089D9" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="3F10B974EBE4CB06" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="232EDB96990A08D" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="E9B7BA4F3D4F7346" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="AE30AB1119119974" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D70839FA6FF54C4" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="55E99B0D91C22A" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="1D8722F57861E4A6" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="EF0618433DE7AC97" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="D7A0A50076F2AF70" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D881B619465A61E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="4F317FF0D826A305" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="E58B0DDE98D0C3A3" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D4BCC16DB46EB009" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CAC7DBBDA59E9C4F" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DC238E87640346C4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9EA06EE275B771FE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="54320A8E560DE5A4" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="73E514015CB8EC45" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="DDF2983350148A80" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="75536C83EDBD7815" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="633A48D128C8DB8D" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="F447D94BF05F5805" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="23BEC21256B28754" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2D51AF509338BB6A" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AB333903992F8B66" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E1F31B0532194D61" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2DB42E029ECF6932" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="85217E5054F4E32F" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="134F421C7C70C5A" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="8EA071ADF73BDA3" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="55369AA7DF3E7108" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="F7A94ED103340EF3" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="BFD6495BCA8254D9" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="E116918732F5FE27" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="994D5DE66B5C391D" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="994D59839865047A" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="DAB06AEB164060A0" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="21528ABC1FB2D7A0" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F0F6458C9A54EC79" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3F36224C2672B29F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="7EE7D6B52AF5FFC6" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="60003B6A4C12A417" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C31E17C0FBA2D892" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="75FAB7B5E00373DA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="9C3719167AC4289B" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="F4B68EE3163F06FC" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF8C7FE4EA442BC3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2FEA6E9D367AF126" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="8D5AAB6304B3CC00" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="F8D34C2D24966FFC" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5F6C4BE3ACDAB5DC" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF35023E2FBCC18E" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1D46FDBAC4563205" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="6DEFC07FF7187479" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="7B860F8DCD00D456" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="53726106D45204F8" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="26A22E64B303B890" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="503137D6DE97702" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A693F990AEB55FF0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="635348A87527CEC4" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="8E0332EDE36B8627" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="248649668ABD7522" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="AF0D576E6EFD6BE7" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="3A0A247D5D1D3C13" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="94E9761A66FBEE6E" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="C04257785E16D2CB" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="2469F72AE1AC717F" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="215F5008027D9979" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="231D849BB07F0B74" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="84EB59DFAB259DB5" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="3D033501DC1ADF5D" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9B663D20A66A7" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="4B0E5552AD74BDF" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="D463433A59A842FE" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B1A5A4A38B082C99" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="710CE6B550ADEE40" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="90CEB99A8325DB38" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2B5935B9523D2581" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="EF27C5D58C4F3029" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4276587361148516" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="5CA1F28F449631EE" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="50FB0A49AF498D71" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94BA0714970D77DA" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="ECDAE229366144B0" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="7F228A4DEE56911" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="DB2BC9A346FEFE87" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="91D17AF199701864" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="9A531F32B6115C89" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="BFD90562D0A5ADFF" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="DF38271761F7ED60" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="40300642EB7C243F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="20154DD6F152ED41" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="15EBE03BD97EDC39" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="2D4238FEC7B4B8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="E67E8A33C2DE63CA" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3E295E1045FFB978" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="E70D669F29F78E9A" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A14DB939A3E23A3A" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1C5ED44175DE6C34" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="48ECA8E2685BA60F" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="CA6726CB1570A7BE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="2A894A3FBB547B8F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="5E2212B3C6B35B31" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="65A5E7409BC57336" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="C8A9B060841B445A" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="4E86794818305E10" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="AA1729F941BDF0B9" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5DD787EFF4DE46ED" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6BDEC0C939CF6E0E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2A71DFC06155691" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="1D924F4EB860A41B" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="D129F7624FB1B526" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="F1352181C1C3B7A3" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="E68822068428C4E0" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F3B64C279F875B0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="2965C45C3B5A974A" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="781076EDD8722CA4" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6480ED2E3716C777" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3D8FE7AF4A01445D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="B88DC5744CAB9230" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="AEC309C118D8CD4D" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="4DB8038B27374443" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="EC0C108B9FA34CAE" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="9FFAF4AD017293E3" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="B2D09BED9D10CE12" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B65C35C1D1B9697F" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="6072DDDD540AE34D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="E9BB0B5A4E44BB32" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="CB2A49D006E57A46" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="4BA11E59E7DD0655" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="C0EFB64C3C6B512B" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="29EED24F6C5F2A0C" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="921116C87821475B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="81BAC5F4E8AD2614" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="AE7AA1306AE27E30" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="51903BD747F6BF60" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="C8348809113F50AC" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="2D12FA5FC48CD08" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="9C8DB6052A93F314" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="A063597FC2C27030" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="8144B1BF7EFD41DE" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84F932E63663EF8E" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="77F1A95DBE942AE7" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="3AC333B9869F75B8" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="31563042B2CD0AD3" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="382B408A245DD5CC" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="4C5F72D8B786018B" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="A8C36A087C0B4F5D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="B1F0C6D73C4FB74F" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="97CD7137C1A44F06" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="A89CAE8F458CE6D1" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="A364C2C33F489814" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="369905E94467093C" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="2A2ECB4D3EA5E9DB" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="A244FD48FB41F67B" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="2F9BAC2CE9500855" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6BB1EDB834728F53" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="4A390B197D785C9C" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="A87EDDCF3E1145E7" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="5D1F13E5986C7466" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="A9844CD543FD4310" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="E1384597EBF1CC2B" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="DEABB07407225A79" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="DB92AB660DDF1107" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="F82DD138C9F56F6E" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C7ECA42C0F86BB11" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="A45B59F78101294" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="9D4EAE14BE7D4C95" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="F29846EFDDCBC59" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="F6CDDF2BDFB21603" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="3394996C8234EA00" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="BDB114649F1DE231" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="683223E72AD44405" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="5EFD60293CC8E61A" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="357E4D7F1DF9B25" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="169809D89411F2E0" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="3BFEE545140B3C24" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="FCE8DE86135A64F6" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="516D3FEE43E5ADEE" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="88B3BEC48BECCA8C" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="78BDB428E36150E0" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B8D8120619828F66" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C0F167E7064E7D77" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4878009013A2EF48" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="148EDF3C070755E1" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="7E5EDA945656EC1B" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="A6849650EF1E8129" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="B8896BAEF286B7C1" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="58E50B109D90A834" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="6A80294F858B0D00" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="3D48B028B9593C64" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FA11188A3CC3ADBA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="8BD65768F2CBC136" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF5D2FFCB7C023C7" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="82581AB8954054D8" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="639D5CEB57792032" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="46C253B6256FEB63" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E4ED5680E2A4A8F3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EE0ECB2E09A9737C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AF0721A1D3660B00" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="360D7202AD6C291A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F915EDF2D091E214" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="BE5AF07D8585F6C8" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="811CE9B10D4AA8E0" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="A2A4ADD8F9D406F8" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B51CEF0C0DCFF4FE" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F3D0EECFF08D6F8C" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="86BCDC7BB5FBB0AD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BBFDC0ACA8810729" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="7A8FA7A6B4E82609" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="22B13963C8AD5221" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="3E04562127436DCA" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="7FD49D75825B46F6" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC4D8E5BAD023A93" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="BF911F383EBE1890" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="8B5E79D6652650A0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="882293A4E9CAF700" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E9FCB62A3113F8D6" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2475C4BBD6E7FEF2" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="D335D3852DACC6FC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="751358EC3410B865" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="8553402108D2F08" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="C52F07EC7648A513" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A0A472750940CB" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="72958F442BBD299B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="29A449D4A9DC1435" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="C120EA2EF3D20F8D" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="B11F085143449F31" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="C74E5D15AB105092" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="1ACED9DFEA3AA2B4" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="E64A7EF8BAD96557" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="1523D1A115A68E97" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BD31665660FFCA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="10E2A40252F1FE4D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="493290A62AF97924" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="FE7847C0A431E235" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="FCFAA49CE77C0A06" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="44BD73F5F50A0139" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="BFB49E9E533741F1" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="FC310BF90E47984C" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="14AA84C6BEA1FCC1" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="AC4B2648AA40D561" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="15F405C85F666583" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="ABE5A6E8EEC191DB" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="19BFFF38E1015309" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="85B0FB0497A1246A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="7C250E4E6F02FA8A" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="4FC277BFB7A09FA2" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F1CC8B3CB262D331" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B5BBAC287A8865EE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="BBFCA66AE1213507" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="674EEC5D73D45067" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="F91B253B6A10DC58" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="DDB6E5FBB222FBAC" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="5EB831C7CCABB488" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="102F3292B85A7C27" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="944EC5320B022B48" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="456246390A60DD42" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="9BA9D12BCF331F8D" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="DD975F6A2DABE6B1" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="38E00654970ED7C0" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="F4ECC56DEAF3F064" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="C195828E1DBDCB59" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="536CCF96BD729B0E" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="925EA71F443B17F1" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="15C7B8C5F769AD4B" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="FCAEE37C7419D8B1" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="240309A8A123B90E" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="444ECD99B8307E6B" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="61C63079E0ACC834" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DB80039BF5667CC3" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="65B87ACC7130EE6" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="4A5213E9C298BD33" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A932AC31C680F3BF" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="E7823BAC6609136E" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="AD8D17EE33CC3427" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89A2B285695D61F" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="248A8E96963BF12F" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="BE52E96D7DE6D5F3" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E61E2EE6F3CD6393" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="F21ED71800104E09" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="43F5B73448F5C69C" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="C8C8CD91002E11B9" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="30265F35105BF701" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="1D437E566FEC1B9A" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8AD07F623E0AADDF" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="FB479C846BF491C" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="EA228DF7E1B74408" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9D749AB90C44FDBB" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B4FEF98F4C78D87E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A6888F1838753F8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="B8806FADFBFC5F90" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="4A6F12886A727EF" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="92BFB95759E383ED" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="54DC8F78693A5807" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="F4746D2F4505C13B" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="E68394C824EDD244" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="C8DBBA823AC38E97" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="B689C361BF08360B" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="FBF21CE8C0AF12FD" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="9843B9F7AC5DB238" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="1F36ED2CC2DE9394" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="903AEBAE59AE5787" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="25ECE22DF5A5B17B" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="A07259A8E66F198F" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7865E6D45AC27CF5" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="9BEDBB3BDA168D32" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="EE0EBF393F1F7FA7" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="3F204DCAA48B0843" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="75CAB4502D1AE269" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="283A936E290F5F11" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="ECAB465BE1496B2" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="94B3D067D8E87C53" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="6C90CEA2EE7CC20B" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="91D0B9DB67A22F47" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="77CD4C9C9CBB4CDE" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F6A35EC8B7C679FD" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="B53996B9CB39FCBF" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AB8260CF2CA867D0" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BA8D651FD96BCD52" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="AC8B4C4D9AED0227" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="37821797A39E281C" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F3A7F20059037AAA" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="5A373AEC651F5063" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="DAB4666103A8C7A7" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="97B08C2443292179" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="33A39ED11B843841" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="7E41503D2620D36A" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9F3B0E08E23B71AD" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="3DB47D7F93388619" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EFC2AF2672AEDF5F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D41FFFC0E352531" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E98035D007977D8A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EBAEF1E3CBAD011A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="27CA2DE9C29827C5" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D52CC2F2CCE83400" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1197CF5451277E8C" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6111C7E347427038" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6D3A98A4B7DE30C5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5D7F5D53CD416BAA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E2734AE2EECDD5B0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="62D082881FBF07E9" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="26F7CDD17C577E3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="398F87870DEAB2C8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1A0BD8A3E6FEA1B6" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CF0CA85DD0FE73A1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3B49BE6B9DFBFF94" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="53A3906DFC0FA94B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FE0CA560ECBAE662" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="D7131A607E64AE41" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="BAF09B948F3D39CA" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C49601EE559B306" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="677DEEDDA40E80CA" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="4B6A5257A741D584" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D01A32D14683F011" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9F9B5C298028EBEF" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2828803DCAC1EA65" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="BE125FD2CCC72E2C" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="95040868A1B191A6" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5DD7BA0D2F6E2D4D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="C659E2996D518BE2" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="115AA163A43E5D72" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="15FA1630F71F86A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="866DDC121205EBCE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="531AB61D456BA892" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9DEE79D807A4695E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6D7A85DF824411D5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="70AEC638CBC6565C" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A4154BFB0B345C69" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CFA3A1E35D5D50A8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="490736F01E4E7E43" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3493DCC7963B32E2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5B7099BED47D6B13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A6E114E70FEA0AC6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5F69B24AA3CD5159" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="317C8790167E1C93" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="575F8C288A8372A7" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="61A1C2E59F22DBD4" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9C67903B88948005" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B3B12CEE3F01F914" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="417DC956654F6CB9" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CE37D76E1614BD3E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D4629484C4477F22" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="80B25595C4DBF692" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8CB3AA7DD3387EC4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3ABF4FABAEF0D628" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="41F0C3A238D27B18" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3B393DFFBC69891F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4D0D95518D669CAB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="800CE8FA8D5A93E4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="30F43E0B43400116" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5B29082A2194AEBE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2419105C11C1A3F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4C132CFF3740CBC7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D78676526836A7B4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5D49E60CD3B40AF4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FEA35CDA610C3DD2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="9E58E3D1BC7BDCC5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="D6DBE9786CF858BC" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="CC0B6AF12821DE81" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="AC1F8D93898B638C" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="C69DA023D1E00547" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="75DB1A15D435AE96" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Tunable type="situation_job" name="leader_job" class="TunableReference" display="Leader Job" muid="2340FF6E92A8FAE9" description="The situation job for leader." allow_none="False" Deprecated="False" filter="0" group="Group_Interaction" restrict="SituationJob" />

        <Tunable type="situation_job" name="member_job" class="TunableReference" display="Member Job" muid="9C3C5E7BD81DF3E6" description="The situation job for member." allow_none="False" Deprecated="False" filter="0" group="Group_Interaction" restrict="SituationJob" />

        <TunableTuple name="pre_situation_state" class="TunableTuple" display="Pre Situation State" muid="BB6AE4D1964F9715" description="Information related to the pre interaction situation state." Deprecated="False" filter="0" group="Group_Interaction">
            <TunableTuple name="situation_state" class="Tunable_PreSituationState" display="Situation State" muid="DE205C2BB23D0BE7" description="The pre-interaction situation state. Get everyone to their positions&#xA;and idle." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="8FC68AA117D07B27" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="CB84FA92795FD70F" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="A15BC5EE3B3C802D" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="47C11930521E9FF4" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="81C333BA2BFE58BD" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="8B3B16D11A658A66" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8D3A27F32CBE2F2E" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="436EFFC41A87F078" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="C78E0F4EF3122D37" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="4FE7C31DC700DC60" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="497DB89CCBB4F9B3" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="9DC3CB9150A2477F" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="74423206188DF810" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="7A69367FE3F3A73A" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="4F08613081569EE3" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="26D249922B57037" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="188E1F8EA24C37D3" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="B80C400545BF00FA" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="CCBF5D9282EB9877" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="C43C0E43AD511E7B" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="E62060CB22DF2C" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="8DF967DB0B60A74E" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="2ED2C9D6AB62BC92" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="EF5FB9787DA35A18" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="ACA660E7DB61675F" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="D1510877CCBD86CA" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="2888B3B6866C0ECD" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="8CDD372F2FED1AA3" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="A86B5EC91689D5CF" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3EF27A29F8C0A627" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ACEF89F0601B891C" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="E191093DBF9A3A2A" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="A11CF57BDE69788" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="34D4A8F92CD331FB" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="50C842E47AD051A7" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="40B905E3AFD70928" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="629117F57BC60BCC" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="777150E077D496B7" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="B00952AE2A3B6687" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="E3AE18E0ECB92972" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="847C3C65EA788632" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="24E8194969EF1EA1" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="14C78704C49887CD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="55651BB8908E1B7E" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="91E7DA8107FE0E39" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="2CC65AEB864A7DF4" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="62C08EFD67C884E5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B3692E1B11D6EF4" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A3DBDEF802F405BF" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A2F2E552C8583B4F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="BCE43F672921A9E8" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FBAB6B0F10C88DCF" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="924B9E386D74A239" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="44B64580B88896E4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AAC21DD24B3FE79F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AB215A3EDF7C0D0C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4F3EEBB4D3F7B87C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="4B0A006757B80D64" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D3C137A592C39597" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E62AFF4AA2843AD9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EC375CF23DFF1B45" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B9E2982134A62784" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8B2D74696F62B56D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="24DFC7D6B528B01" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3A5B6EA794116A50" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="1F91A02DC2B16743" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="F547D59783E4442C" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="29F200ADC6103F07" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="4978E0C929B1DB9E" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="A2FFBB796089BC16" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9E0C3721CF98EEAD" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="35014F132937E6A1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C7797A3F11C6E5A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="294F844AEB5BF70" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="CDEA9D649FA0DD7" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="6236CA989713F7F2" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="AF69C52CB50BE12" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="57CDA922D59884D7" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7CAB03F63045C362" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B8256C72B8B4A899" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="A0686E2151ED307F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="51E056AB5C19077B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="551D9BDBF660F7F9" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E41293B6CD80F87B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F66B928CB8387CE3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="16E0E2BF4088E19A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F18AEC78085F4300" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="DE351DB0EB8B7B4C" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="56FD93D2A3D8C88F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7A2F2BFF0E3F3055" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="587883CE38EF4347" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DB63997CAD9F62BE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2417854F6767FC9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1C4C39CD7E3B731E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D2FE1A19FB3939FA" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="58B695417B4D69A1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="E2BA27472AD3A27A" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="5874429734C1666" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="197875A84337D44E" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="266656E67B1E4041" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FBB810B2B2DB3704" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="CE90BDEF71E85728" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="B338E867609D7FB8" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="F582A17BB3AC6D6D" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="D21AB08BFA21185E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="E096CA38A889382A" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="C495D01854B62922" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="27AEC3C9D7215A12" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2BA955AEC66DF52C" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="AF2C0592F0E62FB0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="4204C90E71CDE30D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A9ACC2EC1D77735C" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="DFFD437C4E9DF934" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="BDA4E52CCDAE3663" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="BC8B705AE9A368D5" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="35FA614405AF4435" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DA0B2B14161679A" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="13A3365D9DA824B2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="7800AF6653292509" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="92281B03923E3F6C" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="9CA3C5BFBA63406" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="7593AE65AC09B949" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="5B8D53C7CE7E1EA5" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="325681B50BB700A0" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="D149FB54EB2EE849" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="AE1E5271F89C4A5E" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="97EDE626B287F244" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EB65E932CA68E064" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="4F7BC73F67A29E0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="62555D9A63C40D0B" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="93E4F7509688FCE2" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="394AE480E1A62A3C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="88E2BDF068FEEA56" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="4F6FB9CBB396E264" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="FBD12399D315A21E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34D4D656257F36F4" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3AEB9F9871FB4D87" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="808ACD8D1DE9DE82" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="5DDA3EB1B8068288" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="5FB435204F26B1BE" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="CEE08868F95ED882" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="2CF54AE4AC61DFCE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DBFA4F955FA35958" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="57DAA1A565C59BA7" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="5D456C0D27FDB1D8" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="40A8BCF3B253389A" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="6B259084BFE095A7" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="62C7FB497B20FBC4" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5BC1FAFAA936F894" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EC6E81D5CF80F792" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="7E3F255542AF20F7" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="86F687E290EA326C" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="76BE8A2E12A16984" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="21685102342A71FE" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="572FB195F44B6866" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="D9A55B6C1FB40515" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="3E0C30DDA30B06C4" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C07F0A86294B0952" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="413CD4608510D003" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="712652276E7905E7" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="81A4AC7DAD1DA3D3" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="D48B081406525CC4" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3CFED4056E39A59A" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D7D8B02AAA29E4A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4E70D252D9647724" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DC66F928131DF555" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6EE1F7810F95BA28" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E6DA21253D38D4DF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="10B8356C656506A0" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="951E37C6E890F6C9" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4C12C23BC4AA452D" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="63D6936FBEB27E57" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="C1D70DB176065BB4" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="89BDB275810CE309" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F3C69119B154988C" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="3B32F60A3DCE137" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D83E5552A76F84D2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F40680827A5C0848" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F5E50E21C956302A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="966F3F8C6E7FF7E4" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="ED92BF4453CB7659" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="BC45338D157ED7C4" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="6B8DDAE4344A7D2E" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="86E19A335816D76" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="8CE9B405FD08A718" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="39C931DC2D0445A1" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="34C96EDC5638EA92" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="4684CA35B4D59DE6" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="851CB9D305A69AEB" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9CC769E836959D4E" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="47AE8C8CA1F14923" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="1207E8F28E3477A2" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="44F9972530941AFC" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="96062C21F9436009" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="562EA1655E1016B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D6867455F43D0991" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A8D129E6EAE8002" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="457FABF487D1958B" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1EBB902DD7C5500E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="77AF96893C613A45" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="7F1B14C4E309F5CC" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="61A24897D1EBFD56" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="4EE78FD62ECDF578" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="E2993E7EB75EE447" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9157C8C63CB74054" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="71986F746E4B2F2B" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="9AB4C86AA1EDFA72" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A2017368040C06A7" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="AB04A1D562CCA301" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4F58914CF6A99815" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="6A1C5E1F6DA46245" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="3F531CB26B9C296F" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AEE94AA24A2E9DA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="73DAAAAB62890A68" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="1AD9CBA45466891D" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="E31122E1789A7035" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5442979FC744BEB" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2BA37B5A46AF59F8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="FF27AF344D912BBB" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C31BCEECCEB30046" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="F1BAAA9B816A5C89" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="D99DF4C38BBCDF7E" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="1206A82A25C91C4" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="69288C857D3E0F8A" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="1C1D31AC3BB72EAC" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="A25BEC63A5B1224C" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="2C7F00070B9E51F3" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2D8971CDF871C5BB" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="FD318930DD09BA31" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="BB669F10FA65B1AE" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="48A18CBE270EE46D" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="AE60FCC42E05E8B2" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="C80F0EE0CA346F79" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="819DCADBE718864E" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E21BCF6B8745433" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="72B19F66950CA12A" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="F3DA66E00999BB5C" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="E8D3ED37C0938A15" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="F3561A306CCAABA5" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="843E4444EC2497C4" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="3E038D94967BE969" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="960321A653988F99" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A65694A2208B9968" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ADF6CCFE86BA1500" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="351AFF91247A68C9" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="93A02DFAC321CEBE" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B4578A934AD66627" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8C93FA791FF50157" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="FC809A51691DBA94" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3CDDEF40E4F0A5AF" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="87061867CA680F9" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="E07132C007B663CC" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BD800C405B4DA07B" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="24C4B59F69C6DE59" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B278BBEB929F0E6B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B60730385043223D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="897F9225D441F472" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="84A87D07F8712363" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E8699E11BDABB42" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="C46612D7E1638418" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="59682CB6BD60625" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="4294C2137688512B" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="691B31DE87B4B400" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="E1889B8CA360E2BB" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="3326A9E8513361CC" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="963C60F1A4E0DF6F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="E1F1CAFC7F433B15" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="B9B8BDED00A582C8" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="A0A2794DCADBB22B" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="4D6182437B76E62B" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="3645B1F1593A237A" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="71CD5AFC8A20FBAB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="1C81C8234D1EEC89" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="812A2EC75684090A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="BAB1B174CB404CF1" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="761A12ACB3851FF0" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75769F25419B2F8" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="8A9A2729B3A06045" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="AF770A8AF848A454" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="B4DB624DD66E9938" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="95E4A9DA7919C4F7" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="BCEAAD993BB060AA" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="50C81901BC0A69E6" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="E952BF60A9F34517" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="3C859D7DD0A5ED9D" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="12E5B39D7845649F" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="E4A257863F70FF59" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="39344CCEE66AB472" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="B45CE067A7D32C78" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="C3B0C07920F21676" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="A3C2FFAE686BBD17" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="CA108DFAA223BFB7" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C03B0B0F5C1EBDB2" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="F2894F9E5AA06E06" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="A520E59B4D292D9D" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ED9CF9C2E78C88F3" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E16B38B9FAC615D9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="14E8AA03EAE95D32" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="96F99050AA47D229" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="97C87D4105C4E0AB" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C91404682ED5112" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="29ED06A930222E0" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="25204F7610D714DB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="45FDC21CAF552A7" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="BF9CF8CB5AED6C5E" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FDD65CC0EBB5084" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="894447317FCE54D9" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E85C492805314647" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B4237D8AD040D9FC" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="28EE5D159809D960" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="DF6944362305FE87" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="630D5DF96EE3F75E" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="F2DF75B22BC00F44" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="789FB18CD6FD8CF" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6F0F0E5412AF9691" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="486BBDDB28EE4E22" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F1F30402E38C8FD9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="F035AEF46806270F" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="AB825A2F99014A89" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="CCCFE7F2C70722C8" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="49E1BC132A707132" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="533545FEBF7DAD" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="EC3E18833687C4E" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="37E4A3A689F96FFE" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="926A368849994692" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="23B65E81358379BA" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="E8755B7C32598129" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D7BFE33237B16F2" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="D6AAE7A84437DE6F" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="88BF36B4D8922AA5" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BF162FCF23854E7A" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="80B0B9D8D6D57C1B" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="62095F4A2FC1169B" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C22A8CC48005A24F" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="F27A168EFE5E3BC0" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="A0AC707B17309940" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="EA31E095AC5D8E8E" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="599AFF56905B3E2F" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="469DAC0CD17E078D" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9395C17E4F59442A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5EE7B83405BA1C64" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="A76E184EEC44C167" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="254AD31246AF2551" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="6F9E5191B9D2CEB6" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="381F7C6B622014CB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A8EC1FA912CCD8EC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="ECD7E559A749463B" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="B0447A1C58F2E4E2" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="34FFDD05218D68C" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="14EB00423FC48359" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="8C00EA5A99C00982" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2899B6AACD67D119" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="BD8E0B962F4EDD47" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B4B89A209F6FF848" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="A4CDDD2CDBBACE2B" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="45CB12EFA579C91E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="8185758CDFDBBB3F" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FCBCA6187BA0DFD8" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="4C09B69FC14A6555" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="8058381A8EA3840" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="7D4D4317208F2F47" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="929735C8D582782" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="71C7DE3FB1C2DF5E" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="650595612319E254" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B5E1520FB9AB9E9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="66040B49ADD86440" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="9B6B16EB1964C41D" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="B99EA4A6C96E387A" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39A14F5DD33B702E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="DA2541819E293835" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="F99D8E811D5A3483" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="AEDD06A91CD9A91D" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="4AE31456F3DE0C30" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="4DF5E09B2525AD55" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4FCE027A011A26F2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="12728CE76AE78D3E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="AFCC9976AA16F1F6" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="F95D4EC24C812919" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="D32948A38BEF9010" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="4EF3C6F41A146401" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="7045F6A6BAA3AB50" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="4117155A9A13EC3D" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="2DB96665A33105F6" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="FA97DF2548D21EEB" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="ED5F7F2F674E69EE" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="B0646B7A027A2F7F" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="1329397A83D617C8" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="61AB6AA526EC5EAE" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="CE23BC47FDB62FE7" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="4DAAA4B45B9B36C8" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="7BCABC9CD48E7FC8" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="3464D25E9B009C90" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="C816AF58CEA46360" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BCA74654535FB4B6" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="45C618787E08E3A2" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="A51BD19BD45C2748" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="62D81170119F33D6" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EE74AE2A10DC1082" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="31B70A02011CB119" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="39C271CA5905C3AE" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2846F7840AC8DB9A" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="B52FEB05C9FAD125" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="13EB3E33781E501E" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="9ECB4092D28085BB" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="EBE5EF6F83250642" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="30D69E4302B4BE74" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="358F7B5D374ECE20" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="7D631368F64D78AD" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="D56C43DCF0DF1BC2" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="34BAB560D0AD52EC" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="EB5D3C9B26174C96" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="C8E99C1F518F314A" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="5DA93C7941BF9B6B" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="FE071C2C69F423CB" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="9FD5C1CB200DA1D2" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="DD349AF3DF07AC56" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="B82AC99D7ACD3D81" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F0065A4127D42D0" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="FF073FE8F01D05F7" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="12C1A940B9546298" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4288397F90FD2B88" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E7EDB7D02B129686" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="AAC51ECE372F2A70" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="668DCB3825C983CA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E5F4177B20B9757" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="834AB9A1C82C0340" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="99B7D5D5D8FD7B3D" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="82AF08B04FF1DE2F" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="6D1A33BD75416717" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="654014FB579961DE" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="C984BC22CFC35EB6" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="41B0C70D28F6BB69" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="4CDCC19945DB6903" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="17A3D2D6D2EDB0EB" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="D45D72AE3D567383" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="6021493CF3DFD95F" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="299FD0925EF28824" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AA4DD10AFCBC821A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="95F29F8603E32AA2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5623F0D415FB201E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="8856A32EEB50AA21" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="9D71CE83EE39F4B2" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3ED843CD621E218F" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="6259861526A8C30A" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="646F5D5BCFD85DCD" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F1A6592D85BEBE3D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7013D2D784B843A9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="3D65D7C204A8741F" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="22250B0BC6230B3D" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="43EF4A0F395B18D6" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="61D293DF9D7CD3A7" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5B8550767BBC6129" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="A03019589E1CB0B5" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="F868137CD99F1451" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="5DCB7366FCC2DDA2" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="86906C52C2C0812B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FF12BCD2CF910C1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="4D4E53367CE19147" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="2898AE7B177B143B" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="A6AA727383F18554" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="246AA35159B58EFB" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C08A75C1EB192950" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="40C5B773C2154CC5" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FE263544B3E5A586" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="4D002A593829406C" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="EB51E78645AD32C2" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="11E8E735FDC2C24C" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="78847EDE71EDC1F7" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="46C4CCAE40A89E30" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="132CEA8BA8270F67" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="E58DD156B2489376" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B1966A598C4C3640" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5511686884AFD658" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="ED0D50AC3FACB8A9" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6398C294F496A570" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FF26306D0CC40D10" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="F50B9716140385A0" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4E70509EF507DA54" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9E796A9CF3B7178A" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="C9200E6CAEDA5B16" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="800F3F4598B4B405" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6D3F77CD816DD68" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="53FF9C7F928FB419" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="403B6E43899FFDC6" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="F2926BA26A0D6872" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="1A30F65114B26B14" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AAD1A02E6F13106" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="3344B47B8F0D0065" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="88FB19B986DC3A0A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="80E4FB99E325A0AA" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F1405BD3514166F5" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3722DD0FF005568C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="19AB23513AF8988E" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AA90F9D6B348A8E7" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9179A9008E04F0C9" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FC57E054C7FEA90C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1B5BF80FA0F85D04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D649FD843A842385" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F4BC4E06D6A585E9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="A415B87B18023EED" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="719CC02F94A1185C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3000A13D02AFB0CA" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8D46E64262763084" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BE8FAB33878C2045" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="79C7BD681CB83C8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="30888A3782779ED3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6A679EF77DB95C28" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="C51E06539BEB19D4" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="A2C0A4E3AA5240D2" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3DD9DDF0376043DB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="513D190BEC720093" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F79E024F61C1ACE0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="2EBC515B6CD9682A" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="8CC5C406884E75B4" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="68CE3DBD44177D48" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="9183B2F82933CB86" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="4BF2B304C9DFECE9" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="F76925E5EE06F1BD" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A41914C87F2D45EA" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="6D60F7CCCC85FF8F" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="790CF54565791712" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DF08D08013181591" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="B516975E21E26738" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="2571D19CCDE6FDFB" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="CE85EEEDFE3305A7" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="3BDA3E7FB852E326" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="222C8A3E04E7A833" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E3D756D7A65DE9B9" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="726C3ED04DAC77A6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="805D93F2F9F24827" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="B752238B4AC21CAA" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="2F3BAF9A593497B9" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="EC4728060F0CF93" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="14E2F05720D90061" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="5D83AD465E6DBB64" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="C34B6F8D423F9175" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="AE9E52FB0C129EC1" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="1DFE1FD468E099F1" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="9462820846CEADDB" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="1F48985B994DC4F9" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="30D091BDA61E6F56" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="60C1EE655653EB3D" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38615879C0A68C4D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="241D6B9D5BA39D22" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="7617D32DD9A6A8DA" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="6D5A56341C2D837A" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="F1803C18E5CAE7B8" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39E930C2A863ECAF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="1EC24D0F74017E27" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="DFFAAD1B678EA52" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="12966A50F7E423D1" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F381A2F79897964A" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C4C4D3F545EA06C6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="99C8F2C9032A5F40" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="F409F27DE2824D31" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="5D14CFC41D35FEAF" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="6736113393C76C39" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="CFEBA3882592B97E" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="94888C22D8A3D906" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="D89A3C5B69D137C2" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8356BC1D8E94A60" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D6552528DDB3F7B3" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AB2F12777D0A62BF" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="281D1960BD7A6205" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C55EFB11F8E4AE84" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="A84B6D89611EB31B" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="2207108C74556FF8" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="C1FC7970B85486E7" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="51C3E5D765D176B5" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="CE9D00CFD97C1B33" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="156FACE996F15AC0" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="E02C4FECE909B76B" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="26D5AE7BC3A8F36" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="734798F8A589D6F8" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="5604C5205291F951" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2FEA4CF46024629C" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BF4B9D2B94C7AB52" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A175F3B1CD43EC59" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="13A6BD5179FE9E71" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8DA61BEE3FC9F63A" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="48202435C7062EF1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4CA39176F296AEB0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="6B140A2D268A7D68" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="93BD957FCEDF724D" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C19EFCE477B0972" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D6F6C6AF1D209971" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="2FC6DBE87452E9FC" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="84DD1C1448C052A7" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FCAB1C0F7F1F3E6B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="88D5FC10CB7D326D" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A3D34AE1C73B1C85" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="2B454137455388B0" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="FC81DEC9A8E54DA6" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="749BC905A9A0CD40" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="EBA415DC820DFE23" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="520137D06ABD7102" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5F583E46F39C5054" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="C1060CDA66A3AC9C" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="5AAA54901169FDE0" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="8165644C7685132B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="CF92C2DF28A7BB62" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="36F76775DB067B23" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="4DD2EC9B0EF9BEAE" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="C33515AD64583582" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="601B9DC62BD88241" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="58678223B5B95EA4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="256FDCAEB9D60F37" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="DEBD8E47494ADC75" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="8F51230E11465A94" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="77F1D6A5032BEE" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="64EF85DA7E14EBF7" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="70E0FCC689F3821C" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="43A105E101141DCC" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="276A80775371115F" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="D45175B651212483" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="43092B186EAAEE22" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="991743907AFA0E83" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C253A01D6C7D6302" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="F6B1D0EE677A1DDE" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="970AEC843A86A2C7" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="20C9F0DE49F53FD7" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="1677DD691D2F042A" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="44E7353A931E6AB2" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="8CB4538B12C6F66D" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="3313DDEA2A3DBE43" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="B482E1FD95728173" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="5C7CFDC004F73186" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="EA0ACD4F43956959" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1BAB8992647D2B6B" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D061C1E22EE8B0A7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="97BFC7D8ECFDB630" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="B68CD5253D42910F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="E074309F95C4991B" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="4FF5D30B3C152E62" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="C521A271CC65316F" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B0E679DE96C3CCF9" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="428DABF6EFA53CC2" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="98EAC294707728E9" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="265CF0201C17CD2B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E8CFCDA936293C7C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="919F61BF3D8D65D" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="999F82FB718AD3E9" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="CDE6092018ADAF32" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="2DD59B7068023258" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="79EDA424B6ED8C71" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="2D97199838642849" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6936222172185111" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="28765FBCDCD76478" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="37BCA22B5918F54C" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="63FE277FE1EDC2E" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="7679BED7A46EC2D8" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="7D09F7425B0F7C23" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3139B8F45B34FA8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="75FFBE607824C8DB" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="2E163F5A645D7BDB" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="235366BCBB7699B7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C094B986B8E53B10" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="D8EC929236E409FC" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="574BF3EEFF0016F6" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="3348D5AE6671561E" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="65011B4AA67834D4" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="BBA2E1EF82EC7A86" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="9F40E33A8B62607D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="8478B01D8D3B83A7" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="188D8958AC7616B0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="5456AC0E7E713BE6" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="B0D984A8C6F1B355" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="75E8AC5556FE1C4D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="2EFE3336A6C1772B" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="EAF705135F49EB80" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="CE4E7528B6105DF9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="62CAD3642B02E82E" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="98A7BCF210A6597E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="73731956F3B0AADA" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="8484C7DE34AEECC8" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="5C2B1AF36A54C7A7" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="C92DF23D93DA78C3" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="233C32EE0BF0C559" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="78A899FC6814D8D6" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F270F2FE98F00390" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C8EAB2FEAB1324A5" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="9287C65CBCA4B761" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="13060800BFA9A0D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="797199D3B147E892" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="4BE0D9A07270EC6F" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5F9FD27B70786F8E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="745C5868D0354618" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="CDB7A0F1BD912C4" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="9CCE080E6849074F" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="B584A14AEDE93F15" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="80125DD18FE03363" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="D49C4FAE465B8B50" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="A37447B48009A480" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="B7A15614C7E7032B" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="65AFBEE90CC79BB8" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="6A01EB0CA8E4126E" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="193869F8ECDD6B73" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="B2B361BFBCD9DF62" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="32551E571990BCD9" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="FE38AD33EEE850D" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="43E7330E71D79736" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="1FD79EF6FE190D34" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="ADE9F0B3D68E54A9" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CC92B830857E0FDD" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="3F02676A2DFCA93F" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="DCC1E7F4792D8EFF" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="399EAAF40901D63C" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="92056B7043A33454" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="9B984C5EAFF14287" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="A87079D02C132971" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="DC673385C40AE4B8" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="6FAC348FDF385D2A" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="B0B77AE85C7E6059" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="4A07F4BEA5CF6D61" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="82D1316CE44D588C" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="6A8445C317DFC351" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="BF02FCAEC4EDB726" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="68254C63518BCC90" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="E4EC5DF0FA35818A" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B6E6AD68BFF6A897" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7272EBB6D141F19D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F48AE6602C460F69" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="5648CFF22555614B" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="27AA3ABAAEEAF313" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="4BFBEFD44DA9F63E" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="37214246CD5BE649" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="23FB9202FC5C0F70" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="1A33C01F3F88E31D" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="A1FA8B170AE97A36" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="64961864A241DF11" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="B2D688FA98565036" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADC8D2972BA7B53F" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DF266FAEDE0DFCC" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="2BDF91B5F172D8B" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2BD53C042C77657C" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D47641E45D24124D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6CABCCF73CE107C4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E4F98B9BA4067ADE" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2494D6AA5881B782" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5500CCE98A7D70A0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="8E863707328516C1" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="900797F0A87E1AFF" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="1516D0B1821CFCDD" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="52B9F874BD76211C" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CE144214A1D2ADBA" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F2878D6395C5DF6E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="68DCF38A19B08498" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="1494686A695B1458" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B239EDB5542066BA" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="30D154E49813F8B7" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="B8BEDB719682033C" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC6C2F2C3A7409F7" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="B23B59391925581A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="C03DAF7480881E6A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="D85C65C1842FF67E" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FC5AA5E2422E29CE" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="DE970DDCEA3760BB" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="2AB787D3E58D7B95" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="D8B51D12740E2DD" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="1979B76FF985B7F7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="359DA13C6F3A0C11" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="969DFD29F291C330" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="28420E4EB793A85" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="3320B24056E0AACE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="1C9B6F50B987B838" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="FF51EF4CC7EB820E" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="883B892613E81688" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="7719385754DB62A0" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="D2891F77AEDBAA36" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="1923005E8FA267" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C8700E0DE4B027B5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F6DCEA80CAD6445C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="46F286AB082A8999" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="3EF97BD88EF93828" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="39DB8000D5A862FB" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="39A66893957F433" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="8A44EAC57C0C85C6" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="BD19B5542C9CF448" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="C6BA482A1673A0FB" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="B6B617886AF7487" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="FACB0B08E06A2E96" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="440CF3615B32A116" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="BF67232CF0DC8374" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CFA8A934B23E4F91" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C90BA95939EEFFD9" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1E5D490DB392B046" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C809B863EE040910" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2062F7D89E99B3DC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="B660221CE6F3836B" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="2A9B6B60FD50C525" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="A4E5A0E1F619111A" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="39781E0776287417" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="379511CEF99BCD2C" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="9CB039939B851665" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="18E2CD9974063265" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="AE320EB1CAE389EA" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="6CBE397A7822CF59" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="F0A7B8696450C5A6" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="5A3EBC012E8E275B" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="D094F35C47B7E560" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="11BD0995FB1A5CAE" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="33EBCA6B6A89AC68" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="9A7996B595923457" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="FC85BDD2C51FC558" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="16987269E04EB384" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7B73AD333029852F" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="7DC4B7E918DDFF7F" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="C69342C8169065FA" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="BB906480404D0F44" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="915445429D2DF03" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="449CE0BAA909C656" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A75694378813DE3" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="9F4E1CD922D90C6E" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="7BE8CE0390A6D4FA" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F475DC33066A1AE" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="74F58E6810324B4C" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="E9D2EEA08A8FA77" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="68EFFA15935D038D" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="6FF1A095FDED46F1" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="37023C88EF938C25" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="6459878511316CF7" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="8DAC73F2E8499599" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="528815BF84A7416C" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DB209C746CF856C1" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="B4AA0A5B2052796A" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="D06B639B028CB089" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7D10ADE7A61B518A" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3999F9BD6A8D20E7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="31D07D3411ACB5BF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="1ECE14D46633B413" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="BA501FC7C0EDDE61" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="49E8676514E8128D" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="EEBCB13C365F9754" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="7775A3EB2526A404" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="F229EEB8C1900FBA" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="9B7F7F385AFBF1FD" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="A43BA4FFC465069A" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="8C3489631A0C68FF" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="61AF79A7A2EBAA67" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="6B84F5DD7B8FDD2F" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="14F672C7B7EFDE2E" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="C5C8BF0B36AE62FF" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="670F60481EBA38" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="88A66765EFE3DACB" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="7AED94060FB35DE5" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="8342CD5CCE78EED5" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="BBA60C53A2D8DE82" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="E8C89B33C288A689" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D7C1A4FE69BB469F" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="4E7382C8D841706D" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="A10D85F9D7F4E4B" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="D33822EEDAD8C0A2" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="8421C8A7772EEE8C" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29A336F58D758BE" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="66468EAD746F395C" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="1561EE6862A021AD" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D1B0B50023B0F414" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E3C6476268F9BDEF" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="83CAA8ADF30CCA8F" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="CE3CA4153C3D2EFA" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D2981E6DD38782" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="3A7FF614D88A086D" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="7BB397E420D5A1A0" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="75F501CC2C521250" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="AC349D3EF9EB9D8C" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="DA1442337A72EC3D" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C25A51FC2334EC82" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E4C8C4BFB5010EDB" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="410DE80DCA00257D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A9E0A842CCF76937" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="488906C420FF9D3" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="DF7BE4963457A278" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="8482ACDBCD05BF96" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="67D92C8BA89CFF34" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="96E950A9A060A7D8" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="690D016C38F0DEA8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F823A8C59FBF9617" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="601846DD9CA71C1F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4668558251F6C0FB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="543F38E6FB97F66B" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D05E15346A627E1E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1808C2A4F55FEC0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6BD4773C30B6E060" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4E1496D64B4B0EC5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B4166954685708A3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BD37A211389C297" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="24D05BFA48DCC67B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="A4F46F502596761F" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="50879195D340F57B" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="201F955A7D3F413C" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6760BBFBD3AEF512" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="4E7DD99981BB50D" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9B83231415E975B3" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="A391E20732E39943" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="44429BA0DFD85A08" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="EB879EAEC9AA46BF" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3F461A3709445F6E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C949200FEA051823" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="6C48BD4DCC5C6B22" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F53016CA8396AE8D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="89095E68F6096014" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="620180EFC083FFF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AAD8C76560C93C71" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2232F1C7AB05B6B3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="DD61B8686E7DBBBD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="4A8530475797FF9C" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8A7E4499E07D353" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AA84EAF3601146D8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B3A1A65618ADA3B9" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="116A2A59E644E9D1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7EB88F4E0C368006" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="42C73297F0511FFC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="453B8C3BEC1E26C5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="81BEB7ACC6ED1852" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="466AA4F66AB12202" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D27650F382983DA5" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="CA03F9D6BFB03220" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7DC87C888A74563A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CE85862479EB1A59" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F7C1855A4AE016AF" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3A83F34ADA6DB2B0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="FC8DF2026C51142" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="39680288E5C6F14D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A60ED27C3058B3B6" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="50800AEC4DF6E3C2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9E700DD57CB21F53" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D5051E6F65849DCD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2D9AA63A4F09B038" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="ED354EFABD3411DD" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A2D867290FCD74D1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CEFDD8DA2B27FA7A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4334C423372CAFB1" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BBFCBABA1CBF3F25" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CC06A565A9723793" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D706E79B1FD8438F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5A9B01D9478A36C3" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="4C9A3FCE5D79BF29" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="EF9A6CF4FF3F1A79" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="ED4C705A5C4FB0EE" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="F96540873CFB7528" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="CEDD988E40584219" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <Tunable type="float" name="time_out" class="TunableSimMinute" default="15" display="Time Out" muid="CAD7C77B3B46CDF7" min="1" max="None" description="How long this will last." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableTuple>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kUpdateVariantTypeField" target_muid="4A6F12886A727EF" source_type_value="Specific_Whim" target_type_value="Specific_Whim" />
            <Action type="kUpdateVariantTypeField" target_muid="BA501FC7C0EDDE61" source_type_value="Specific_Whim" target_type_value="Specific_Whim" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="9DEA329191B1D2E6" new_muid="E924EEC8AC099204" />
            <Action type="kRename" old_muid="81F524B4915A76C9" new_muid="C07F0A86294B0952" />
        </ActionList>
    </VersionHistory>
</TuningRoot>