<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="CafeBusinessPartnerSituation" module="venues.cafe_venue.cafe_business_partner_situation" muid="575F1CCAFB840BC3" description="Situation for a business partner at the Cafe Venue." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="B31134B230ACD4F1" />

        <Deleted name="_cost" muid="C82DF8433AC3E9EA" />

        <Deleted name="_display_name" muid="470F2CC99FE0F82E" />

        <Deleted name="_icon" muid="21E966C01AC23670" />

        <Deleted name="_implies_greeted_status" muid="424729CA123FC7E3" />

        <Deleted name="_initiating_sim_tests" muid="10C4E5977EE11CD7" />

        <Deleted name="_level_data" muid="AA8BD3463EAF7AB0" />

        <Deleted name="_main_goal_visibility_test" muid="B259E5F289D212AC" />

        <Deleted name="_relationship_between_job_members" muid="4BD18A02960F2C1E" />

        <Deleted name="_resident_job" muid="D8407040A46A46A4" />

        <Deleted name="audio_sting_on_start" muid="64A359D6ACC25918" />

        <Deleted name="background_audio" muid="7AA27EC9996DF898" />

        <TunableTuple name="business_partner_job" class="TunableSituationJobAndRoleState" display="Business Partner Job" muid="C6384FCDECD2047B" description="The default job for a Sim in this situation. The role shouldn't&#xA;actually matter much because the Situation will put the Sim in the&#xA;Order Coffee State when they are added." Deprecated="False" filter="0" group="General">
            <Tunable type="role_state" name="role_state" class="TunableReference" display="Role State" muid="4734DB1F946480D6" description="A role state the sim assigned to the job will perform" allow_none="False" Deprecated="False" filter="0" group="General" />
            <Tunable type="situation_job" name="situation_job" class="TunableReference" display="Situation Job" muid="DC93052D3544FA78" description="A reference to a SituationJob that can be performed at this Situation." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableTuple name="business_partner_state" class="Tunable_BusinessPartnerState" display="03_business_partner_state" muid="49BF07AD333639EE" description="The main state of the situation. This is where Sims will do &#xA;behavior after ordering coffee" Deprecated="False" filter="0" group="Situation State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="A0F2FCD8B3640BF8" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="1E7FF3CAB5B42D67" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="F0A3C3B83D490263" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="E6C110BBD2C51EE1" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="7AFAC5A7D3E37BDD" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="EBF198EF810941FC" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1586F0506F2D21F1" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="359836197843C2F2" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="BF46FAF7D344B378" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="1F4F84B32916B971" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="C84BAB2F96A890C0" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="4969A43DFD9820C2" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="7A31AEAF4464EBF9" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="6A228C7D5C31FE13" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="54B9EED8FD3910A9" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="AB74325CD1D995AC" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="9C4B3EEC98715557" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="87DD5AE0ACAB857C" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="9E1B09DA8C43F22F" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="8FD37B7DB62E2E43" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="974B6AF5C4E512C7" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="47DBDC4F7EAA9672" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="D9B8976F09386EC8" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="3BE36E763F40012E" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="4A2AC45E8F3E708" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="C4A62BC365212AC8" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="6BCC9C4A087C9C7B" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="D733F6FE4C277955" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="5D14ED679D1AE064" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8BCCCDB6C5375EB" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7148EA39A4F85696" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="FD71A33649AD28A0" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="2E37B8DFDD436AA3" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="275E3F1CD2F0BD28" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="91DE0A0033071590" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="AA35555479B3A871" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="917B578E39BDF97D" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AEE14DD989CF18D0" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="886BBC779BD34A84" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="F0E5A1D43E63DF85" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="6461B3FE4B77F9B8" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="7BB5AB886E86FBE1" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="901B74BB39148972" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="A6CFC9403F0F116C" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="5CEE609DF97D1F00" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="1B39FA01F17E6BD8" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5CEE95DDDF054636" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="83EB9C6F8B97B193" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A0CD2AE1A577038A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1ABB8FD1B1E392E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="A18028CCA439A0DD" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A0996C52006BFBD4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8BEEA2E694A90DCD" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DA815CB5CDCD3A8D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A0C38AE01E7E5A10" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B56582199C865D52" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1C3B4A83E29CE487" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="76F6EEB61745DD1A" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="AA97FFB644507CA5" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8A2EEA2E2A6681E5" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A8AC23FF3AD49BCE" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3814499DDEE5C207" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="79455BC119226F3C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="29FBCD077C55289E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3281A390E577FD95" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="5470482581918FA9" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="318D425EC7AD558B" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9FB9AF0EBD891697" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="4C2D5F19D2CD3D17" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="FE5E2D6DFC6695F1" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4204F986BD50CFE7" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CA8ADBC81CE65CF2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2BEFD2C3AFC98809" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9EE80CAFF214266E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="FE3645B61D27B110" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="5CCE2F9864D444BA" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="41C0DED57A326AE2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5D22C38A957ECECC" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AB495927AD5559B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BAF85C0E954CE198" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="7D7EE9730F284AAC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2266191B0FCFCF29" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="850F398618E231C3" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4857231926A8FD6D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AD8D01C94A7315C4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DDFFC55776ADCE4C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8C302BFFF2F979BB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="185863A46FCB76A" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3411C0C4A97D7543" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7883A0E7484B939F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ED125D9138F036DF" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BA4EEF69BCC24B49" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="67132ED60CCB7A6C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F406E0D6D125EC89" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="60D933C39FD7FCFC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="234FDBE192A7B958" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="7AFA9556C161EE92" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="FAE3EF3905A5C34B" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="39465F460B620019" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="8D23853FE7E2C5B0" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3A91EAC45DA92063" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="9A3ACBD6920C7141" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="4126308C016343CD" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="E756A6135FA9AF19" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="26BD500607C6F983" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="4C46A0281472F03E" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="9AC68B5EC8DA3D32" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EFA6661904F7846" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D320B680D9294733" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="15FEB0129893EFB1" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F8D2CAD90B5B3127" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="C8336CC1F387416F" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="67C0C79F25823917" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="2C7AC57D21BB12B1" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="5DD83D1E7CAB7535" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C901159BC0050E30" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4A2C08C43FCAF37A" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="5819CE2B12258E19" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="27D9C56596EDD20E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="AE262A8120263072" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="1E11C2AEB4CEE2D8" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="7B9F1D6AACCB4048" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="5A1E43458CCA7B50" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="16C4F8E6E59CD64A" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="1950DCEBED0BB6F1" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="6278E02CA61A6047" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="C236B134FD845A41" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9E5A0A81A55CB41B" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="551B5119E76305C2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="8FE9F3C3C10BFFC1" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="30F8BEF9B5296834" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="DE96F37F6B8E87AB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="198FE4BED804D3DD" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="986EF6E4AFD1D288" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EA9566605E374278" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B479F08E4A882FDD" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="AED754FE00F824CC" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="52E8D9D5872CC0F2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="9BF0C378470DD5C4" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="A808B8A505F77619" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="EC69C1F2E05B01D0" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="7E0BEA262AD348C5" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="58325ACC81653C82" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BF1B1E9681DB4876" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="2157735945CA577" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="CFDAF6B046CC57AA" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="ACDB24B5349EBC" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="BCC83A39289F6278" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E0F5A1BD784E928A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8E69B6827CB6959A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="F7017CE06DFECDE8" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="C3F63D64117D7D88" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="355E5F0BF7442309" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="19016323E3A8E574" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="7C1FC13891BEDFC5" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="AA5FAD0973439442" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="E68AC51701BCB0EF" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="61E53129A81B8DBB" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="E2C972C7E037C4E5" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="2FD0AA1FE52A1DC4" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="DAA7C44A9F8DA563" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="E54660454518D867" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7B9BFC4EA250B6EA" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5253D9751E4ACF00" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="895D35B24418EFF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="845017A758E3765" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA3467890CEEAA73" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6BCC0C9207F70580" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="EBEEC8E791DAC51D" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1CDFDDE258EC681A" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="70F43CD6257542DE" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="22FC3EC580DB846" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="AA537AC396CFED91" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="925C5E20CC42AACB" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="540D5CAF420438C" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="F7F90805A91F3F4A" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9B4055745E9AF45D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="114AAA340C8FD37A" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7E0CB02581DEEBA2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="4BE0D315B723AA07" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="323CED34F7480FC1" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="BEB0EFF56A6B090B" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="B643FDBC0FBEE2C4" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="BBECFDCF61ACFD2C" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="2B83E535AAA2BBCA" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="E69FE7E3D487FD41" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="1CE5B2C2C276BC68" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="DE3331BDDA217F7D" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="F8BAA69FD5926258" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="20629EAF700DFE89" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="6437FFC6F251197" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="D90F69DD03880199" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="8607304302BB2C6A" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="71E2AB7013428121" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7DB072656DBC8937" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="75F9B7BFDA657AD0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BA1C6CF503313132" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="640FF5A363B52FA9" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A47CFF3ED8BF09FC" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="10944AC88D1DB316" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="2F9CD8363102AF6E" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="BA87B8894DCA1E8F" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="E351B16AC1B43ABA" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="709D24791409C0E5" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="488F1DEAF6495B82" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="2D48F65247E233AF" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="4CE39BA8F0D36E48" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="464FACF9FF86E56C" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="AC07F37FC6146D87" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D8AC30CD8D5CFA7D" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="B2057FC3CE994A04" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="8C7742D0FA1FC7E7" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3C0A9667336D70B0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="23BEB4C387546151" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="9DC79D5C8E01BA35" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7B72DD990F8786B4" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E264C43124486C10" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6D7C3C417E6D50B3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="E8CE6450D81CFAE" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E9FBACAA7475638F" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="B1AB5F197C3E7CC1" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="B4831E78454F76BE" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="B59A90B32723843" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="FB6C70CFE6824F0C" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="4B8719F4851999D9" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="3001D5995CA601B0" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="B9F2D3C702A6D635" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D63D5F31E3AC3434" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="5B9B6B64E03D3833" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="DFD3F48ABB620369" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="E412FAA9FC3CC32F" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="DB78191D67280369" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="614C9AF2404EC983" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="38C566807A9190B2" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="96A90DA77C209418" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="5D29A108E65253DF" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="E528D0DA290D1BC7" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="37CC88AEF39CC053" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="3EDF7391079A5B" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="7516F23058587EBB" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="5771BD631A30E4AE" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="804B8F4306C82D9B" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4864DB4F28850C00" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="39C57C41FC2BA344" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="A0BD8A5BB2D88293" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="993A31603FF4A5A4" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7ED1327C30C61326" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="868006C0596B2D94" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="C5ABE8034AC8AF78" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BC76D91BD9DC30DB" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="E68098F94FFB99E4" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="7C388EDFE2352C84" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="73B6350BDEDB7B6" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F59F0036E4A5DD12" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7474629E10C7B1A8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="39BE3A26EFA5A93D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="DEEF6C55053895D2" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="C9D25E632F728332" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="668CD5259F3B4CA7" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="75F7F688032EDEC6" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="42F70A0B9CA5BB1F" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="1310FC54D61E3951" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="79090DE38CC722DF" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="431F54F84CFE4FCF" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="383F1D746BD733B5" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="AF09F76416D62588" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="714D282086A141B3" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="F74B61CA63EA458D" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="870586A2BEFED01D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="6782F7D064A31762" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="B1C6D725B4F9FA8" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="139F982EB7EAF6DA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="4F673A051E406F79" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="F90E105D869A010E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="51BFD6FFE4A4C70" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="49E21FEFC358F534" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A939DF63EE85B56" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="5A24CCAC0C6D90D1" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="B75BC1B8CE5226C9" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1495B417030D1435" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="390EA539EDED384A" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="60B9236E23F188D7" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="6E13DA7619ABFCF8" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="17D06C2A62CD8425" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="5FCCF05E868C1B32" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="C0217CCD5A376E81" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="EB853321F94392F2" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="482AB14F6125FB2F" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="E05D19267FA3DEBC" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="998FD4D60958CEE8" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="8B7B1FB9670DEA35" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="1E9A7EBFC6EA6EC2" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D97CFD5A88BCB1D4" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="2DCF365572C6473A" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="AEF005FC562AF56" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="490C8289161C0D63" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FB87037B4B421D61" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="AE9F49BD448D77A4" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="84B96137F50414FA" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="3CB5A846FABE552E" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86C23D6339BEB973" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="5F87915F8BDD1D99" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6376C433CB509F4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4A37E278DE1AFC08" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="D717F41C8D6C404" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34729D09AF016046" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="8685727E67333C69" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ADE53DEBAC5B2201" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="9BDC6B7FBF0281DC" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="B70A9217ECEBFB6D" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="B8EF03AC3E481223" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="DDE208D2ED8ED922" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="F0247E5BD189A5F7" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="D1389E6CE09199A8" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FAC4FCC39784F54A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DEB02BCC6CCAF4F7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C2A6D9F48351791F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="336893EB71F49A32" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="5CB335484A6F560A" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="8181733B70F69FC1" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="D138315ADD52B793" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="BAC4128DD84B70C" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="BFC5CCFA20B16C47" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="1BC22DE02F44911" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C93A5A8E2F1FAB3E" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="92C79A7A23C4ACB2" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="A91D13BD02346DED" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD7715A2BF34E9FC" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="109FC67FF7C11361" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="F0877BC72A8D843" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="334FFD4D4606BD28" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="932FBB8E1C827D57" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="84B4433FBE164BB4" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="19AF1A12CE434FDA" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="60E4E7D451651091" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="65E3CB3694CFD3A8" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="73F295052A00C8C4" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="2C4104023CEE1F75" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="20D95A43B9FF28E4" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="25265F2BA2DC615B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="23347126A5939A83" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="4CDC9C31831E2552" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86C62BC302A8ACCC" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3D9F8A1D1F983018" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="21DB0914F5E1CD97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BBC62FE835C6A56" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="EB783AF82D093561" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="AB2F2CB9EF48639F" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5684A4ADB7215655" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="71CB059BC3F8A51" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="289E37A557DFF0C2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="A96B9477994DDCC5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="77DB227715702ABF" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F499F49EF0C5761F" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2D7929A526D331AE" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="C07B5B243BCF17B9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="2688AC58CEB22D7A" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F51D92DD3287A7C" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="93D5D4C55C6B702A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D83CBD60A54DDB6D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="A25A49847D11D60E" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="482FD1088793AA89" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="C1098F2E72C660E3" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="18BB765AC019DEFE" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D38E206D7AADD7AC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="8ACFF82E3F5BD41" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="B57284870632A0BC" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="F1EF07A4FFEB7AD6" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="749F582FE7FB6D4F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="105E587452954E67" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="866EACC0EBBA74EA" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="B45CABE8DF0AC129" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="254F4603D55FC4CB" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="A6D7ABF31AD5C085" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C3346C9CE5EF51D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="225AC7BFFCF27CC9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="A1436895DB582779" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="C49C108E23178B3E" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="2AE760351CB427D6" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="32347551BA19173B" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="16CEB12D8B892099" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="35259B130CB01291" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="48C8F95C57AAF50D" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="E5BC5C3FC62E83E7" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="609F7E7472265EC8" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D937930125846D11" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="65EC83628461E26" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="42102E14831E4205" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="E5E86B53003AD8B7" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="B6605248D8F0F0C7" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="D72D07798BF99283" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D9A9AB4D927448ED" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="538A455F6650FA57" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE391DAF4B6BF78F" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="D0566EA95DBAF4EE" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="F96D4E21C1FACC37" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94BAE1542A15201C" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6AFEF9CE7F917A95" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="1E2A626EC71FEF84" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="FB9CF5C608E218DF" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8D58248322CDE262" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="EF22A1B67CABBBBA" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="4A279649736007EC" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="18F7B540D240AAC2" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="9D9AB0A58D4559B4" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="DD9A3724501E05D0" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="441417E3C3E745BC" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="4DFB91FAF7507F43" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="4A275C6864459B2F" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="87049C44C98F5A8B" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="2AB9D0913139BA22" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="6163278880F2F2B9" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="8576F38393085B9F" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="B0AB63D73EA2057D" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="43893941FA45A638" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="1B55D3F7BB9C72E" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="644D6FECBB553BA1" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42250587A3008DE" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="72FB0F868AF0F4A" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6C224EF73A335260" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F931D0E982D25DE2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="2C30F4F4218015C4" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="59D352FF86F30C2B" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D5A0A331C2AADA5B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="410B7AB5D18FC13C" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A19D076CC3FB7F15" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="263A9C2FB0F1B73E" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F757E5CE2753B1C7" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="5291DC79184FCD94" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="C55CFEDE5F70AF38" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="3C762F0CE78295A0" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="BB5E0C391A3571E1" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="76DCF744707D6414" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="648A5FFD7D91BB1F" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="15E252BD9B6323D7" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="2DA92A0048660553" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="1F8AC9EFE5BBD55A" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="79E7B5FF54B78339" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BD68E12754BE7754" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="28D425736CC129BC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="EDEDFA9C444FBC6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="AB5FE9F235E6B9EA" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="7936BE5158713EBA" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="56778B5DE45324E6" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2BBCE1B66437575D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="71D5D41E4F12BB4D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DF9D0EFA7EA4C897" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="FC4A34DD6D4E4B4F" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="F344B065B928311D" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="3017000CAD3696BC" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="DDB66DF9C2C96F2E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="3406D19FE42DF970" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="57F00D43FFA9B5D2" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="9158B49FB5BC7CB8" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="B4F5AFD3EC99CB05" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="793EE612E39045E5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="B6D64483E3F45E05" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="75079707C1BF769C" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="8C9AE04C7591C014" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="2DCDCCF038812A30" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="E8153E0801A2799C" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F97DA5CD28C06E69" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="AD411B497A262E4F" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="83B01A4CCECE04B2" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="7169CEBA64D58E78" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="6E042FC3D2E25B3C" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="3FBC49BF4494A940" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="F253438BB81964E7" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6499CD51B6F2AB8F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7C62AE251DCF1545" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="B1340C44D5C36071" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8F85942116A79F56" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BE7194557DFB05F7" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="E38613709672BD33" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="67CF1ADECCD2545A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="726799EE513976BF" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="B9737167C2C9D9FD" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F1825808CB539046" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5DEE9EDF07580FBD" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="B7A55DBB1C03871F" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="933602501C72F556" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C1FFF50C10EEEF2B" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="AA1131CC8354C1B4" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="8BE7AAEDF0070752" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="DC6C73D595D352CA" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="C3E8B4E22AAF7E2D" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="795F9E3A6D44D4C7" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="EFDFAF29012CA017" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CDCBCEBD23F05A4B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4D8ECFDC6922BB22" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="44D0AF00B48DD2F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="79E53427C8DEC491" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="6EE015ABC11F1606" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AD0BD0AD3EEEC33A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4A4D2FBBAA59AF9A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1470767BDFC4BDED" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A93260357D722C72" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8524A863E44E4301" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1B7C08265DCEB495" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="2BB8319D6603FF5" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1597E526E58C055E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BD333A5B5215D3A7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8410A3EE1C8131A8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6A41600AAB82D087" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EF6D73E7DA769580" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="41498F4377703870" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1C4D21A2F4711C55" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A9DE051809563B4E" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="D7FF5AD6F58FF8DF" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="AAA2842731A41F06" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38AA5B25A5C07FEF" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FC1515CE74067118" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="8BEE5D6EF2510A7F" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="86EBD6A42E2AFF3B" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="10A787762291F4B0" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="98037220A2BFB358" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="1022163C853EF721" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="95067D7B8F0BF924" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="189E2732780A8D2" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="BDDB9FEC8ABB85C6" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="613140BBAA60D6A2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="25123B6425856A7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="7F479A337ADBD54" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="BA617BFF808778AA" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="E0DF1644D5C08D26" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="765190B012BC8080" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="B4D95B2D5CD17465" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="175E03A053FD81DF" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EFFA496C5E1022A7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="24C8E90196A0774E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="42EE413DAF344D0A" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="4238959A42450FD4" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="B2CD5484353FA995" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="8B7CCCC1178BDE64" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="9D034A7C47536BF2" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="528AB5DA860E81F6" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="FE7DDE7701901560" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="D8943F5DAD0E4AA1" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="C961B2C7327E2D6F" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="C6AA0D7FE5923AB9" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="845ECF13FDF3888C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="DE90FC39162E1348" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF3237C4C77A1A89" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B787E15403649D87" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="F0D2F222A3555C9A" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="5A5ED30AB96D3E43" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="1B6BA7D9AA3DC64D" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1F2CE7B8C904ACC6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="2256A0B35DF91E28" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="4F29FAF475A5A4FB" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="55CF3C5F9D6FFBFA" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="ADDB2B9760F0063F" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C3C535F482566FEC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BBEA00A57EA319F6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="36C9616EEB50D8F2" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="C0546BD964114CE0" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="8789FBF5114F5D8D" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="607B41A0B0D04068" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="43EE7AAA90616AE5" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="BBEE4E17918CB1B0" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CCEC3232F4984603" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5A863026DF38A9FF" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DB84F04FDBC7A3F9" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A1F7F0277C1F797" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8ED74E89C63B4F5D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="B690EE3D165677C9" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="86D2CE8AB3B55328" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="162C09BADF196340" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="63C36AB9FBB37AFF" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="E2B021BEE11889ED" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="4C1014434EA504D3" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="ACE2E29D298DDC1" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="72A153B43F70DC59" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="5A60597856B67F29" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="E5DE82C80BB1012F" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3DD522A000E9FCC3" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2F600BCB7A8EE496" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="66830254D6B8728E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="7F1119280E20C9D9" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="AD295ACC44ADFD5D" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2322EC8AE092A213" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8A729E3BD24A878C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="521BAC1A1C9BD677" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="33D6528B4CC1AC06" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D00CC69CB0811749" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8DAD78A0CCE78644" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="1C3CF3CDA8C300A" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="FF91A5E8E2714639" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7FF42FBDB73DBC8E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EBE11DFA9B1B3ABD" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="147EB634C84F326B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="8CB402B630878655" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="F0B82C194E48ABDE" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="8FF918FC91737B98" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D801789175126B96" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="77D1C81FAD38F3D7" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="91FF668908BDB2B1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="AF77076C9DB4DA99" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="87A77DADEA4B0E40" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="651DECBB9184E56A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="E00BAB164CA99CB0" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="9E71CCE68877C1FF" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="80C710892D14C3F7" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="838FEEA03228406B" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="B598BC9BBB4F4925" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="326F6998D8B6E429" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="3BC12392392ADA" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="C6FBDCA36F803FDE" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="65FD971E95559599" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="12D24ACBE2B66937" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="905CDB56C96EEE18" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="3D5D56287ED10531" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5277E98C262EC112" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="D75AD84D60CB84CB" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="AFFD55FFEB104150" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4523CCA69D09A3E8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="5E0FA0E1622E4EC9" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E2BA7314A9A64C34" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="3A9E60300CF347D2" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="A7CC87AB788A7A70" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="43AB99B4F48872C6" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="DDCFE3C0FB498373" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="E8A1714F0ADC7229" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="4A889531BB6451EC" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="5ABD7465C1D93A0F" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3C4166265BA2F0D3" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="D3B903C5A4B00BFC" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="E8EB53BF08E7FF94" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="15E0D19840891C44" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4AC17BCF82C32CF2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F6DD1DFE27F325E7" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="8C7FA7DEFCADE285" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="7CDFEE2E1FA6E3FF" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="6607D42905DC2882" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="689402C3D2B025A3" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F68BBDF1BB42320A" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5A353EA4F0177BCB" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6FD7D6778DBB81FD" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E40FF3F65E5FCFE4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="41E7DAB84F3C5BE2" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="8506D8F21BB75B44" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="E033D3E64AF00A56" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="9CDC4829992CC885" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="BD02A8F73B3A102C" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="2594DEEB27E1C09E" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D8161A7D6E1003FC" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4097548D7BEE8C51" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F1000747E4079975" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="604543FAA32373E4" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="6BC3633B999F5560" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="CE8589710DF5BEC1" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="DE73845431672082" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8158700E296ADEA9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B30259E97E15DCE5" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EF0580A3D2788517" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7FF758EB2CA891BA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6A5FF05735F1EB76" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="A459AE2AC92447C7" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="4ED33853396E13" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="65FF23DB6E0E76BE" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="630C417189C66BA" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="1EF586BABD97B64D" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="9D96F81FB0AF0745" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="54C6739147638B31" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="12794DA1EAE11099" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="11A272B6076CE51F" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="9E44532450362B22" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="BC51F2AE9718EFBD" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="A0E8EDC786B81C6C" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="DA784AB7FBE3205A" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="952294378A5A9926" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="23320C1D32075C4E" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="C30FB5B9725C5AA6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="B6E28B72CBDA71D5" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="C50BBDBA6BA6916C" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="17131357B1A288A3" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="D359A5F620410854" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="1F3C77844C36E9D" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="3531771FAF8C936F" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89664E1EAF24F8D4" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="6324D58B8A328833" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="3E4C68CA1DFE6665" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="45A56178306C900" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="4C9F820AC464AF3E" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="C3589EBC4E8C792A" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="D5C72DF3CB642CD7" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="2FB493B1748AD029" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="DA81B2DBB8F44F27" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="11A87BECAA609DCC" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="784833FF37BCA8E2" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="90DEF1243BF8C6BD" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="8CB04F88F408379E" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="57017CF8EAF1F665" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="CE95680B9C63F29" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15547A48E62D9D5B" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="F09E0E856F42E81E" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="D648FA1E2C7B1FA" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="18998764F8A39E0A" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="16AB32A6088F6805" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="EF32AC3E14418695" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="26E2A7C79433567A" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="BD1874373EAD6297" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="90245C06B69B6389" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B3F5A3CD098503BD" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="6C2D638B6CA47932" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="33523CAA1A2C3FA6" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="7D4AB235E896BCA4" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="C00378F4A40479BA" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="3EA34CEF8AC5506" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="4EF8B67D40973CC1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="D01C6F6979FFD4A9" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="A8DDAC83DC04F19B" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="ECBD1FC6C0B96B48" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="1D70D6354CBEF654" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="86DED43D17BAECF2" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="F1CF8381B4BD8685" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="3139F737D995F80" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="42D2B0B578C84E2E" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="4C8AB56051403E0C" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="2F7C0C232BCD5382" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5CD7F7FAB63FEDC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A7203E65AA75BC2E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="F7D1C483CD605F61" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="E73F0AEFC8D3E4AC" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="9CDC19D3474A0203" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="A3C78513255DC52" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="A52ECBCD599715E" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="F044114ABB053260" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="24F38837BAF12898" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A18758FF68132A75" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="37C473C376F2A17C" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42E41CB5C9342F75" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B96EC567AAA47EE6" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="971A435B66D6EA58" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C06E8493B54079B3" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C1CD2FCE504D564C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A8F7AFCEC86712E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FD358EAFFE3811A4" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E59B4E9E1F311009" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="789D09175DC885D1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="DA74EFCD3AD64F8C" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="672BA2A743F25179" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="7916EB956865F360" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E992CD0B2E3EF66" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7BC4DFF1433790CF" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C0726F96B4A43AF4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="18D613D103923FAA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="B0E154F7A36ED152" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="876E1F5101F193F" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="6C2C5CFDD5A98D5" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="73CBC52927F7CD2C" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A58A5AA9F7DCB142" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="BCEB82B04B75F1F1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="99FB988EB328AA5E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="8F50D3F6DE8C98CB" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F723827A89F4BC54" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="9FDB180AB864DDB5" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="19468BDBC43A8722" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="808F94984BDB56DB" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="EBB917E4FA39586" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="73A7727C724DD2DD" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38AF3C468A6546EB" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F2679DFD90FBF14" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5A1F51DCEFA05162" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="B362F4BDD188346D" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="B5AA5A428C4D52CB" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B1980B046CDBD4C0" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="264C60DE000474BB" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="6E509324295EE43D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="ECCAC3EFB45403A9" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="146F20DCF4AAE32E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="92ADF79DF260DE25" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="4333926C7954ECCB" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="14A6F0F84F82CC3B" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="CD20AC26D43A5911" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="F218419756B9AE2" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="A03737D8950B8E52" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="64EA15D5C061311C" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="4191DA5378F93299" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="DEC2509DEE601EC5" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="F3DE01B11DD04AA5" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="EBE53CFE05124B72" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="65515A3434AFDCE4" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="806CE64211B0B7EC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="AA7731D613D46074" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="4AA1F5EEEFCFB66E" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9AFEDCD56BA1369" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FE00D785079DF94E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="5FD2371DA18236BD" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="9ACA8DD6AAA37AE" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="6BB786B5138BAD0D" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="A82C997B21DEFD7A" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="EF3A970924766F9F" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="EAD9D2FC05BC4559" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="45B164D06E8C610B" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="4D17ECE2FBF24770" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="4F79472D5B177E9B" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="6EF5EEA71B11D9E6" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="15DDC54574BDD1E1" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="99A6B66EB5B3071C" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="14743B30DC1F6FCD" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="C219476B689FBC4A" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="A20B667973C7C48" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="6227D08904DCAEE0" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="593BFE08D843D284" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="848C4BA29501016F" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="AE8B99767482A003" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="491BB00E9F825A38" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="EAB311228B6CC92E" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="D00003670AF881C2" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="2075520E52FEC7A6" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B8CD4D86E85F655" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="5EF909D5C618E685" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="45A7282B6F926629" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A89BCEEBB8FB7811" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A6A652F39F3F7AD" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="E36D419AB13E6A00" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="4C112EC4461EAE7C" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="CEAF454E80564AE6" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CE3293266038C77C" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="DE53AE332275F3B1" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="C64AFDBF13F28B2D" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="4000148120F6E625" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="74610273B5880128" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="582B9204F1B97FF4" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="9AD65A437B277E0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7F7BD97CEA0EB895" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1B8C75738797513E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F3340E46EE04A7E5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="50826BDDC4119EDD" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="4A75FF0E6B2587DB" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="3600C796F70D16BF" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="A5BCE3DB1DF0101E" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="A32E4CEFEAEECDB8" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="95E6983A02653F56" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="7C4D28CC2C53DFC7" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="C8F1CDDFAB76EE22" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="EDC5F5B8D557B35E" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="6F4155223AC79BCD" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="31E203E02A97EB7F" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="C2567A9AF8AEA072" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="B1032D4BF9992477" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="A4E27639F3B702AF" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9389E54C92DBEEC0" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="BC3CA26E35FCD9BB" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="C69C462CED68FA27" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="B7A2E63FD032E51B" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="D99F868DAD24EA80" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A37941BD856B430A" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="87F7F093F858864E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="3EC3C701287D4C44" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="6C2D9FB8512AFC63" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="33522B5727F118A0" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9C78EA4470BE25D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="941233FC77CC0EBB" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="ACD91037A937D66B" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DD5A3B0CF6D7B0C9" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2C12598CDD8D776" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="8614B8B2BE795228" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="76CF9873256DE996" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3774DAF97ACF1C6" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="1AC1A895953B8C2B" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="9A1610ECF5399D" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="28760FCA57FA0597" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="CB05E3473AAFD00A" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="2860AAA53044BF84" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4020EAD793C8DFC4" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E9FCA9ED45DFF5A3" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9F579D9C5FF0DA2C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="715C2879DFEF2A04" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3D79E029F0F409FE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="333D0112D128F174" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="903E74197A261895" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D99B9C39B60E2BB4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6686FAD5D812A30D" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="92784D4F27F0FBAA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1D9A37DE79A3DCF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="41E5198AEF002036" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BD40E990B5118978" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="91C25CB71F1C4559" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="61188A81E1062DD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4EA9CAA0B38C7CED" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="34D88D568CAA6EF0" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5080F386C2AD1A0B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="96BB31F2F59871BD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7788FACFCFC2B204" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1CAB722522E712E6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="2AB4121055EC45B1" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="483F87CACA9E597E" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5CF82D66BA646B05" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8A22B15099F09BCD" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="8464B89701A90EE5" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="578EB4BD1D290456" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="B71B52CBB0F4D8C6" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A6DDFB39D73D2B6E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="87F01BE659C7D618" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A32462C1043D4F35" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B5AFD7BFBFC46307" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="93C392DFEA130571" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B83D610205AD623" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="207E05CC8BA86AE2" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AFB9EA1F3B2EA8EC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6B86BD937A051996" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2586369DD1644550" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="476D7D914E76A22E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="C68C880E74A72EF0" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="B27A6CD211C1076D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1309E915E75AB446" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4A9E2D9227A4B0F" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="69DB29BBBF596296" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9C788CE49DAEC89F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D5047BD84EEA390C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A40446DD25878D09" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="AD7792C19EE4737F" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="B98C554B9B89BD43" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F303E4E1E6C96C75" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="4F37E02976A25D11" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D4B326B5CAC3F043" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8A5FDF99F98FCA5B" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4966B403183565C2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6A07A575E4BABAA5" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="F90867F524832A4D" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CBF4C1B24870FFA5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3C5D7553F2AD285B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A4146ADC86A57B23" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3FA378FFA0F6F344" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="10423AA92AAE6E7E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="137DC74A236870A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="31E26E16298EE479" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9F6DAC6FD0EDE338" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="55F89A2038B00356" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="59CEADACE6C54FBF" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="307609C545F184AC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="35EC24BB8EE2ED05" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B35CD082E347C0C5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8E4EF94524E2AB25" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="B527DBC2D99E3411" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="5E5CEC7F0A8E874" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="65E5943C70D114D5" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="730FEBB0FBE74A33" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="4AB1654326052D8A" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Deleted name="category" muid="4D84C2D3E3967FB2" />

        <Deleted name="compatible_venues" muid="45E14970561C9D6D" />

        <Deleted name="creation_ui_option" muid="16CCC7B67301C29C" />

        <Deleted name="end_situation_dialog" muid="8ED6594914018E01" />

        <Deleted name="entitlement" muid="E28AC89477EA94EE" />

        <Deleted name="exclusivity" muid="BEAB7A2B3E4B1344" />

        <Deleted name="force_invite_only" muid="261BF719326480C2" />

        <Deleted name="goal_button_text" muid="406C1B724CE42DD9" />

        <Deleted name="goal_sub_text" muid="D6E642A99834372A" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="29FFB3574FD05BE" />

        <Deleted name="job_display_ordering" muid="AA5F9E4AD0608C51" />

        <Deleted name="main_goal" muid="2D907DB1E40AB14F" />

        <Deleted name="main_goal_audio_sting" muid="EACBD2DAAFFEAFC2" />

        <Deleted name="max_participants" muid="BF92CE4B52EC22A1" />

        <Deleted name="minor_goal_chains" muid="1F5A38A527B61F7E" />

        <TunableTuple name="order_coffee_state" class="Tunable_OrderCoffeeState" display="02_order_coffee_situation_state" muid="C2A3A99141A2A27D" description="The situation state used for when a Sim is ordering coffee as a&#xA;Cafe Business Partner Sim." Deprecated="False" filter="0" group="Situation State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="485901CE6F098BA2" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="C6972AC7172C0FCF" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                <TunableList name="affordances" class="TunableList" display="Affordances" muid="C24699D689D9EEA6" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                    <Tunable type="interaction" class="TunableReference" muid="A20B78F1A959CB2C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <TunableList name="tags" class="TunableSet" display="Tags" muid="85A22349A3F600E7" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2DE2CAAA42DAA5C9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                </TunableList>
            </TunableTuple>
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="633D9E14732446C8" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="78BD30CCB4C838C1" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="8AABCB635CAE5E57" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="71882AB29CA69D0A" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="order_coffee_timeout" class="OptionalTunable" default="disabled" display="Order Coffee Timeout" muid="4404469DABFA75F8" description="Optional tunable for how long to wait before progressing to the&#xA;next state. This is basically here if you don't care if they order&#xA;coffee all of the time." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="33FAF8C4639DC3E6" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="60" display="Enabled" muid="B243FD2BEC9ABD89" min="None" max="None" description="The length of time before moving onto the next state." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="17356FA4FA7A63FE" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="26335AE4B0567F5" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="CE7BEC6F90BB85A0" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="2F5A9503ED8C2A3" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="D0122DB89707BB1B" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="49B5C10FC5A819A1" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="CCD7E5564EACA4B" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="1085DDBCC8EFE51B" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="5F24D53B694C1891" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="D5DF0E7041DFAC48" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="4E47AC0F3409860" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="7233C43446988885" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="99B0630A6F3CEB2A" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="DE6BDC3D9F1A732D" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="5D52E410916F669E" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="722527BBC83058" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="C6701CA483BB5AA8" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="719BACD8F08C04BE" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="8725DD0D6FC94D75" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="434AB8642D657579" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="C92C06897A2FD7E8" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="FD48A3FB99589C8" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="ABFFDE28FA5CB501" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="A956171BB7AB7B" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3CB791BE830120DA" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C721105F85B4082B" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="4271A84544F25389" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="A7D36D674AB7C0C7" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="50E85FA4F3F1846E" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="364082D0F067F55D" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A84057B011EADDBE" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="D2CF615BDA1F8EE2" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DB31B6655D0FF5AA" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="650E521AEC53C1EB" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="4E2D965031383430" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="BB3AE6DF67A3C65F" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="BDE70BA289979C80" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="57F050A1FFA9ADA7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="AE313FA7E85E8B45" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="FC1DFEAA557D0B8B" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="6230F5E73C34493B" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="AEC75F254FBB05EF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5FBC3EB57A5A082A" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="DE92CC46F8310537" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CCB164D2A72DD973" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="7B8F0D220B15F846" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8D2FFA676761620B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="99B3ADE10A82C49D" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="794B1D19CD346842" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5D5DC746946D3982" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D29BAC9F93611E1B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="505C8471BAF8EC7F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="42E4C2CC7CA750D1" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="FA5DA6BA4849255D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CA6D6691487F0977" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1A23A830C7FF173D" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F1F42E900C684781" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="603C3B2E34C45021" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9D4282FB957D51F1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3EBEF4435F184494" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="DA7C16EAEE034111" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="B25DCBED9C3BC9DF" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9DA7C199E93FDA0B" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="AA2682C58B5E0CC6" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="BB9AC27B0D7AC3CD" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="336B3012AA447C5D" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5E97BB874C2AD533" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18D8CAFE46826141" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F5F73BBFD5F49993" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="A76F9DB92508CBE7" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="ABF896C576FD8551" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C72A7740F292647A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7026502321FE5F62" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4131C44F68EA9E9D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E9CC514B3EB91D52" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="49DF5B01078F93E9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7CEAE3BE003BF96B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="219B80DBF2036A3E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AD27F525E3F34E74" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3BB5AFD3A4788B41" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="22DBC7E56DBE4595" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="389F32FA2C6D1A1F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="E8CAA71B3C435339" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D08475E75CD3A71A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9353B16B96BBDD1D" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="55973F9AAD26A6D7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B886DB69B547A7C2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B73DDFF81474A0CB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="304A45EC1318440E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="24AC4EEEABBC15B7" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="1399AEABD85A3EDA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="A489B8ECF76D990B" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="8566FB38AAD54EB8" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="F051FA76506FE450" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="301EBB549280CDC0" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="21E3E137446071EF" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="63940E56E9E86890" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="8DE9F9B674AF63FC" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="368AEB512BFB544F" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="E6F5ABCE604CC321" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="9C62C2DB44948E0F" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="1551A3EB7B64489A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="F9358FF46E4CBF6A" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C0BDA54C3C28E02" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="9F7B12FC237D7A5E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="2F956ED5C27B25FA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="E67A12DA085E16E2" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="B5AFFD451EBFDF2D" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="574DFC4F3E3B32F8" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="6EA15D6EDBB8F0F8" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4216E1C9D55BECD" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="7CFC416A9D922037" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F9A9E48079E74D3B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C7A747B7E6D72D1E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="E4E9D0B5BA432A54" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="3D64097EC47F7510" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="F6BB3C1DBACA24F7" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="D7B504160EB6D76F" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="8FB9974D3FD4CE15" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="D8802A909BBE5364" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="AB0160C760205019" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="C99388F7D9DEBA1" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5D545E2D16539B15" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="537B10A737967F48" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="49E3CE770BF73ED8" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="5753AB0F04DCA236" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F32AD91D17CA89D2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="171F1521CA4BD1A6" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="B7A8C24F012634DD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="C895964F9DC42F3F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C42EB8E11E3C4174" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="69F41E9E63F22CAD" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E157EF00035EA0DE" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="F42FDCD023E64616" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="D269B690F5B6EA9F" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="6AA703E5E79468E7" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="90928CCB1BD9C26E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F19F0DC662900A40" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D49FCEBD5F5A133F" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1925DFA974F28409" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="B91A37E4DEF279D5" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="81117B9A17F9CA64" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="47E3DBC9F4264E2" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CCEBE5FD7E3465D4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A75DF45125A57CF3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="E596850DC01960CD" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="E5083BA664BBF033" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="FC80EC6C209F4710" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="8BE1A411ECF48E63" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="9F04F26AAD8DCC4B" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="22B96C1D582249FF" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="AF7F6926E6DDCA8B" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8F36FCE1ADBF0C22" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="38A50722478F52E4" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="456B3B276B8D72F9" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="9B4B04A8D6B0F0D5" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6C588EAB5AB416D0" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="147F1D1857FD6E41" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8438199EA2E3DBDA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4AE35AA1C0514200" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C37FD899B3448750" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48CE403C55242F35" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BA041A9701D7A804" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="CF0FC0C733CDC955" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9C02D26A43B2542C" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3153A87FE4512CE1" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="D12DDD786DB3316E" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="98DB9D6B52442B04" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="EE45C1D85965EAB6" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9958C804E5919818" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="8FF5FAF8FDACF612" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="729CC23802A0246F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E74E3C70D5029F59" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="82FD7A2601E14F00" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="FA92592CF8422680" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3080DD1008D33887" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="47EB9316094E87C7" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="AD43641CFE2FF17C" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="C822093E55F91A4E" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="3FE4D113BAFCD549" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="B1927F30EE1CA7E7" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="C05F2545F8010565" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="8F381AA05B06A5F5" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="3D2B7CCBDC5D2159" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5108406329E6EDC2" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="7209C55D14FA4253" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="46779A12550F0D2" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="446F017280509C7F" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="4DBAC8333EB77E30" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F702298532CF6B18" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="47AE01620B66B884" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8F2453A687399A29" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E49EE18EC5DC9496" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="596195011EBA530B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="CE387982E2E6C341" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="5F7594C44C5FDDEF" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="881B773337761AD0" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="A0B69B192FC2425F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="7E1937223E93EE51" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="EB9F613996669F95" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="41F95904B57741A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="D1C78969092B4F64" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="CD24856FDB5A9D33" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="E716FA1F2BD475E7" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="BD2CFFB254AFDBED" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="8EA1F97E1513DE44" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="86D64221A5A88F00" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="45CD3AAEDDE19342" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="77AA0143AC30BCBA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="5E5A6B2533B4B247" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A4E04CC3C0765E9C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B655920DDDF53CBC" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="59C5EEF219283BF3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="D1E01A586198BF20" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B7555433C7A01C66" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="CB68F06B59A39AE" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="84BFBD9130C1F574" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="F062086E5A39434B" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="D51F79F8CD864F1E" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="27102BF3C31CDBE8" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="135C4B77EF16775D" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="FF2D3F05151EFBF1" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B6485B4AF472AD09" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="B5C4610CF8E50743" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="1DB30B40E3ACF76E" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="1FF6181405D50162" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="752EB687318A540" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="AD07B4DCE78A4B99" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="F85C8B4BE41158DA" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E9AED2872F5B001" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="B8A7012E7F156D82" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="B3EE6ED61107D43F" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="261F7E20F65C527" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="6BD98598DB75B00" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="EA96752D99C823A" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="4A25B7C8B8BA3078" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="3F8A06C8D9C1724F" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D12FC473D881C01" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BE8EE3D4AF5DD0B4" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="8CE41AC1060EA783" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="E82E95996AD2D404" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE9FD7CF6AF6AD7C" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2D4522CEA38A622C" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="2AFDD6FE39B8EC3F" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1AE7CC47749B21DB" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="8D0A7D257E526211" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="E4477AD4179BD9D2" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DB951B316DC73528" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="266B230E5C8D4321" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C4393FDEDE8CD76" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7AB663640FFDB743" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="2DFD644DE13C2563" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="5D9FC2890A7976F" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E4A280F93539993" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="19F1F6D3C01EF079" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="C9A6BCF4B4A3ECFF" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="5FEBAF9649E5D40A" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="A35D97A4ED81F8BF" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="E5A295EADE7ADF8D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="5C822F9D9BF00A45" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="AB9A5E38EE873C58" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="2E1C0AFFFCDA38A4" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="47A40DA04E72DCC0" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="A90159298AF2745C" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="D4031AFBCE8E9CAF" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="69CB8694080F45C5" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="72A89E59E286CDFA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="523AB0ED71BE18F6" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="A05261B35A816180" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="F4F3A0198E13442" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="E53C4423DB2DF4B6" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC3FE0D8A99370F2" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="710C360C2539B2D8" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="D7C56D8EF5591E7" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="4F3EC6EE7FEA72FF" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="3E6F85450A4B35C9" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="D2E3089855BA6100" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="7D46C52B336D591A" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="176EC6DF571AF440" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="6A0D9B50D950B5F5" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="18D6427E0B5E30C4" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="150CC5DD4670CBF5" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="9B411CD4BAF972A5" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="4C10B304CE39E6F" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="F1AEC1F24A800E93" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="7AC9FD34AB8EF153" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="299A9C8EAC8A9313" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D232E2A064C4336F" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="3EECE902CF227389" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="BD57B4D8E35D8277" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DACEEF9EEF530DFD" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB328361B7BC38A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="634AFFE8385909BF" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="1B229F8E6C56B009" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="34889A7CEE93197" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C85A122D156944A" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="34C174B945C1849B" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C3A8732FF014084B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E7ECF2FD4B0122E4" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="4524FFD2C821508D" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FBDC5E8AF67C6E8" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="DCFC15DA905DE792" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1E0F8CE912DCC66" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5F7E8688A042159D" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="64AB7AFF47129DA1" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="DE96B46B1F3BF058" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="F55262733893E7D5" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="E54F85FED42B7FCC" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="CCFC847F7753232A" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="62A4D15DDD8E423" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E57176234EEF2166" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="272CC39A10280856" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="FEFD5118ED8944EF" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="335B1141A54F9651" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="79ED53F473917BBD" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="49F17202BDC27B9B" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="F6C3869449946940" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="F7AC6A74A78B02A5" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="65FBD0EFB2117FAE" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6EFC58304CF666A0" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9B4ACFA39B925106" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="DF13D2C5F22BF2C1" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F36AD35B927ED1A" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="D600B717E5E8AE36" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="C494E0702897F84D" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7317882C78832E8C" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="44B202F9475AB7CF" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="6C0D267BB21EC4D9" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="86C4989093B8E4FF" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="123BF26887B77716" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="CFAC8F07116CF558" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="15F38161B926377A" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="9C20C7BFDE443317" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="804381CBC4ABC57C" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E3F3EA1602BD80D1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D0452859F2D33409" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="1F2ED2B33A61DF1F" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7B748DCDC0F75F28" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3975F1773DE0C1DA" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F4C87A0D0233FFE2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="34E1C402DA99F9B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="3D0BA4F85A4EC7A2" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="686A686A0C15C7D3" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9F47E9153FE5BA0" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="35835D1CB5E54D00" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="DC63EF5D69452406" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4729F3F1DE09FEDB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="1B450B4A231F5B0C" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BF07697A3FFF5DDF" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="5F80B72E58A78EC1" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="E573753FB3018099" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="9C8B8E4A12F4E559" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C78EE26353A89F62" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="66FFBDEB48A950AB" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="78F56A20D308884A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="480A1660B1F1C813" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="B9106D44E0C1959F" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="77C2DFAD08912E04" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="8F1497622B9816B6" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A0F9C3491C35E7FD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="AAA9EBC8FFB45192" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="F217333E7B91E5DC" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C649D4A1E92F8600" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FEE7E6F00296E7F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E279623927FE2D98" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="A9EB283CC5EF9C8E" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="476FFEF7F8AD33D3" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="2328547347803B87" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="54C1679A00178AD1" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5D1A2983BED2E7BA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="4F256320100F627B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="8DE227ADD141250D" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="10924BE9C367506E" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="8160FB27F66B775C" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="D93F93BA40C4CFF3" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="7722F209474F3307" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="7464A4B6E94E564F" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="EBD10A5ABC3FC3CC" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="C95C759F5C114470" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="97C8F4094D428B43" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="AFA1AD1F6AF25DFD" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="B3DDCC10650308B0" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="91CD29B901B2EB67" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F6AB458B9F683035" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="E871CBE1976895AC" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="45D0CE821FDC00E9" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F3E86FE48454D662" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="918F8E4A1C900C83" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A234C702EB8234AF" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="A96011820BC331AE" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="478D3DEA2E5C734B" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7682C31388356C2A" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4CCEFCC1A6BF9B01" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="86C031C21C70B5F" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="5A19B1761B2D5860" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6CA5D2251CD61C2D" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="1CFC42AF09C02F4" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="DA0ECDEC57E9E37A" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="C2EA1987756C61B3" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="F7C1C03BB5D83593" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="C3A820459378C80F" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="3E551F96A4CA9FB5" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="F460EA912BFA110F" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="145CDB99EFACFA31" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2DF40F06F299617D" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="2E9C57F74109A0CA" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="1B0C6078D26F533A" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="6779F6CA300F6413" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="B8D96A1F648D537E" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="C9E2DF97243D2F10" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="BB882C6675D2E251" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="5B0848788400E418" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9CE1E230CC0C46A1" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="3EEA13C291A84AAC" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="328A2BE233C93614" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3FC0D3C84DE0E55A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F6A03CAFE4651E9C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="3F9FA91AEDE12231" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="97042C741296CEF1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DDAC2FA7593ACEA4" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="53594AD4C00849E1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="97B8EA41719EB61D" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="7DF92C9690D651F5" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="2B8FEE998B1E5EC2" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="35D51DBFCAF55019" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="27BCB3EAF59865DC" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="7F07650B5E76B47A" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="92F7D664ACBF27F1" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="E358F84B7AB44479" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="DA625B3CDF7746B9" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="58F6AF4551674B66" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="AEC9BDA1CBE8E97F" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4687FABE8F1023F4" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D49F32A96EBCF7AC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C4FF63E27C061F89" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="7C68B0845DF467DA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="E52DB27AFE959303" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="6DC99EC3CEB0A788" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="281C73CB56F5D313" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="395693EE48A9736A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AFE124E702FE4B9C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="56A44E7FB0C948BE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="D1EB918E22BA6D4" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="CD0D772A31B3D20E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="416066B6FD62D4A6" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="3F7A46E9D9B03B61" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="C0AE32910B23997B" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="DB37A1E41E72A5E4" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="C66858EA9010F127" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="E7833FC427326AEF" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9E1B92EDAE543193" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="BDE888362E847CC5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="F142A16851D3247C" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="32BE31F3268C0506" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="56A7E25388C7C117" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="E45B8379DE68CDBF" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="689C8F949AFD7EE3" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DB8C8292214CBA41" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DE6043545D49E2D7" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="2B6A2C4DC0A1D69D" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="4E27DF422FB59EA3" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="C7BC2852A0631D4A" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="58179D9ABAC87E4" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6E990C15D2FE78BE" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="65ED31A664D63AF" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="E3EB3168E628845A" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="804DE7B50ECCAE27" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="103D464E27A3DBE3" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="6733BDC1AA730481" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="883FBB865B64CF3D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="12DC62C1EA96947E" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="9ADF444728250100" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4021915924E18905" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C846372F17F7D5C6" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="65A096501463770F" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="86DFD69390BB5B5C" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C89BEC20FCD69338" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F76EE7560642A97D" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B1E615356567F3B6" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="25EA37CE8DBBA29A" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="700C7A45D742A18F" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="428AE9998239A5AA" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="5930ABDCD3651B87" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="DC3FB793157FE67E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5CF3BEE0BDA24FE7" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="98F8EDB88F472DC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BBDA81088F9ADC11" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="AE73E128302DC654" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AE4FB1F7C71545A5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3A937BA3CE53CED9" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6586596C7C9ED0D8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="70A5AC000E7ED11F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="653B8AC2378FF46C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5AA0D5A3FF77A603" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F8E20D8B3EF1DA1A" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D01D292CD49F439C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="84EB8426D491B036" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5278A361240A2590" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FBBB70D28773E645" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="602C340072E96A6F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5EEC535A25C75B4F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="80A0C4C3F8AD0103" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="C16097481BD13AEB" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="2C658DE5D2979774" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7EC9D9484321FF73" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FEDA41ECA7293F0" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2E35F987F1563235" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="27C4D9692492DDF0" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="5E73C74C6A899E62" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="C13C474846453656" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="64D83E9B28BF5BA0" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="8676BBBE85801108" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="CD1C3847FC4697F0" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30298765437652EC" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="BCDC2EDE492ECFAB" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FC5A2C285F20F2B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4F44DA22D0F73CF0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="F8D5CBF1F7675B7E" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="B1AC4BDB3C6F67BD" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="593C3B311848107F" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="6A12FA101E6C0E0A" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="A3F162B6DD51ACA" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="659B9205059BEAD5" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EE3264B78FB66D59" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="4DD05DFA8A2135CD" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="A7DB61CB1B2A7817" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="5F951DC2E686C81D" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="86B4449E8A290CFB" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="623538ED57E8757E" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="B1E7512779FB50D5" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="DF09F0729174DE25" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="3CF02363A8AB3D60" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="28089E413BACB7B0" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="2DE33D1A5BA0E22F" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="83AB478F88458591" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="230D363575916008" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="28FCBD269D8DA3EF" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A4160EDF0F447D9D" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9DC39B31485400A1" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="BD8B6C9727BB12B5" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="E387413C80CC1E40" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="3AD875A88172AB18" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="10A8A083BD15CE25" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="580ACD35BBDDB142" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="EFFF8A5D2A009B2C" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="64F99087D8F3452E" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AF46E33BCC1CA9BB" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9BB476A26C65DD9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9160FE96CE7F282B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="CC9D713B03D65938" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="3D44146810BC3B63" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="A23F867D5D7050AC" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="8EBF1261E1ED1BD9" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="DC985ED99C3E655D" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="E9EB4F87BF431AB8" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3495EBCA484D0329" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4DE74A417ECA8DA9" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EDC85F89E3DC4B" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="15F6F60EFBF49FF0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B7E1C2CA09C18371" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="82985F75C938718C" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="5C06A5E5532275DE" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="3B6C666F000DAA10" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="68F1F0DE6791A121" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="3E87C3416F46BD3A" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="87AAF50FA9BF3153" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="BC1801844332CC3B" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="7D251B2AEA3A43F9" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="6E4FEF38B1F49CE0" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="84FDF69396262212" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2EE4086846DC19D3" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3158D4799A4CED07" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="EC10FAF83742D03A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="642E17159919615F" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="2C73D364810824D" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="90336F7FAD3F5B21" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F81AF92F655EEB7A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="667B771123625FE2" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="59626DF1F24B860E" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6F005A5B726835B6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E63CF71F85678E57" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="8EAA316B7B85E7FA" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="103EB1E374D46B79" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B53BA7DDDDA1952B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48C4002C0D1F0187" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BAD7650C1D6B8273" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="D24F79516196CD7E" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="241F5CA06081D474" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="77E1691156F39362" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8566191AE3A1EFAF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A8A7B6BBF7851B7F" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4BF95F9E980A4E80" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="266FAA205DEAA7E0" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="6998CB3C123F2D9E" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="2B09E1446CE11AA4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="A9116BFA93D4AEEC" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="95383C5AF6E6733A" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="F9B0109E9B91BF1C" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="2C6170A8696EAF93" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="CC250AF0ED724281" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="AC0A562E9E494E04" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="9F681A10D1E187D5" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="E11815B4277C83BF" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="2B4BA2F7106B2343" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D7172D9D96C243C" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="A27A60CD1911D4C2" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="67176B1208FA159B" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EACDA43709C78F1" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="CBC6F6442F7D1BE6" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="70BBD8E4CA911E40" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="92C2A7AB058F1A79" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="1CE6582B0F7371BD" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="841127C8433A25" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="FE41297CFC78A42C" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="4F1989258FC0DCC3" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E2B1729E6065E02A" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="5014E5DCB72A3EC0" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="E4AB97263E075B14" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="43BE97BA3C935595" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="D9F7CCB543C62547" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="9110F80E7B65D226" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="2FC8ED8826854B1D" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="EF9CD216AC3E969D" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F4DF752755CE5EFF" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D808311240193B50" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A48DD51ECCF64E9C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="14430A90D4B42233" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="34B4072C38F2DF36" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="2088595108E70B0B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="5370A1544ECF2C29" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A1BD89AD76FB3BAE" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8AA584EF95F3E6E" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="630202BF03085BB" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D8F33020B7712884" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="BD7E58549E687A01" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="BC78A5846D132DA0" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="5503827BA6B5C4B7" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="1B36E2B72697C093" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="AF77CB8266D272BA" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="37A14B7B73B32536" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8B8540A98AD8BD47" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E5EE3048494764E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C8B2AFBED443A566" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="EFE487BEBDB695F1" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="64FBDCA3F9717635" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E7CB4A0F774A0945" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="4FA52B204791F66C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECF88C5615568FB6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B02EE0E8E1BDB33" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="5F0BA57600297CBE" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9CF61C2156AC84AA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3ED30C4073E79122" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="B78E9D56329CE9D0" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="FFE4C586116A9DBC" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="B7460972016BD4E6" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="2EC57D3681EABCFC" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="7535D97EF1E99EDB" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="DD57598064122D7E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A5CD88FA0383E7A7" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="7C8B90063CEBDC19" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="F7BF814CACD21BC6" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="249B0C85EF38B3BF" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="4DB7D53DA633E390" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="5B94453E6B9A9580" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="F58038AEAFF7210A" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="C88F55BDFADE7A6B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="415F3E3B09621E3" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="BA488CA86E542BC8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="9D9ED9BE3D1D6061" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="82412C7909F42BF8" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="B1965A024EB523CB" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="3563742FDEA5F3A7" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="B3AFC2861351D52B" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="B14849636B96119C" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="65F4D703BB1CFA0A" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C479473B0F271407" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="3C66D523128E25D3" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="3EE4EDEAC9AF31DF" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="9F66B5ABA5B115A" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="859015622A9AC851" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="D31C3523B2C98156" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="678CD31A2C1873DD" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="4B9A288450B674DB" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="8C33D82D182A0904" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="184B5B05655D8A2C" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="E1195B8201182450" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="94EB08D4BA16EA1C" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="418510ADDBF07D85" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="D57A0A38F39DC543" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51E695BFB0EF1EF7" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="AE99018DDCC58202" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="81AD5ECEE4669A94" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="3072280F7292519F" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="10886FEF267FFCE9" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="8C71219D517C7B6D" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="9184F3BDFDACB98E" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="3F12B14D8AB56B0E" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="8EAE758B1E8E1058" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C42DB2877E93D5FC" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="8CA5D156D1CD8C95" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="C511CCA28FE01F60" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="309523E964FDD40B" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="71C60D0E6F7B300B" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="30DCF417607EC3A8" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="638F85D1AE5947C3" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="98ECD87CC45040FD" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="2ED000D6A22B386D" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="79B413B4FAD4D37D" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="D66E9200C1D83FB0" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="4D089F06310BEDF9" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="4681C2050A9CA1B7" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="47ABD32FC0A1C65E" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="8016177C93950E56" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="3966E1C9F115E41D" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EAAD03F89C7702B0" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A5EEC346F860390E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1C968C1E3D3129" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="6E58CD0AF0706C9E" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="239BC291F3B4FD5C" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="8AE177D6BF9A770D" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="DB60CE755327EE44" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="EC0D7512DB646ABE" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="7AC6AF2E05B2DF7D" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="E130A118B4AEB6CD" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AEBDAB7BC34F7BCA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="6CBCE4531E67E095" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="801CDB2CCD7C8B37" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="CD42B98F636241D9" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="8B92A2C4FD72B05C" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="568A58147D13A7E2" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="790B50243BE70389" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B55B29BC42EDD897" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F7D8197E3F1D23FB" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6F5705D6CD067EB3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9E6EF2601FD154DF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="AEBEFBE7CA0067F9" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="5A7C169FACFF0DC6" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="9F4F5A5B3473D2B4" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81655BED680CBA5C" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9621A976A1B99A73" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C79B49731015CDB3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F590B161D96449E9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="452344A719ADCCDF" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B866B4475E16A9C9" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="828218442AF1C8E5" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="A68C4B6E76C1206D" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF9BF925B283C02B" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="DB79AE093E14170F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="7CCCB408B88945A6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="C7A9915526337A5C" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84C96DEC05D357A9" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="B1EB10B9BADB5184" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="D83AE6AE8FAEA5D3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="B0EAE82CA7F1730B" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5CD0460A9F2231B4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="9FC3102B9752230F" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9D4C318E84279CC" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="49643CB70CF6FBC0" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="F07B98B6303693B7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="F6F5164F60A5A1EB" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="5A71C782D4C20DF1" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="537061887F9CD97A" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="B62AB2B836F530F7" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="19E872DEC1BB0261" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="262A7AA975537C3D" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F147DCC1E3601A04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="52E545D576D206B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="3C72DEDFD4E595ED" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="BDE6D0A4A7098774" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="7F0901041A218DC" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="B32421452F5CF872" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="DBF2E9FAD9CC167D" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="8552A8D3ABF692FC" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="CE602A9ED0DE083E" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="5862B8D1A1844854" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="56A1EB145F5A9450" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="1F4969975EB7E6B" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="5CF9A645B48C138D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3C5ADB8B211DA885" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="ED72ED3A04DB72E7" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F8622B8D7F29146E" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5FC3F09D09704FE0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="48DB68EBA6A7D2B0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="1F863035DC079011" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="AC109842175BDDE2" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="74CEEB6343BB36A" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="8E6D4B5ECFE367C" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="CE393DCA97B7210" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="CF75EB30A3936CF2" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="54F5994DC3FBC7F4" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="17F976402422D69D" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="74DFED782CAE5F87" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="6B1AFA45A81A4826" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="653D76608C8B14D8" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="348E2AFF3B9E3B2" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="AAB5043D40899B2B" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="3DD3D91606BB305B" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="35FB6AE0228373E8" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="CD8935B4AB26DD5F" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="88EC2FAF2212284D" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="38560E4C8C28A997" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="13D266BE737EB2CC" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="BA0AD4EF578C5C20" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E1C307FC49D7840D" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="58DF2288CF5DB772" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="ECD9F2F143213AE1" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6760F74788EF4DE1" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="C5486C50BD63A5E0" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="B22DB801C1FB552A" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF2183C1BA794274" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="50F0D128F01F3BAA" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="4C98208D263555F8" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7D876F79F55B213F" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="EAA254FA35EEA312" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="943B88EA34BBC1A5" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="3B1F5D7A82092DCA" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="5F0DBCD5CB91402F" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="310CD71BCFE561DE" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="729DEE502A05B0A8" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="88D26A95397B2AEC" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="4C290B54AE3FF70D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4D17C05EF172620E" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="47D03205BCF5A892" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D107DF94BD7D7421" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="3DCEDCA3ED48AE08" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="D53B1545897F2C9F" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="7206D7148BE67FE2" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="DD71C238A7886C87" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="4E776465DEF18589" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="5B6DF5EFB4784F2D" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="FB07C40962B60773" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="827EED69547BA2C4" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="FC612CFA3DC1B226" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="404CAAE9D1692EB9" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="466479C79D66C3A4" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="979F27BF53226029" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="A65F46AB443D6747" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="96053CD059C4A5D7" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7EE8465B69BCE758" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="B5D7197C77DA3A1C" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="6F7F59AA35C7F1F" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="F84C92E201A0B05A" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="6F853097F66A30A3" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C2A0C553FAA51B" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="6900246D0912CECC" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="F5BBAFB0E5E12396" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="F2036279CABB460C" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="E6958D0D54340D92" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3FF6D2FE6EE086B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2D143430785EA51F" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="9DD9F5AAC206BE7E" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="57AEC30D1FD11ADD" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="36C8B9D44801AB5C" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="4E09B9F71B8E03BD" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="F0F143A11E3072EE" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="64943F7AB8334B4B" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="F014CFAA16BA8036" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="2350FB079967F6A3" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="FD619413D30C4A54" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="56E444480C4F7AF0" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="8725FE2A0A293DB9" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="88E09DC33E518649" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="321E5DDA12F73E47" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="29C29949A9B62528" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E29DC35190ED6E41" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6608DE11D9A456BD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BED2E00E2FFF16B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="782E3E6B4DF149DB" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F95970AC39A07751" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FEBF1789665B5CDD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DFD8E9944CDB588E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6A8250AEE27B3E16" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FC31992FAECDBEBB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="482CF6F2F970BE91" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="6D8680B802458A78" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E8D8914DA571ECB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="801F5DCE38D269ED" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1BD63A5A1465E762" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BD382FABECA43C70" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4EFDA79663A6484F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CC93B0292BA1BC18" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D008703B0D9E1F8E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="E228AFF1D78BE7E9" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="5C060780091BB046" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="439331655EB76163" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="70B81ECCAE838B31" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="694AA2F6BEFC6654" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3901FC0BCBA28CD" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="11361D1AC3AE8754" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="97CC4E56F725D8A0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4240E8832806291A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="DE88A5C2C318529" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9B562795FA579BAB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="C5686834A01984E2" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2E3EB16F0217CFD2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D850DE0E04891AD8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6566B92188D161CA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D68413320B9FA86F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E66B4CBCE8EE1081" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4947D055BB146E0B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="6129ABE2C8553729" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8582C7C1F3267C1A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E89DA8FB32E34008" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="60B34E3D8465A74B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DA28962EEEE40DDF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A02433BF45EAE4A9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5C14C436015CD631" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="800E1AF473373148" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="A81BDFE1D48B9264" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="D09F02B11E82E7C" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="82781CF7CAA87111" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9A1CAE0BD7564FB1" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="DC9962AA8B316F3B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E8F4A0861361FA" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A58786C9B79DBC84" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5A4E3226D39A2A90" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="5291B860CA7641B3" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6FF62F2A6048A18F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BAEB10FFA60BA4D8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8E9F78D9B60F34" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2B865189D1D3C0B8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BE669721FF2B381E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F2077392A3F67A25" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="DB2C273EFC7780DB" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5F61E71D8F6F73E0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1BA1C815B0DF02B5" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9015DFB3AFAE667F" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C4F4A003A0E595C1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F08455E75113F74" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E55D70C9698B1E2F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="51F5059798601913" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="53FDBB40C5331735" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="B7F25FBA09948248" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="93406920D762033C" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="5961C713A7D14986" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="BD0C0796D72B900C" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableTuple name="pre_order_coffee_state" class="Tunable_PreOrderCoffeeState" display="01_pre_order_coffee_situation_state" muid="20F400CC508E41EA" description="The situation state used for when a Sim is arriving as a Cafe&#xA;Business Partner Sim." Deprecated="False" filter="0" group="Situation State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="F263B56EC4375B13" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="19DE4734E03CCA00" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="86F84B4FC05A89C1" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="B4BD0C79A73E7724" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="6E97CB1DAA297293" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="EF55CDFED9BD8EC2" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92591D745DA3FF46" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="75C5C4E67F21B7FC" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="47505DDDCF268A70" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="C53B4DEB9ED0C735" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="7FE7AFCFF35F0F6A" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="3A607B1E4DC1AB3D" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="3F00BC53853338FF" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="6F64D3DCDCF2F679" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="A97E11116C93226F" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="3646D04363AEB132" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="5BF328DC16AA422C" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="CDBBBA0FDB2E025D" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="130BB1BB79817076" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="3D12399D803F6C4C" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="7804EE637B2EF7D9" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="C8D9C9FE582CC5E6" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="23F8F62AB1CE2F3A" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="E4BD7A2DB5772C2C" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="8F95E9D49E35A234" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="4995857BC3008B4A" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="924F28E68595D4CF" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="2C6AA51FB5C36233" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="808E7A9E862A2D2C" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BFC031D05301E8A" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="22FE8DC0FE4392A" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="4764588C46F6C44E" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="71FFFDB1C786A291" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="B53C754955CD829B" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B2C8C39EED59740F" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F9AD44123565955E" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="915C34CC3C654EE9" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89C883B044910416" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="9534A1FCEC2F93A" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="55683497AFE8D757" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="8607AFEEE11623AE" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="934CA91D5A3F3AF" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="21D64FBE7A7E4D8E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="8FB67761CBB71814" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="EAA15ED1F42AE185" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="1A5695D1D855F985" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BB0F164F19AB3CD5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2F2BB7DBD20A23C0" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9BDEA2D67CC89735" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8F58D15AD513873A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="1A2581D792FB3120" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1A14FF866748C05B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="40553E383740B908" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F25317786E4919D1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="33DD47B50FB62801" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EECFD7BF27FA446" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="EAAD6D197FB4D7FF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="565A5A2D0DCE1EFD" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="75492D107A65B00C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8574785C5F3309FC" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4AC8E355D7F48A57" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E94ECB38FE184BE0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A51CDAD687BBA13F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BCEDFD372F731CA5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8D7FD5FBF3282B0A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="6EB73116EB8EC838" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="4660EA8C02619C8B" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D27CA166B2AB182A" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="68FB071933FA0DC1" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="633CC5C2BA4C1937" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1206E9D3DB947540" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="84483F9519277F40" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D43F745F80AE1CDC" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1DE24EF862B51D99" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="11CD601A39EBE2F0" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="227CB0DB4ABC95C1" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3214C9572A57615A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A7995A0D56763CDC" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9C6DBA34620F9BF6" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C10DBABE403925EC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="931270EBA0C109E6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3058541395DD9D17" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EF68C6B596AF0DCD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F397E56BCF1253AD" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8BBFE6D4D4A2944" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B69B27BF98B3DE1D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B002ED214ED69DCA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="39008BCE458DF012" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="58194502A8719081" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A88B4FEC8D99B2C6" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ED1739FB844EF6A8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A0193660A17AEA6B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="650629CBFC8C3F4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="885E4B0C47EFEB4A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="74119849BF339EEC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="1FB0E223929A059E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="31DBF9B74D1186DB" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="49300175D35213C9" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="9D045CE280F5DD01" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="FF95B97A3EAC1388" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F7FDF0ABCA985C95" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="27ADE60E9905A0D8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="73EB5623EB767636" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="8FA6A77D13554EC0" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="83D80EA8231B3533" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="60B76312065159E7" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="4DCA356B74AD6533" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D1A3BD3E97D39431" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B6DD961983E02496" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="CFFF285A5E551E1E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C582630E665342D6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="4DE0942E8882FE06" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="8BEF9438EC74FB0D" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="904179336B76B781" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="E7D0AF556914054A" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A1B5339CD19DD703" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="33713056D1F92AFB" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="17BBB0534C0FF6EC" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="34BDE6B99A74844B" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="42FFEB6871AD1AF0" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="A7E1AB0F147536C" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="E4692B2FF4D1A322" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="DC23300E5FC10B79" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="7516492CB3026CD3" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="D11D709D1FDD4E07" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="806983D1E1EC9E11" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="D02B9F98239A0D46" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="53C194D9A5DF2E49" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="564976366DFDA4A0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="E7B6631CC0A9913B" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="70DA5EA2EDA3C89E" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="C6CA10A3B8347251" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="775478C99943E868" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="9BCDE85F2CE7420D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="91E1CEB6FE6CD848" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="819B332D6C451928" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="763EB5A6B4001753" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="BEFE22CD8B4968D3" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="824A19CE7A40807B" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="DE8A844007A038BE" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="3A6B12748F92003F" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="E6F9A776713262FE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5DF6119F1DBA9189" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="B447F06BFEB05C24" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="320DB9A1CE3C3CB2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="3E51FC2E59DC8738" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="EAB7EF673D0D9DAF" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="3C60469191806172" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="36ABFA2E9CB0341" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D24BB98B5CCF69C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="ABE67777F4C9FE80" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="2C4F080BC924D222" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="C7DDC24B5EE46893" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="C337A4327A8CB1C8" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="DEA1C5AABDE3AC3F" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="63A74AA9DE6FEE84" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="87E5F1CF7600B2C1" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="69FFAE589A32C74D" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="A4D49C8D2653AF6F" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="E15A5179B914BB0E" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="3DE27107E7115B31" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="A330F31AE76C5ECE" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="59A7F295AFB3CFF6" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9578FCF52AE9F0A5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C01F2A1C27416FB9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D11CB002219094E9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7DA5DF9E33541A2" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="149A6E9656BDA978" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="AD0280516085CFCA" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8DC1AE7CEDF1F658" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4BE824185B401ED9" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="F09DEF078B7A564F" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="F255ABB7F09E6A6C" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="B083CD4FA1FF740" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F399427DABAFC944" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="1AA26688B5080B2F" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CD79E861A0F74039" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF79ABECF4BBB6AE" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F5838CBF04292FA6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="18803501E4E7773A" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="84EE9AA1974FA409" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="10E2443D16B1575E" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="CB68BA0A5839F328" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="BD1CFC8DE5B7D08D" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="A706B57ABE8F4BF7" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="81D19711EA5E289C" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="94F8C3A228A8EC89" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="74FD31E64C4F65F7" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="F5AA1DE95C19EB02" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="992C13C8CAAE7CE4" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="44072C6998F8251C" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="CA60049A6DCF9EE0" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="2C0D002A07F60CE" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="910BEE1AB5A846D2" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FF9BDAEEC1757E1E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8C29F077BC8B1465" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2C227AC4D0BD9348" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2A513697D2EB112C" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5B6C17555AB3539A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="3146A17005DD1D75" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="D47C2F8E1E278973" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="44B0D9DE50585CC8" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="8800D94E7DFDB1A6" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="8779E95DB2E16A62" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="BC5A5E2440E7D20C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="B3ACB2D565051A6E" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="F0D5E8082193D2E5" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5041FEFEE5C106AF" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="F8EEAB0D68ECA449" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="275FCD476444EE67" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C06808794903999F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="ECB26579420EECA3" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2A1D74054BB50843" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2CB531E7D8C8C315" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="D947F967E297200F" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CA8680717AC08A10" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4E714453B195B6A3" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B6ABBA7BF2806A76" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="1CBFEC4241CCA5F6" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="EF3B1E2C4063C18A" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="4643B5F05E8430BA" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A449A2B2ACB5D7AF" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="BB5C78011210D527" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="831C69CB114A40F9" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="19E02A4BFF277DC" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="1368F603B6913472" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="38463732D8E16BE3" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="20F36E1843E6C6F8" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="FE267506A089C7C8" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="4F25A8CAEFAE43D7" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="C54DD474DDC60C5A" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="947674FF9AB481B9" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="9BE8544A2A918560" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="503CC3F1D66BD2C" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7158053F75D0471" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="4F88944DF4153295" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="D2D0C0EF19F0A8EE" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="4A5E8BE407BA78CD" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="B61F6F48B8E3EF70" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="8FE0ECD7F320B6DA" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="238C99A15D49777" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="6E377C823F079934" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CFEC19712002F849" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4622CFE74A6525CC" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="6AA69803F779A833" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="C5B4C49FF1A525C4" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7139448D0418A599" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3C027ACB5483F6E9" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="37D0DCAA161216E1" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F76244DE56DF346" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="632C955EFA2DED9C" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="699AC483F59382B1" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BF93BC96652C51EB" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B1D3DCC331A658A3" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4C860622E1788105" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="225F5382429523AB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="C5C37E6B652422BE" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="AAF7E52D82BB05DC" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3BEF9AF7E6A7A8F5" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="E873DA3E0314E497" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="5A10B1728688400D" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="A16804142FB64772" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="F35BD4AAF8A0DE42" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="83E6025371FF77B3" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="EFE53AFD32AC75D6" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="B78A7119648F3455" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="81AC0A7D035B8AB" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="E4476C25A9954FFF" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="5D4E49367D7856E3" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="4144FCA7D7956319" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="E54AD8E8A2569A96" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="F03651C38AC0E2C8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="C6192219E3DF527" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="5714E56FCCA8FA74" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="10846DFA8F9FB8C3" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="D755AF2D80B60861" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C879E029A84E5F20" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="21DCD7EEB91BC0D3" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="43970CE5A8B6E876" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="2A50971A704967B7" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="1F1D18C3C8FBF0CE" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="3BC265A4A67CEE72" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="BAA2DF9274D149B0" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="2D37D57578D23034" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="5252BF2C237333BF" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="CF4146360B82E2C" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="7F2F568E1A314FF9" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="1345A968A188678C" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="629700B28F5F75F1" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="9D5097AEB66D8E28" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="97FA99483E366121" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="AA5FA5D00FC01755" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F80B84A023A439A7" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="A267C23943867314" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="8396464C90FC94C6" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="892966644068ECF7" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7A857ADBBD37F330" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="671292A6EA1DED62" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="95E1458DFE94F5E9" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="38C2B49069820B47" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A334214CCF850077" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="6C291C04F29D7F19" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C17AF471F0219A5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="43D4A6514F2384C6" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="E04D83A63A8706F" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="639FBAD399847239" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="A4F2F3FA99B8388B" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CC4ABD609693DF9F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CA2B3A9B36429779" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="AD31CBBD102FF1F0" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="A1BFD17AB8FF4410" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="84DA52B0C99AAF18" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="276224A79C7A6E8A" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="F12B5F38789F95B" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="24CE5DC8CE512302" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1EBC4991EF6F8620" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="524772F0B34BC4B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="D92E6610F6BBB422" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="6F9BCAD4E8358226" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="42DFD299228797A1" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="9583302B50C48042" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="5A5E1A2497A7AD5" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="6FB836F86563C5" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="B10AAC727271005D" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="138F63C54EBD24EE" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5D44240A5DC1E30D" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="FE6A489F473C5266" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="69523448AC4BE480" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="EE1474C57FB0F093" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="80A0F0DCDE39D82" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BAEFC35EF09C7F1D" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="7338B024EB6A4684" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="79166B1138EE2330" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6DADE8B383FE7D97" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="DEA1BB0A84DC125C" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="1B430C3C6E031091" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="C027237BBAFD1BE1" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="B5D51F3FAED686FD" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="86CEDB8121EFDF54" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="94E5D80EA3DAE4F3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CE7C8204D72BDF72" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="74B6E2C78B63634F" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FAC3C7C562E8D46" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="25394251BB00452A" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5CB003375780B831" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1F83B0714FD0A1E1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="7625C520FB01E6E2" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="CEC62A55F12AB7AD" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A3FCCB8F5022AB30" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="5B35E6F8BA591BE0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="E60BD26FA6C43D42" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="62553500007AED6B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="EF5E0CEA14D493D8" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="391411FCD3A64C7C" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="5A0FF8724499F286" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="D0084ACF43472392" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="E8FC5F9408C8B745" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="13DD960469720B53" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="A460262F9C15D76D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="1C30C7B3BC77257D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="AA27E7F8E4B6DF1A" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="50FB2B3CE51DEC13" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="D0604A4838B64435" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="CBE44DE40286CB9E" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AAEFCBB28A443FA2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="4E206712F26A7D56" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="41AEC5B69F8D33C9" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="6B83E8C923E076F7" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E06EAEFD72711A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="29AA2D3CDE6F021B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="B56E0AD53A4CA2DE" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="3A6AF4E6C3968A35" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="E836399E8764244A" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="A7494DF61592EAB3" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7E520CE3484AF596" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="8EAEC84106CF956C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="75778DC46E54DF6F" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="C022BC26722ED756" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="328182C0E714D552" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="3F591CB9872C6AEE" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="E02CE0A5B073F4C8" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="FA1A78BFE757504E" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="2106DD4F33F03744" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="B14D138F859AB3D3" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="D12871F951A8D822" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7EF6751CA0FB9629" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="604C1D401BB56B59" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="5BF66E19C44101C3" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="813BB4FF34168C26" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="A39F7A714D7CA426" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="B7FF053F8661B2C5" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="25F373E75036DE39" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="FED31B372B69CBA1" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D71D8058B54A4BE" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="95E78E298A3A4BA8" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="6A573EC6C1FF9691" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3A2E0311B8DFCFBC" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="603B674272E1E7EE" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="70003C62A07B9F02" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="E1A5E315E23DEA90" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7B782D77EAF3ECE4" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="62D398280B41148A" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="1D7B56AEB9FD6D04" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="CB32B3CFB3168AB8" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="CE55F0DC28252D5F" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="CF71889D1F62FBCF" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="A1ED029BF09691B6" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="3CE1A6B79AE39119" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="3CB733187314B553" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="FF72538C1161FF07" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="D6F6E5EA19A9909A" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="27FE81E01E557283" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="344CB96754283A9C" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="1894DDEE2FFAC761" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="AACE275377AB680A" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="6BCEC7C2610FECB5" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="21AD2227E1973233" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D63B072C69BC037D" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="5F0677970A23B0B9" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A002F7DBB22B2DF7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1579C50FDD3140F9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="62608A72672DD512" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="1CBD7203728003AF" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D2D29A2EC73E3D44" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8942B6DCFAF4BCCF" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3474C9F3B0FD3397" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="C13F068FC9666EEF" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="EF569CACC7A1D5D6" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="B29F91579AB5D8E3" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="D2170B0B9B0205BF" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="2FFF1EAC0F6CFDE2" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="97293FD238339FE4" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="5276CDDAFE3A2593" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="F17310F43E156154" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1467E2BF7512DDA0" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="87078470EAC1E9A3" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="E262DFAA3A15A068" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="8057B15B2BF70AEF" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EBB4C87282A27FDC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C45D894CFA71F01" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="999B5144E947EBB3" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="E6F400F51BFBC9D9" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3355C018D8850895" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="E00C2AE3C7A2E99B" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C120B0233D9F2C50" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1F8C8C5510D54612" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7855D12918795FD6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="F2C3C095231058CC" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="D31C019C081FB99E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="7979249A44B8C2E2" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="762CCEED03C72032" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="D6BFC009446CFADD" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="9F2722E0A6CA4811" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="370F1275F09DC0BC" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="D44CC944B27C5E19" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="851F7E4BD1FDFDB9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="D905EA19029647F6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="A284577D80ADC650" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="9E74451AA4917DA3" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="784F59621A5A1FB" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="9A2F03279F55178B" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F45219ABA023C5F8" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="BA9A9460F5DFCA91" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7D38B33BE00D12FF" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="1AA8A307ABE4BA5B" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="A615846E4FD34A11" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="DDDFFC2816FC6676" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="4E7339F4DC70019F" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DC0BB705DB730E0" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="346490A3453457" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="4D2CE0BFF1BA864E" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8E7C6AB1FB65A5EC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C075793AC925FEDC" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="77C046A3F0BF0A18" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F058A158319BA38F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B37530AC50184B19" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="806E5D145839D531" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2BA3BDD19140BE08" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="695DB71E4CBF03E8" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="8894996A1DF0ED3B" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="332FE7A572403830" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9B7E227BACEFCE07" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C6525D65BEE560D6" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="FEFD325BD41BB6B" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="193C8FEC97289011" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="9BAAD410A970B83" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="549236676DDEB885" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="CB05245FD8C71693" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="21A7D766EEE1D1C7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="88841C88C7273B8B" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2C1A50E81FF9E7A7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D63CC884D95CA292" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="480081CBD1F0C896" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A06427EB7EB7925F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6362BC9B9BE318F2" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2312FFEA500B8C75" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9F8B6B6AA5476FDE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9F20D14D79215D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="FE39D31187CB6085" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="6E0FFFA095EFAD08" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E4D022721AF01F30" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="50C554B0E33D9707" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B1F93AC9F03625FA" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2FB66FF6A6C7ABA4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="564C39CF13FACF0F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7967D90F641F4B7E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="11E00932559BE624" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="F52548D12AEA62CF" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="95FEE699686A35D3" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="891672EEA564EEC6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EECF73145BB42CBF" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C0858DDD6E384041" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="29729F2C13EDC937" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="513B8CD000EF1AA3" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="8BFCF1ED0996E380" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="317A4E99DF39C534" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="E05DE2B9A6AD0F7D" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="1804C68BB21477FB" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2CEC21BC98E20D12" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8D1ABE90713F8333" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A4A3B56EDB823FCB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5524DCB7FB31C352" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="26F35DBA07BB6C93" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="E85FC6B5B7FFA13F" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="811F8FE2D9A04AC" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="226257098155BD1" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="D77A1381536C8F15" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="9E1C53542D0DAD21" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="46CE49487C37F119" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="593C87B28F1129C3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="AED49F485E7A48CB" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="3D2C91B7E5DBADE6" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="B41BA27FE81D7CBA" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="B8620B6BD9E00E22" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="81F9164A2CAC691B" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="8C3D93EA7124EAC" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="C380CCC31F8D0408" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="5D48E4101158C9F5" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="C014AB4A5B9AE41A" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="E7A63BD21EF95967" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="7FBCCFF446E4F85F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="71C64088EF2B7121" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="440A04C68FBF74E6" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AC474574336FD2E8" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="7D907AF3B8F5BF1B" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="EF7652F58208F5E7" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="1451112098FEA7B3" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="36A2417155D92AA9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="71FAF26AFF80D903" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="246A4400F5289C35" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CDA52C22B67E6667" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CD06BBD1E5FBDEA1" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4BDE4A4328F6347" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6EF2775DA810FCF6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="5AF5FFB1936102EA" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="D365576ABE7567EE" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="E150BD60522C20F2" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="BCB11F91EAFB940C" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="59A1A5B31C703189" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="555174B4731EA075" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DBDF8C615972B8C7" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9690C2497503C411" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BCA54FF49DC33A1F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EE04FBFC1B9F6231" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9A377C555B784B7F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="2B0BDF051B8A6326" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="2671D961911CC194" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="E30877E360621B9E" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="9B9766A97B0A457E" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="B7C3778931418A20" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="48FBF11FA0C7FDDF" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="46E104E99CE3E0D" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="698FD4F7C4DF7DB2" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="1B30FAA46812231D" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="31A340BE45014420" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FACEE114CB7BCE34" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E78B6ADF55D4C629" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5CFB2DCBB34E00F3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="88AF00102DAC7421" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="4AE224D7D7C3A0FE" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2858E9BA508F7A79" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CE2DE36594B99" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="F84A871313C8D84D" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="CE01BCF487391639" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6A185892EC9F070" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BD59DED4CAD70C05" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="877C6D57999E872" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="63A79BAFD6A9CBA7" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="18468D9D329DB656" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6BB9B5920FBD10A1" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BA4B308D13481C42" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="AAA2DB391B238364" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="74E052FBE73E2306" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="C92013BA73601B9A" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5CAF6F68B9B204" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BC42EB7DA902A94A" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="26485DFC158DA6D9" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="B13A83B7563ACFA7" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="96C042B83FC0B4E4" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="DA47CA963BFBBC05" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="FADA2360DC8CCBF9" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="AC6E5EAE71EBEBD5" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="D457751694E5686F" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="E971C8489DBA6357" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="1FEF030562711CB4" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="DFF55D124DD8BA00" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="C4478F9F33E530ED" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="A19357EE666889FC" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="7B4C89DD912B6570" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D2C1890960837916" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="F2116A382E85E0F" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="C71465B4F5EBD72C" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9C10B9E7B35315D" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="A236F7A7E101982C" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="AC1D311D1F479CB2" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="459765F1E279AB38" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="38561AE73E37A303" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8C4B765FCF82323E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="99CB148E8B62A6F9" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="34FA5206EB00060B" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B10396EDC730524A" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="D1AE919EBC4BC43B" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="9CB93A9A086466C" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="A9955A9CB210C659" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="F8D37BE1A6FACB27" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1B4699DA7E8858D4" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="8932746C5221BFF9" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="8F654B9D6A0921D9" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E9E6830B8A081618" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="95076FAB56564A0D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="88FC6201EAC5E37D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="8F97EA976FBFEF58" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="DD53FAA1FB1C14C1" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="532F53E6AB3425AD" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="369FE67865016BEA" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D170922A0BF1849C" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9083D4660283A48B" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A6E311AD1C215B7A" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FDB676EEDBB45473" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5797102035A30FCD" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="CB2CE0D8FF68B16D" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="A9EEDB40115A1F87" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="905DD2E9B78A2859" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="8B4966891BC9B21B" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="4AAB13F7D1F432D7" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="375A8AA3447DD875" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9D4C6A4887EAE319" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="175E55A31CD53F5D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="2A2806C3732538C8" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="EDBD86487FA7789E" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="2950FAB9E3A083C" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="AC21C2A0D140811C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="787689CD0A5609B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4F5F4CFD90428E0E" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="26849B867FF96913" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="36D1A53467ABEB95" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EE4C5CEA182B251E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="597D5473998874A8" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="7A671D3A478FEC91" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="93A188A4F765EEE9" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="70DFB07BAC57DF2A" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="70987264EF0907D3" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="BFBD1C5777B76C4B" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="345E36A3823B3BB9" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="D1E7A476F73493B6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="E6D1E8BE995E7DA7" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="482491056867A52A" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="B2FFBF6D9033FAAB" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="1A770BFD26C57E4B" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="86251DEE71ECA8A6" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="4A72A4F3A24DCEF8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A7641488DCFEE255" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="7A4235CE66976BB2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="30678DDC7CFC77F2" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="D4B6A073D23C09DE" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="55241FA9B79D198D" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="C14DCE1C230C23BD" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="55D4EF4642AD4B8E" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="12F1B5ABD7A4F895" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C143E66BA48A1178" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="E31253E71A521E40" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="A087633372987311" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="10A77549F8723EC5" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="59F1A03AB42F61FF" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="CBC8ACD214372418" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="F197E0A3EF0FD040" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="75577BCB10E05DF6" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="AD6426B30EBAF60F" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="2E69F5FF008E8BC" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="1BB6864AB29B46C1" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="9486CAC4AD03A26C" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="1CA93C73A772C3B" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="760002F775955AD7" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="BD707E44145BC7AB" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="63C5EC48867BC582" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="42E61074E6DE0934" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="835DE8D157BC384C" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="DAAFFA015665C664" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="B55EBA9A4471F007" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="322972BBC02289F8" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="78108A24E830DA3B" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="D0A9FA1983AF874A" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="925E42332F32A7B9" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3BE12E8E542D7285" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C57E3569B7B235E8" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="54A5506EC288C455" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="6CD65F2B8E936CDD" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="140CF9820D3952D0" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="FFDE9078162F9022" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="312B27001F4A3772" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="875F1602C6D22D2E" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="1825E82EC9DD1990" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="60B195A026DE2FA4" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="189FDEBCEC1BE55E" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="9A053E7F178177DE" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="22A2F80F89F96550" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="968D6F7AB91B7CF1" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="134C491EC189B048" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2782190EB04550A1" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1FE6C9A29B4A6630" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="35F1D6E9177D1E1E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="24C331CDB54EA178" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="12C8DB90A5E8B92A" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="F1C7224A15E57767" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="5F5E8E09EDC7B015" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="66E693CD0A91E6D5" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="5E2CAADD29F5FC2C" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="2D3EF74C780979BF" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="CBADDF56F1D2FD83" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6087081480C39CD6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="A82FCA34B7636359" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D90CDE3859749CD" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C22632BD2CA42D11" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="4F021C3BAA3B41D8" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FCA5141095D2F67C" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8205068F7C36A669" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5D5D275E53289F02" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="570744FC0E96461C" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49E51959C0FA0017" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="22F27254D290B595" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="AE4EA62025FE8EE2" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="3D74A88BF5550122" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="3425CC8D2B6F519" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18EBCFDE856AE94F" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="2A281738DD07AD70" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5CC5F9E2B686D1C9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="50B35420C0360564" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="332DECC8143FFBEE" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="446345AF6CA7AAC" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="330E4C24E798BFE0" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="D9717B95A75C3479" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="114339D6F2B40C38" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="48FF0F64E436B7DA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="EF9CACCEED0F7B0D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="CCB9327A1BCFF6EC" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BF736C5654C91F56" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="72D9DCAB901D0444" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="483C8EB7671A48AE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="8B6671156BD48B4F" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="F4F331EA77DCE1B0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="F641FAFD46CD9B85" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F42C76F07E3A5A29" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="ACEFAAC96EAD2AFA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4A8C6608683B3AEF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="189A9A6B7A66BF0" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="FD6576A2870CB8D5" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A43D192B20A6D0DF" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="1D688171F74066B8" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="DCCDEF4DEA1DAB8E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="AC858C6748C74152" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5EF6C3592CF36033" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3348F4E49C688C01" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="32962CF083ED869B" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="7F078F81DC3D4D66" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B021A02FF40C795E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="DCD8E4BC0BDB019" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="3C6E95D9AEFA762D" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="BDFF332E07937B54" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="892831E07CFC2A8D" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="28951745B01BD9C6" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="E6ABB96BB46AA976" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="9B9DD93CB2D02D3E" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="8F3AF4FE1201AF7F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3623245A586632B5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="633F1BBFD3C57C9D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="28174DCFF33A2522" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6CF2FB4519296824" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1C3A18C3C4A778BB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="17650FD2AFBA0640" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="658C92054D62A594" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="97933B44C8C35171" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="134E700D1F183124" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="A204ED1964432CD8" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="DFC89AE1C749065B" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="AD370E066544DF9C" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="6FE484C426757F7" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="A0C6E41EF300BC8B" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="15C74C9ABDF171EF" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="67C44294C683AE73" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="588ECE84AA80F1F" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="E900F52C1802DB80" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="99F2B14B48AA259" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="6B25C1969C1F3921" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="9BCA69D8C96801F6" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="161CE83FB299C44C" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="362E8CCF6436BC40" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="366CFC65A8E34FAA" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="5F189DC62B3D4EBD" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2B6F7081691D2752" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="88E519AD7C1407F5" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="27086FB4DFEBBF9A" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FAABFBBB404ED85E" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="D638EB1F703598B4" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="932FDEA9E7412348" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FA43EB63C26A3AFD" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7E29A737DAC4DA08" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="2B3CC34254CE89BD" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F59DFCDAA80D57B4" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="90A1A88D892E1DB6" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="AC92349267B69F00" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="C99F81A41B07BFED" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="574EA43225364AEA" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="35202DEE3DE55560" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B86662639BED5698" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="FD24F13AE94A070D" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="E9F03E94F0AEA45B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4AE3B1F6427CF371" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C370E5A6CC37927" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2CAFFD02A015B4A9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="1162C94689D42515" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="AD816FDE008A7FA6" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="9588E3EA8FC0BB9F" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="619494C2A974D745" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="FA51A79F41A4EBB6" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="7E7D8ED47F7EFA1" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="6147B4B91C21EB3F" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="13178A5678F7770F" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6ACF35AB287DFDD1" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="EBFF7AC90C9F667" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="8DC5A18865D5B565" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="6EB9F52B8E8D46AC" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="E051E889181CF25F" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="928ED124EE1EF23F" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="82D6124D67247BDD" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="6D2EE0DE566FB316" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="630BD7ED77B3EDF" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="A30A4D0A77F3F644" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="CBE32960B1026F0D" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="195ACE294AA2E2E0" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="E0648F139165FEEE" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="62935A024737FE49" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="9F6FF2937BCB2FC" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="72DD6834F997BCB4" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7DCA5E4F08D3C4E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="55F426323D944885" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="B09456D3B9D06C6F" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="76CE42A59D7EC8DB" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F3E4849ED3E52D29" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="1DDC45C2EE870D73" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="3DC5F8EEF83AD1E3" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EB2960439D12C187" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="538E5E8672D7A2D7" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="D983DF9B31145F8B" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="AC69795366903227" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="E85B0E63C089BF9D" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="534686AAFF84E42E" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="69E60B29AC1948E1" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="DBC0D147C931D42C" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B28B2898AE6E6D88" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7D12CCE1AADF4E18" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2E99A458950AC184" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="371B34F063D836E6" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="F1A4A29AE5B82B05" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A3637F79954D861F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="456264969F770CF7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A4B512A6D72F3336" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="203AC7DAF5C5BAA0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1CC2E1F2545645A5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="59A4A621E1863F2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="C9E88BA6FF148E90" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5D7A16927B803812" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1B849997821AAC9A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5199B8C09FA37EDB" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1CED70A26241DF57" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D921C1C45A612F3D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="95A95ADA3256D334" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="32869625DD3CAAE1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="57721D2FCD8E897F" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="E8F84ADFC94CB6D6" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EBF8BED8500DF6FD" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9F650C4799690526" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="A30B06CF25A92CDA" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="275D5F48702C7527" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="BBF3B5770D0848DB" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6B9836BD0372867D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2DE10C88E559225F" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="95CB2BC311E8D5C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="70617D70B18C31B5" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="49B9EACA4081B213" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7E25339DA0BCB94B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9F67C41C8AF39447" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DD8005105686BCDB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AA66F93FAE0BF178" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2F6C5080150F7501" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D3E966A85F516907" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="BB0B2636BDA94CA9" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BC9D5A442A0A6211" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3A71585BCCADBE97" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F3086DA607D9625C" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="63E0581FEEE430BF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5522F4008E9872B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4B18B0C0E0FFC848" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="78D64E5BEB2D5D30" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="DA3E747F38C298A2" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="397D371D87348653" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1B2F70B921C1C81F" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E3809012E4937E4A" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B0BDF0047DC679EB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="202C85A4DCEE4D6A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B12AD247904D0F33" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="25DFECCFBCB764ED" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="DC5ED9FA960BF7E1" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4117E7A771089B2B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7E40C2D9A2250D8C" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="31F600A01612747D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB21BF0E49208C94" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3E60790EA4BEAC11" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1ACDBA0736344963" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="CCA134754987B526" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7087A2B570FC094D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8281DD0AA5EF982F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4875D070B13089AC" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2DF713F8EAD38F66" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="38D88DE9EB0276F5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E86840D2649DDC6A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7481B84C69ECE08A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="601D3EC422486B8A" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="76EC0E49479223AA" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="CF58B400AD2CA1A9" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="59B3CA92E5DD635D" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="24D31B5A5ACCBF8A" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
            <TunableTuple name="wait_to_order_duration" class="TunableInterval" display="Wait To Order Duration" muid="61046F016212C649" description="The duration in Sim minutes for the Sim to wait before ordering coffee when&#xA;they spawn at the Cafe. Any behavior can be tuned for ths Sim to&#xA;perform before ordering coffee." Deprecated="False" filter="0" group="General">
                <Tunable type="float" name="lower_bound" class="TunableSimMinute" default="10" display="Lower Bound" muid="8C7CD5DE759A5300" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <Tunable type="float" name="upper_bound" class="TunableSimMinute" default="100" display="Upper Bound" muid="3BADF36ED812DE81" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableTuple>

        <Deleted name="recommended_job_object_notification" muid="DB243ACF45E991A5" />

        <Deleted name="recommended_job_object_text" muid="BFCEE832FE4B7809" />

        <Deleted name="screen_slam_bronze" muid="E9BC1A2E95C8F1F7" />

        <Deleted name="screen_slam_gold" muid="8747AAA674459D27" />

        <Deleted name="screen_slam_no_medal" muid="BC7723D7089FFF" />

        <Deleted name="screen_slam_silver" muid="930080D71C224AE3" />

        <Deleted name="situation_description" muid="9C8409D6AB8063A8" />

        <Deleted name="suppress_scoring_progress_bar" muid="5242B1DCF96523FC" />

        <Deleted name="targeted_situation" muid="60674B2B79935C0" />

        <Deleted name="travel_request_behavior" muid="8D76A2BFC0C13B3C" />

        <Deleted name="venue_invitation_message" muid="6ED52B55EFE38743" />

        <Deleted name="venue_situation_player_job" muid="32DA467A99E63024" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="66F58EF04B750EC5" />
        </ActionList>
    </VersionHistory>
</TuningRoot>