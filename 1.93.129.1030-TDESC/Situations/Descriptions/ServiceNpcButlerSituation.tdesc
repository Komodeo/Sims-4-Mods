<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="ServiceNpcButlerSituation" module="situations.service_npcs.butler.service_npc_butler_situation" muid="BB30A04DEA431CC5" description="Butler service NPC situation definition." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="52A8DB5153F636A5" />

        <TunableTuple name="_butler_job" class="TunableSituationJobAndRoleState" display="Butler Npc Job" muid="3C1B89DC802949B0" description="The job for Butler in this situation and the &#xA;corresponding starting role state for service Sim." Deprecated="False" filter="0" group="General">
            <Tunable type="role_state" name="role_state" class="TunableReference" display="Role State" muid="F2B1DCA84C7B2D1" description="A role state the sim assigned to the job will perform" allow_none="False" Deprecated="False" filter="0" group="General" />
            <Tunable type="situation_job" name="situation_job" class="TunableReference" display="Situation Job" muid="8525A1E19609660A" description="A reference to a SituationJob that can be performed at this Situation." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <Deleted name="_cost" muid="3741CE5F6DDEBA38" />

        <Deleted name="_display_name" muid="4A8A59AFC33EB52" />

        <Deleted name="_icon" muid="BDD8650CEB122765" />

        <Deleted name="_initiating_sim_tests" muid="14073A02FCD89890" />

        <Deleted name="_level_data" muid="756C3ACB51EF14D2" />

        <Deleted name="_main_goal_visibility_test" muid="ED14D27F6363190F" />

        <Deleted name="_relationship_between_job_members" muid="21F78702CE1CA207" />

        <Deleted name="_resident_job" muid="9417ED20E2165620" />

        <Deleted name="audio_sting_on_start" muid="1A8F6D29A806748F" />

        <Deleted name="background_audio" muid="862ACC4B588A5E23" />

        <TunableTuple name="butler_states" class="TunableTuple" display="Butler States" muid="212D6B650A3CE621" Deprecated="False" filter="0" group="Situation">
            <TunableTuple name="childcare_state" class="Tunable_ButlerChildcareState" display="Childcare State" muid="A7E93998FB028BCA" description="Situation State for the butler to run all the childcare&#xA;interactions." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="BFCE0CED216DB9FA" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="B556AED919B714F2" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="DBB8B1F3D18D01C2" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="42184A3BABD2E8A1" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="A6E9F4C97FF33E09" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="E71C7A627E85C8BA" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F3B725AB55A682D7" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="B244054183E1053B" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="A35C5F42A2A9925C" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="5E91DCBC5B641D22" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="76BC3C812E4A73B5" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="D1067A6CB1786451" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="D92F082DEF23171D" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="555444759A06BBDE" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="5ADC165B816BFCF2" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="EFB2F3F44EF7C8C7" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="AEC5AAD7D04EC000" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="D7D10A6F621AAF13" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="31EA8F8BFE0431CD" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="F201613FDC4C04C6" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="6F1A65A2C32D98A5" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="435A67C61298CFEC" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="79A51A9B71FE9977" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="DDE07942EC44584E" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="366742F731EBDDC4" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="C2424DE72217AF52" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="512C89BAC703A58E" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="6EEC229B9726B3A6" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="66A32332C8816100" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B324EB1960F86204" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CB21F4496AC0FC94" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="2C4C9A72569A8EF7" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="B8E5ABA8F9F7F711" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="620D75B0979412D9" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="91923AC712846EEF" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D09F5C909AFD8516" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="C37E4132EC7745A6" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FC219EAD742432F" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="C209852B35193DDA" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="B0987A7D4132C319" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="CF640BAAA1C339D9" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="2E87E32AFCE58441" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="677A095BA872A227" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="72985D969A634731" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="60CA7508ED9FA305" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="C21B7D3FCC0BCDCD" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="30250734C2F4E5D2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="254C2B90133D4C8A" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7D1CDFC291E2CA26" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="447C9C1DA7070C3C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="19FF860F1C335424" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="41E1EB5D34A0C7D7" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4D57D1812E1B1AEB" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="756ADA13091CC7DA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7CF7EDC682EE43BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1B1303C3A97FAC10" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A46A4FDAA0067D98" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="6D31416D733E6898" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="14A17CE487162FC0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A75EEB3C8C6D19D4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A1CE4C8D99182840" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C959D5669E3F9391" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7B35C2E6BF530950" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="13B3585D3738BFD8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F1094A315D19E300" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="73BF16BFEADE63F3" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="5063E84F65DCBCDF" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2ED79DB413DC0871" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="9EA1CB977004F329" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="5AE995F6577FD7E4" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="20B68F281CE4354C" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5620F46EA3635D7C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B85F6785D4E7F2C" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="250BC6DDFD1A64EC" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="D50B2F49A945C0B7" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="324586FA55AC94E2" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7CD9E0C32553A3F5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C203260DC331B2EF" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2ADBF6433C7D00C8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E219261D164622D1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="F63213A0812CDD4F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4F73E20BE853C364" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D8672CC213A165DE" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B6FF27F8B896CFDB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C1211C3B5A017893" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7A65AEA8F83F59FC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="12B584CC6FB45F33" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="871C7BC55225C8C" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E052A6CBCBBE452E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DE8358B7CB5A49DD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1DFD57D768B25AE3" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1CD6F9B8B6CB70F6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9153CBF5FF87ED0A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C97C12C9D33ABFB7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C89BBCBEE7A21D08" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="A4D388E849A9867" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="4520AFA6C7E3A9B6" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="DA148269860FB8A4" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="B1E374E11457B03" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="74680F2EB5DA123F" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BA2980599E9E6D08" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="B860B57226BCA9B8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="808C4830B11C6F58" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="93EA7058E6D41A09" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="C8C5A1B9605C7491" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="95BE91A48DD2CCAC" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="5173B8ADABD48D31" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="7EAB8E61BC2147C0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1DAE09FE4CBB3A92" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="312C61D941295766" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="35270D7B579D650C" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="D13F949321DEDDF6" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="8BD536FA2ACF5F41" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="DA4D2BFA0AA0C658" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="4442A715A45FB958" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B641C3805952E4F2" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FF1654A58130EAD6" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="FCFBF220AE8EF80B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="3EDF70B1D4D60695" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="4A6C9B42E91E0485" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="7A5E7E8EBFA46CF0" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="676FACB9081621CA" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="FA4766FC647933CC" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="6753E8AA8A078FC0" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="2CB14669FD127C5" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="A0B0BB20CF78D0C9" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="CB431906079CFD86" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="12E0770A15D3C4EF" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="615A8D886ED7A65A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="6310150BF007C838" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="1A343D6B34C05C27" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="EE8E4B9445BAFD42" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="1A9ABBE4923BBF0" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="794B3BB3A4604B1A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="328EA254217D59F2" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89BB446E9B079171" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="5C8F1A24E5D9BD48" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9A1F9CB3AA57E454" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="36A8D050A0843187" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="EE67C8CF2205FD32" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="CF49842F15F85A33" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="462B5A612748DFF8" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D5922E8C712F0A6" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="20C710C1A98C7211" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E718D91C90B25D95" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="89E3A5A79BFB8A89" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="852A04A41086E86D" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="AA47E14DFCF90A31" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6D8A309D623DDCF9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C78877C63BD8AD79" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="E427D1CEEDDE0CBC" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="D849606C23F8BD99" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="537BCD93061643E2" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="293F4324C6CA8ED8" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="982883BAB2F1DDD8" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="FCA0FF154B3FE3F6" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="D7381FEC53A0162" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="729A2B46BB7F41DB" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="DF8352BA23B29AA0" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="919CDDEE488B5D14" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="D5A0DA9ECEC197F6" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="BBF3F2AACC58D397" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4D8BF5C15DAD34B2" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="812B33E86329FC96" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D077C8D14F1F7074" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B7673E3E3ED97357" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4646A2673415D47" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F8764D29272184DF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="E413500FFA9211B1" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E8BD0192EE82D07D" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F2B4406C33D0F464" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="3C4F99B3F2A24CD8" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="B71FA5C8964D08E1" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="7EC22FB8899C3489" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="24151A2E2A9901CE" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="1EA09BBC0ACBE9B8" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CD6E68575A05113D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="91D5AAD927EF1C3D" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FB0176476AFDA767" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="8511F659CD79C9F8" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B2B954AB09CCAE0A" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="92D929F985025763" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="2482ED114B2B817" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="AEDC741FBB46EE7" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="516D0843493012B5" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="17240BC210DABD10" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="836B1AEDEB6826F9" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="440D6EBC5D03A7C2" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="FAA35478F3AD72C5" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F9C0174EF1CB6EA" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="C62AAA46E209209D" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="E3E8D67176A98CF" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="6DE91F4F0399592E" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="A05A173EB9A30DE0" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E1718ACB68D8A4B1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5640B4D4945A159E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6572723D839B3AE3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="88E5C161C3CBE0A4" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5E05E645DDA54CFF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="9C28F74218C85221" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="4F58173F9336434E" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="D5CF650B797CBD7" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="903053B6E17C408F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="220CC4D0783F11EC" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="414FF7FE0EB997F2" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F0FF5ECF4D14BB4C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="2DC790D1E0F113D8" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B846C45110A38308" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="F378891A9D8440F" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5916C9251D742DCB" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4C9044631A5A0868" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="25DE357797079575" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1965D1728CE626EE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="69495DD128C7E495" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="2C934036436093EF" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="E27069E05AA7BC13" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2D86810D312C5D3" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8C5DFC1BE4431FD6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="DC5CE6E78CE463D6" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="ED5454121C473DF7" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="B91B5C48C37840E5" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="21159733873E1EAB" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="4E6816A146F61180" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="D570D94C1A63DEEC" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="43E784D028B8C16" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="F45C5E28F7BB5E82" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="1BC7BDE7E0A4FB64" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A38308EEDB82B3" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="F43A2263811A6D73" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="147C2702BDC355FD" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="E3A76C4C3159B107" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="4EA41423AC21DC8C" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="79FD1C4BE0EF8D99" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="82122BE29B2BAAA9" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C95076668A440F3F" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="57676B11E3154B9D" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="2C0BDB66185C0E1A" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="E8D1B03199DD29EB" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="6D7D42B4A0103B16" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="879149F1C48878B8" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="AEE1F9E113D3300D" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="A583E234D159A951" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="33207AED5F0901D4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5E1C4E7A8E1B32C1" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="E167416B44AD4C19" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="8EC24F19474AB4B" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="910C64F6F6E63FD4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="19526D4CF404DF54" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="755F475EB4DCCA30" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="791AA1BFC41F6855" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="3A390A5D0856B56E" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="3854B7C71A23FD7F" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC8ACB55A644FCF4" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="951467BDEF9771DC" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6A52304624B1608C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9F04FD2EA7B06A67" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="446283B98D71409D" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="37A8D5DFC0EC2E12" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C95690549680891A" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="A938699F086D4F87" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="54B070CBF2E40F93" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="800E74E7DA4F9577" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="BA87D60049124D47" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="F4B7084856905DD5" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="ADD368EBF5C89BAA" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="7F410A4CB2A69AA9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="2BFBBFFBE1B001F5" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="ABEA950FBCCCB7C1" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="FB64FD7EE4484C17" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="532BB18E210FECF5" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="340230B0C925433" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="E0F430F8578EB5EF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="374F54C6144E3FC8" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="3F6DDABE9BAA2D5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="2818034F322AECF0" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="C4E30F796700D10F" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="10814D4350E4B190" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="ADA59774D0B0FAAB" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="5B0F4ED9271B574E" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="E3C6D02DF91FBC6D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="B04AE1BACD4B203F" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="86F1C1EC10BED0FB" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="AA6EFF9ED452E411" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="129A3C186970662E" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="C71FD731489737C5" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="C0559CCF22CFB684" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="663B14F2C4BC0DBF" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="4EED5BA2CFF8C31F" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="A9DD38C62F4F3F38" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="116F5CFB9413FDB0" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="8F7D8DC324947595" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="B3D23FB8F8F7B998" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C2979F63B646868F" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="5120707513322A6" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="FA7B7364AAF3741F" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5DD8D86C33F967D5" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D70C39AA6FD42533" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="1E97CA396BED24B0" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="B853083C09CF492C" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="33015A70C81E91A0" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E9F2DEE248D09DE4" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="EF3E69686BC6373F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3BF05C0FBD52A6E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B384A482BE7F21DE" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="BF18465DE6D94A74" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D6AFD1E35344F1" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="C810E1C58F5CDD9D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EBC9A314CE72F10C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D9186669A0AB0489" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="E081828CF1F22BC8" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="1071912A4821E768" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="29CD81CED6F8F993" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="EB05C6FE0FEE5F62" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="B171107E9FEA911A" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AD0824AB1FA7AF39" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3BF8FE18E90583C4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6A503B1B888FEC2D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="4F60FA6AA6EEAD6C" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="190CF5967158AECD" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="D874BFEE9657BB6E" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="6A9C5AAB5BBF6758" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="8C354FD90E7FE5CF" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="E1274FD1D3085835" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="58B033CD59434E4C" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D597BA24215A4C6" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="14A2C0957AC177F8" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="A2E4DBDEF042942D" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3309D24E5C76A86" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="56EBBCB29CBCD727" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="518BBD01661A39A2" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5692CF82FBE89A68" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="7422925FF866FF15" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="896B773D580CFD1C" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7DA9A97CCFC817B0" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="1978490376EC0879" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="A57C77B29AC94A67" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="3805ADF4902A4CF0" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="BDD74725FD4E5D4B" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="F825BBA39D706347" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18AA6B8B94D6F253" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FC16DFA110EC54D0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="E39A1AD2C76492A3" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="670E0108F39CBD2E" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7B5CCBC47280F290" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B225558B8F136A7C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C6E4CA33C1A00550" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="BADC634EE58ECEE3" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="C3CCC9A54BD5785F" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C40181A0E3165BC3" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="7BAD6221409A9570" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="277D0ADD88D0A603" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="BB958A57354034F6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="9BAC9ACD140271CF" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="168224BD0C16545B" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="987884E070D574D4" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="4A1D99701FB8CDD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="13AF9469F32549F0" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9E071DFA7CE54840" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="249292E90D83C5EB" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="A2EF7B0A76A4CE12" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="6CB3B5016B4FBB21" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="67AFB457AF6F6F9E" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="3FE8BFCD5FA6B0E4" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="6CAC55BF08FE7438" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F8E7C95F1A7AB0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F2CB3751E93054FF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="3E4F59AACC8F75A1" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="653A68BF0A4EA943" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F9BBA18DA1164E2B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="A6D07910752F7E25" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="506F5F0613BD6994" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="DC38F7ADBD9E5DE8" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="6AE7E817E5FDE7C4" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="160C62F538A6603C" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1DE123B4A7E9FB99" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3BEDD92ABDAF0107" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="2887B379BF64AB41" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="F1357CA75A39DDFA" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="C852A547104D950E" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="EC7A4843A92FE07F" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="954E6F2CF680DB9" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="44B88C357EA359CD" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="BC7D632536C72C87" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="90A29FC5023896A4" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="49361D362D97D0AD" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="C09707E7EB327E34" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="9EA1BF4E90C534B8" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="B9AF9645FB3093AC" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="837D2A0CF00D345C" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="84AB24C92CE085FA" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="BCA9CB5478E67FE5" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="EF0D932E361F64A9" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="F906DD7DF83304BE" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4EEA2BCDACBBC56" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="A450F4C46D456186" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="898930215D32DF37" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F088F3BB2DA317C" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="39D22A91FEA0CC55" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="2CFDF9F52C0D4D7E" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="68397BFFFDD90CA7" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6709017DBEF21FC7" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="4F7FA2881C2FDE4" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="3551ED682FDDB699" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="7C71950BDA52806C" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="36F708BF8B724ABE" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="886E78C472C27905" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="6F2491B5CB34300" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="B74F9D267B3A8A93" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="E2D0771ECE8FE317" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2DD69186C3A8C980" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="4896354B242428FC" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="F9C1847AD3672741" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="B6EA0B2DD0B25B77" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="D7C1A69F7D9C5432" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="76FF11FB1330C6AB" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="8F606F1DCA0A72AB" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="29961CCEB48AA1D6" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7EDCCB8576F72E50" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="CC8A56D528487E3E" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C3681B19E8ED1204" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DEB2CC199A61E789" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="70A3D5F489943B17" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="E0DED15480F2ACFC" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A0E7E98DE0271EA4" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="64D7DF663CFF6DA" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1647EF2DC7DD88F2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="8D357BC2D6A6C18A" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="B48F5D6682690CF9" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="C2D7F757A7F9295B" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="925A77853EEA509C" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="2CAF52BC74A27A45" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="A3337ECEFFCAD199" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="A2280B4DD33E042E" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="5D4BE09B43C4B878" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="9FA20BA1E6D14602" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="354C7F3E8B7227BF" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="CB2F40D3A0F24CBD" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="30B4903D4218157D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9F5534090EE5DF92" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3F667908FEA26F80" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="22F810D89AD3975A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="9375987D3D110D31" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="140EA6838BE98500" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="BD77448EAB0FA3F3" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="CBBE2CB43FA39D87" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="80B99D2149A7C03B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="2224DC0EB3685BA6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="FB521B569EE9987D" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="A837FB36D7B9E856" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="94DF321F45ED571D" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="AD9C0EC11EEF2A4A" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="17A9DA3F723179E6" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="964D492CCAB743E7" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="99B4E0C7055A2EBA" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="D1E95CFA42E92007" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A2CD1EF8179AEBA5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E999E694BA2D61BF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="2F345356F1A242B0" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="4CA1A6DA945F9254" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="5C6C991E85AC2A39" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="24A86DE49E03BECE" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BB916A23A80B8197" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="CEA50DCC7F0206B3" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A643B923867CCD7F" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="B6FFF1F848B2839E" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="CDB6C697EDA15AE1" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="4FFD6515DBA2E59C" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="827931F3221078EE" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EFA30DD48CD18356" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="33C88BF9332B1FB6" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="BC374D64310DEF25" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CC807326469F77AC" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="60B8AAE33A6AD2D9" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="E9F25DA6DFFCEADA" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D6D8BE7B80D9871D" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5C2ADAA5DFF3D869" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="7BCB1E7CC649AD0D" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6D86D9D4B0D2D218" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="859DBE63EBD4F27" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="838B6CAB02F000A3" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="29A2772BCEBCC714" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FDCEAB06DB16DC99" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="74DB93277A4EE578" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="D4E97C5B0978EC99" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="320DA738E7D2F5B" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="5D87730894CCAA1F" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EA2F2588115267CA" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="C86A7D5095E3BF46" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7F146229960713D6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="1C631E032EAF7240" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B7F2E047CA44375C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E1D7D42E8079330B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="1602F94AE6B90D53" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="949BF0154F6AF92D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4BFFE300A2D8459" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="39D24C12DD806686" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A88C71A5A543F3BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="12EDFDADAFD896DD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1E96887DDA0A932A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="8ABC44AE55267D8B" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2A6D945CD38DA57A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="66F9C0E15C363762" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E11926D5E2E5285F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="88E4BF1E8235051E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9621CD2C83CA871A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="51BC28B7D6140FC4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="512F99B46AC903BD" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A3CF560269000B10" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="7F15953A65412FBE" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="29B96A147CDEC7A0" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EAFE306CD8C50BF1" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2B56B40C3E44AA47" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="DA50D63B08286E29" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="747F7924B8054DFE" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="A906207C9E687E19" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="B9D856B8EB1D744B" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="97CB92BF6565039A" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="EE18F85D6AEE9BE5" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39579CF13B5DCCF9" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="83DE9CBA3C6509D3" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="28767B8E7BF21DFE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FB2F8C23EC6442CC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="618430A341CC730" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="ED6BC0DF941AF469" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="4BF046B43608E364" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="2691B542CD5926C9" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="800B5CBDF76C7931" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AAAF95AE3326202B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="460FC6A589293FB1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B006F7D38909FD2F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="99E03B59883FFADB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="AAD13FFDFB90BC0F" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="1478EDB151B06302" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="42612F13603FEE25" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="9F845171F00DBAB4" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="1E61EB5CF3F3BA8" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="FAC3F32148C422F0" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="5CBE886E8D0CFDEE" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="407B5844828232C2" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="A025C3E073465117" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="54280BD918D2B237" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="E8D9F0D8270E0A7D" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6A5F0651902E3C73" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6FFEA257B6487ADA" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="D926FE8AC3CAC323" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="978187DFD708C7CF" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="A6EADAC0666E76CD" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C2E433B7D4F0BAD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="5264F18283B9BDC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="A07E60A173011E18" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3751FCF4ADA2F3EC" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7DAF69602BDDEDBA" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="56B706D4114D5248" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5127AD53D4D42D5A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="4DB6E3E527F8674D" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="55A17152B2CAC141" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="CF579480586AAC24" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="C8267367B5BF5E3B" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="FDF3EF156C44FC49" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="81EF3F6D0B2D838B" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="448614B65C3B9307" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2316B75C3EE6F7D6" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4576DDA8CBF632C5" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D65082BF966E8DA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B16697FA4210C1FB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="78C07A27E5B59AF6" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="5C13651371E920E" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="33AD7F5DC0D66122" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="AB7569C5F8E05EB8" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="358D7ACE58C23FAF" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="6D7F31D0111773DC" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="8FABA20F8BCFF551" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="1282FB0D4683B954" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="21DAB7167A07B47A" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="A1E1BD6877D35C2D" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="DE194A4E0621E128" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2E1A48B7387D346" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="72010B45A8587328" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="EB5A3AB5E48CEFA1" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B00F8E68A952F5FC" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="97A6DA1922A00EBA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A9F05040C4F4115C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="A0C196FC630D5A90" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="8AC710622887BD2F" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8DFAF554277A95E8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="47DC382A4F984765" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="8738CDAF723DE263" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="1ECAF18ECB9F9361" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CF939C8884A8F914" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8AE0E003505A46E" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="ED05AFAC0F1EB8E0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="762E74100AB6CC9A" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="F044441B3F6FD15E" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="A4321840AEA821A6" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6E98B668B32FB38C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5A9D0F9E6E72CFBC" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F68C79B10C9C8118" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="4EC7BC2BFD252E36" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="D5835ABCB6D1997A" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="C87DF1ED76380207" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="71A91058E06A3633" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="A19BBC65B8E4CA23" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="EAA947FFCDB75056" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="205630539892275E" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="B881D326037E57B2" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="B417BD04008A95CC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="2DA883A85C6B9CBD" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="CF67B4B7044AA0E3" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="7F995C39017768FA" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="750F5327233E867C" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="45D984695BF975BD" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="6F8DABA9647A28AF" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9515A73B1CFF56C" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="B5FC0F418E3828BC" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="96DD4FE672433F86" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4433CF38D564D59F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="626A85A228D4B218" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="566B578AE1D1FAB4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="CBAF15CE8F9A8189" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="7F813BA2FC2E47A0" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2D75ED4E0F35689C" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="FF99C9A9AD38F81C" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="9FBE9C98A9F771DB" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="50012A5B095BE174" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="219527A7FCBBE88D" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="7E719855A6A316F5" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="B2F9620F7F7AE2ED" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="B9BBC5A2184237A" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C42A888DBA7DE560" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E6D528333B9BCFF3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="212517A42A8C04CE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="11FA1F1AB55BCA20" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="5995D52AFEB87B01" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="C0847057DFD2C7E6" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="77D90337D172633A" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B99FAD9A977ABCC" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D1992EEDA614917A" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="BF9F149A55A765E0" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6E2FE3C9035B4015" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1C9A0D529BD36ACD" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="CB5262D91621371A" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="9CAB8E1F3DEAF17B" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="F666F9D130D2893E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="949F1ED2E1217052" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="76841AA3E8B60B45" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="89AC8B1CC76E9B14" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7488F9E743741325" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="454FF1370DBFAC67" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="6BA89E38A3AA7A0" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="E8F628B9B0409095" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="8520943104B154D8" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="2250ECAA3D00575F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A30F36EF2ED1EC89" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CDCE03B37DA48FB2" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A1BDD2AC8372BE91" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E1F898DA1BCDF9D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="77C040975D01B64E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="7E46FB24CEDF795A" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="D752F7ACE17E251D" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="D4FFFC8D96AC1BE3" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="6B563053441F63E1" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="6B34777871200B61" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="13DBE8F793C4FBF4" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="117018172E47F81B" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="B0748747B3EB94D7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="216B89FA85B65664" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="53B903EF1B5AD6B5" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="DD6EAC3F5AA8206A" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="49445FC3762B1F9D" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="FB596187CE61FBDB" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="5D40BB2B594FE935" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="81F60592DD3E1D6" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="AAFB563DED41395" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="AB16904AF7684A89" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="DA027197B189AEC1" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="69F110D7C14B2B43" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="EF80C13B36C11F15" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="B95386AFD91ACF3F" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="560CBA011AA71E82" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75BE74839AC93AFC" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="21269D0BFF15AF97" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="65E62A171074F87C" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="5303AD1F3904FE94" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="D910DA5277AD0E48" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="DC38CC1FA858C6E0" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5C46A7BE9AC9533B" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="EB23035F710C58CF" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="8BCD9EAB37D1E479" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="FCFF593045C10C2F" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="369747DA4716B8C8" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="2805624822D6F158" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="EDA2C97C85214ABB" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="6EEDC8628EA3AA97" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="77F86CE0EEB2A527" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ED7CC5A167F54C6A" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="271967CFEA4A6F49" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="D71F85EAB641A3D7" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="63464B8C668D79F9" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="F45CD3ED780434D2" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="DE132E87559028AE" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="90025758ABBD276A" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="91BFC616DE53CA60" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="D49C6E39546BB7D7" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="37A35D3D439F6610" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="E99E0EF4788945F0" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="DF28B3269F574F59" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="4A1CA6763E29D8CB" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="6E821E863A0BDB3E" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="1606522D95141FBA" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="45C2DDC11883F4A7" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="E522254D9A11EB0" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="2E2AC3F46CCF3A3E" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="AAC626E68FC22484" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="B2B3A6FD08F3342B" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="72D3E5EF0294E4C0" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="A2588B3E02927C65" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="5C6060FA96B0A48C" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="CAA5179CEB395E17" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="A3FA99DC971C16FA" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="6B5390B4BA7F1EC2" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="483C4D93F3F199F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1A85BB7BE44264E3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="4FAE0A62BFFEF537" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="B29033D1B8B30F82" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="1B74556C40DA6265" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="A2876BE6EBCCF56D" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="C8D054079D294B02" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="A6C15C2B7000E091" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="49D36A40FC24C771" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2EEA39609CED8716" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="336696AFE5B5A1B3" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC125892974EA579" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DB5B33EA19ADBD1F" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="6575A0F02D65971F" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7D4AE6ABE7FA8B0C" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="164E353AD363C5A8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1B268B6C86E66E50" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="748D43992B7EF53C" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="40CBDA71F702B9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2914E63FA3A18A4E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="2D49666AEFA314B9" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="6979796C504EBFEC" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="FF2B4E482FC74335" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3CCE84F9C2D709B8" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5E83035A8627A25" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5AA834F8DA0E2306" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="142A7637786EE128" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="E4F05C7819833714" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE59CFFC152624AA" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="60D11386B25A4893" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="37124277BA85C79F" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CD450A1F3B9B318F" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="95ED716EDCA3E716" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="BD392ED16B5D7123" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="E5C805324622996D" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7562921F338AE1CC" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="31B3837ECBB13AE5" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="32888EE0FB846472" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="27F24DBF23587733" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="7DA2FD2FC8EF457D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="43548A8B603F600A" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1AB494002522DEBA" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="775A597D9AA21C7E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="7779437DBD91A63E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="281B4E1AC9F67583" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="F94524C3DC18C8E8" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="C9319CBBD41967EE" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="CD3A544A10E1F56F" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="19CED68A1892DB38" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="C7B10F0A793DFC2D" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EFE734860414D3FE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A27B7A9692A0B3A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="122C7345B646B68F" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="62A1DCD88304F370" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="D722C86017D78A48" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="C78BD003A6E5FF0E" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="73405F237D8DCC28" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="30A41C92E6548DAD" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="401FB9279FC74603" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="BC6CCC5D9AA492D2" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7D63596928B02F40" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="FF1F07AF0DE61004" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="C8F47B7137A2D09E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1E0529266413CC4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CACF179F34E015D4" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="ADF9C6FE03A9E129" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7624D4DA0691CC4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5EB6B27A55D29650" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="B88804DB325CB360" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="B8FDBE1B66189FC4" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="A0F21498D678DDBB" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="431F3F21A32B9606" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="4BA4C48C1E726091" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="232920B428D903B9" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="1152324BBC64E992" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="95543FBB0F983713" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="638DC39D5D2F22CD" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="9E3E00F81F65FE00" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="430DDF47AB36C17C" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="31262C18A28A8B3E" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="B9C500D959A8667" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="586EFB8B5216298" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="342899F99F23AADB" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="DE7E6D665DE884C1" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="CEB8F78FC278EB79" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="ADAB64E8E2598BAE" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="6B30AF88607A084F" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="A8AB14ED19641369" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FA79C44A89BC96FD" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="787D2A792CE7FC3" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="2439B3625AF84FA1" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6192C90E7D6B5568" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="73FE71D49F74BC4D" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="9F519F9B9AB9C7D0" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="28D699511725A8C0" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DCCAAB5DA6301826" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="C73E6EC833AF19EA" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E4E217C0D7A21171" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="F02E6DF6B7D5A78E" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3BEA8CDEFAAE389A" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="1CE43D67F56D73F1" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="9DC4919B67B97BF2" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="6B5C1252F571E494" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="86EA2166E3364FD9" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="B006407059E418ED" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="34BA297EBC908D75" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="53631D34B295F4CD" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B9440B8C1B30AB89" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9B766CB55E6B1621" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="70357A5CECD3A3D6" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="28A2D26DB8EAB309" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="3438A59AF131F6AF" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="1BB4700ADD26A805" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="27E3CA8054934A74" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="5F69EEBEA0AB719A" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="57D038DCCE319365" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="FFCE0ED8DAE48BBF" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="11BB77D672B07FA2" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="E87ED0AB6FF7BF23" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="38F23BAB48B82EBE" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="E39585A306E91D27" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="8FEFF40E73E95B67" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="D30002F39FAED56" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5494178730E752CD" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="7535A4B8CBEE8688" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="150FC1E515CA0F7B" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="47CBA76E1E713061" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="C4149FAC552A69E2" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="65EA311B6E134E88" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C1B209288ABD5051" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="3A7AA56B32DF1E4B" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="6175AFEC9C53B300" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="8928CB391FAD1869" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="811864B529C8A0BD" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5569744B02623AB9" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="87C63209C390E88C" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="938329218CE447F7" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AF11D30EC28AC126" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="FA1F110C8B1808BA" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="2A7912554E40F770" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B64D7B780E9E7FE" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="B1097F6C4912B6A4" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="726FDA8D9824FB96" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="AF273B9E06557423" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="DE693BF880636A07" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="E087AAC8B562E0A0" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="77691E92A662E55E" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="ED3617F3A8329212" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="228E5800C30E9C7E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5F7CD3DB7EC8723B" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E0578445761B9FB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="85F812B7CD337F22" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="25625D8F70D6655D" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="26FC762D0D795C0D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="387FEF0CF08F830D" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D4FF98B86B980E06" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="449368BF3F654ADE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FF2EA6BC325BFD04" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="36B6DBF87D1430DB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="DDA8B9D4FBCFA94" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="94AF2996611550D1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1EB43B3C98692C92" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="62BE0E36FDFF3265" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D0F97DF0D8E81C94" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="754151BA09AC6642" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A4619D6C2A04E403" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1384E0A6AA8E85BC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="229C0A39DDE062AE" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="B469D42437EE6C58" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="763BA42241308024" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="98C067F8A33F320F" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="F7987EB6DCDCA2E" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F118F10E1D67CBF7" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="939B3CDA0C2D258E" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="10E11C52857A9771" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D26CF1211D4E0294" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FFFB914ED5A0055D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="449C20C03B4EF1D0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="21C7BF49E3EE20F6" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="669F57BBD4546936" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="951FF5093FD584A6" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="98C96524B78FEDF8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FD25183EF29B8F8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8459B7620BA938B7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BB773761E1F6FE4C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="59CC4075DD5B4A18" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8FE55FB345B3EA3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B3541F1E78885F04" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="22B19F3923C0E673" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FD5871E9C8FCB268" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="14A9646A8A8BDF97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3BA07116E3B6E5E7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BDB4C30AA3CBA519" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="152848361F5DD369" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="1A430D7E721F890A" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A6BC736B695ECBA1" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="D68D50A2A423E961" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D275037BF328D2A6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F543C44B77B91D39" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5F189D01A71CC0CA" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2D1E96C0F2CDBBD9" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="BF4026CC690F385" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="259F9B3D0856BE2E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="61B4E7E0B59090D8" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5F5B8D38B7015BCD" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B1418B9DF070770E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E7C76536AEBB8833" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E997E2E75481E775" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="BAC4AF975F07898D" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="61B9C9C061227F81" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="39430C88698CE7E7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8199EE8658012408" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B946E3B2F1A17BEE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="50053DB5EB70C61E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4B29B1DC59CE4C8D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="37A4481E2A8ED6AE" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="FF09DCD86D857F3E" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="B930FFEFD09C7BF7" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="D59B1CC60100597E" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="726C14696A196FD0" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="B8A38AB63658DD82" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="cleaning_state" class="Tunable_ButlerCleaningState" display="Cleaning State" muid="8DF83A6CE1A02EA3" description="Situation State for the butler to run all the clean &#xA;interactions." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="1A7541D2BA5E416E" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="CD49B449789AB44B" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="F0BBE85150A32DFE" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="E80E478EF73A85E3" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="9A2455EE56DD7EC6" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="22838C9F021263D1" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3EF3DC1EA4130695" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="1CB8EEA5ADFAA4BD" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="5539737B74E2801A" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="F02B677717468FB3" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="132B44C4E8471A45" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="1E880906E89D5406" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="52FF697A575B0464" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="B0E2137AC3501FBC" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="822FBFAF9D148D2E" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="124AA347108082C8" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="D3724BD7C02B721C" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="6C801F8B857B825F" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="8AEA291F694315BE" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="F85EEC00D79DDB6C" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="372D85B21C66F672" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="CE40EC440B2ED284" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="B20A1D97CFBCE3F" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="5F6789D30586A9C7" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="3C85F1E36A7FF9A0" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="F70129A35E2FCA5" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="AD135FAD4B2A140F" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="1CF0D70447DF6712" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="AAAB55F725BD1750" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30F57320A1CA9D2B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="87BB8C9023D339FC" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="C52422A727CB7E29" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="7A4238537D6F0711" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="CBCD01A71199D2B3" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="CE45AFEC02A5EF89" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="580C4BDF38D6BCF8" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="C6D2B5BFDD4A45A0" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB254CB09285AB44" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="CD65FA6036E1603" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="CE01DD90910BD6EE" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="5A8814BCBC8288AA" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="BF47BB49FF009326" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="1BD763235EA14C0E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="BE8B140A862ABDCE" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="F01E0C274BE8D8D8" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="8426637396572F2D" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6D532CE3499B73A9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="17B1F0E7AB409CD5" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="11D7059C0FBAF237" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4FED540BA3953E59" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="19D10EBCEA061B6D" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="258C9185DF4B9FDE" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="75DCAC0EADEF7667" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7AD1CBA136F3B7B2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2363BD9EB8E16A12" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="74B00595FFF9CCA7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D1D2E8E65444977C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="B0B2C74F55908FF1" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A26DC55CB1BB1A37" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="79F34B73CBAF0888" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B046074010240E44" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CA3AF3A36E351D45" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="11788C94A5FF09A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A7EE56A781849BAC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="83544058351BCB3A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="72B1B3F8783524C7" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="C305473AC5C7067E" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="87DD049C43DC8C6E" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="9FA451788705AD05" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="A6BEAFA589665EB4" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="66EC034E2AB0D3C9" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6204ECAD9330D990" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A4DF92DB7C358EC" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="46E8A8992636EFD2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="AEEBEEADD206FFF4" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="2C0AFE44BB520667" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="35F4A53652B5D40A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="92C896AF7047786E" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="64BBC6756D926EAB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="840333EF7458C447" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="2B460FFD74407D96" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A8377655D060FC6C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E249B84DA69A6743" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C1D5CAB42B0836AC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D6F3FA4FBD7273DD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BFE5DF3911BB972F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F9211F72EA76D805" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="447E2CF31D8C8DD6" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A8CB5842B8E740B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C9FDD7DA3AC9C501" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="136F3C247B9BF63A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E0E3E5BDE570EB7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D90630C46D9FF8A3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B7891DF98981D15A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E147064D524487F1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="DB6130F53CAA8BE0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="73A8636A2573F4A8" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="9B69D594DB11FFF8" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="E77EC5B0DF6732A3" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="28B5A8B64D8CAF63" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8BAED7BAE0FCC87A" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="3A4A2E95546A1C44" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="93BCEF0C522416CC" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="1ABDC639A09ABA1C" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="51D582C339ED2DAA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="CDDADFC889AAAC41" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="2EEFB7FA43D45DB8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="BF831544D1611F34" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DB9F94CF57EDB4A5" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="CAD6D1BB2E9E4E69" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="EE1FC429222E5893" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="E518A3C4D7AAB8AE" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="5871015F1CC64671" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="A32279E50ADB4FA" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8A2EAB4098FE7701" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C3825B5897002940" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FFA84ED72E23C42C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="39DB21C8D0E18DCD" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="3E33055B17FC2A1" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="9E17E69A82F6F073" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="76EA44D509CB7541" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="14E06D79E1405CF7" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="6A549EF01F07E64B" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="CBD1D40AB8C7D2DC" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="18F9EC13311B399E" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="7F29FB7E840E0B2E" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="61258C57F311714A" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="602E0A081C04B3DF" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="9D3B6BDEFD6513" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="8443AAB89259BD8B" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="2A83C1EA7B9E63A7" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="6EF4748E28485081" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="C65442C994EC7AD5" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6C2DD2E69817DDB4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="FF420ED6B87FE2F0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EA32DEDA3D041ED8" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="1C396C34DAA7B86F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="2B9E6A16BD195B7E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="CE1DD433212C04E1" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="66B235EC12753F26" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="A081506C165A89AC" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8C996E6B7B82B681" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="99A70170C715F225" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="7CE0CB14646A2BB6" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="3B6956BAADC6B1EA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="478DE5EF6CF3B70F" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="10DB8B851D031DFD" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="3B2FD47A86CD0E5A" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4D60BB160BB04A47" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="225227796296CFB2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="F80C15F330D50501" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="3880167149BDA6D5" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="9495D5AFD2A1947D" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="2B53EC1260115194" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="A85FF15381BF73B0" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="59D153F5D38B758D" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="6E8D5CB51E222C5B" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="85E0AB1378223343" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="59E417B4FBE1187D" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="B8EF4A9A629E4421" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="5AC1603D2475526E" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="FC4517BEBB61D661" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E7CCC564DB37F77F" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="47E5E59026AE6636" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="43D148B329404DB5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6B0D050B9E42C685" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4D9601F153A3D522" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="867A6F6C33D919A8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="87BEB22D92FEBB2E" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="385DBF5C6AED4811" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="FFCCF21B24DFC316" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="EA9412F2234AF834" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="E683C657B20130DE" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="18D22FB5A5B8B19B" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="14D19E7EBD5CCB8D" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="8DC70CF3595BD378" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9BE68B229B402109" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2F664FFEB82A914B" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7C6653A4DC250B20" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="71886BB17A03F0FE" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="522C745E63859B8D" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="B020140CB66CFDDF" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="A62BA98499918FA" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="C5BC838977C51A0A" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="A7C2053772FEE5ED" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="F4F33C96AFB5FBD2" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="C9F052B0E3C2985C" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="E88FC96B4DC83261" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="B32F8012040D37AB" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4EAAEAB20874A4C0" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2D28BE4FB1EE7076" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="4C46F6D5BBC7C3C0" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="1F28DAB9984CA796" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="CF76CC5997936837" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DAA350AD4C3F5591" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EEA23E975C33C706" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="27C7E71488F6A2F8" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E27F80D499921B1B" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9C8EA63A8A754645" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="563425C089776645" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="495E0784A9AE22FD" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="9E8128FC147C332" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="D47C43A4A1070369" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="506ED4A6FA951422" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="BD06927F84F9C7AC" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="B679FD56B769317A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="23429CA62ABF42BE" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="83A9FE564985FDD2" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="6D254B21E86725DE" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AB009DA60FF29EE4" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="AFFDA43D2FDE52B1" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="1586BBC06BB1B294" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A6D80C5A7260AD73" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4EA539910086915B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="29E0966BAD2C5955" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9EFD4AED29181621" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81EFC5A577ED54F2" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="88E2BFC0D142C6FA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="4FBD7B9FFEE34773" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8BBAACA73688F4F3" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="6B592D98BEB71A8C" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="173619B512D62D3F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="D23EF8475AE63231" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="C75F5BFC176C425E" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="A67074C37DFA3299" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="31CAD784D23F3D7F" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="43EC56651E33F4F8" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="207A41122E718160" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="282DFC6335099B33" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="77270E1AF450B86D" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="E6F92C75D0832F40" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="86782965F93014DA" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="FD4860144AA81CA1" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="F7D92343AB86960" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D53C2621914F510" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="9A11108B5C56A79A" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="4A2B683781B6984B" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="596EE2AEEC1EB047" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="53888367C6E6FFDD" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="156890A9BF1FF570" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="75A22A39133A69AC" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="3C4B2843A27F364F" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AFA9A0210323D6F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DBC9DD46ADB9B9CD" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="FC3BCAF720403BD1" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="1588150131B780C1" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EF68E990DA6FFBBC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B223B641FE5F3639" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="D29AFA6CDC26516F" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DB35BB64AEB7306B" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="F84452B433E9D70D" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="A7521AC09DD152C" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD52D5DDB929529A" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="23B42C9987047A53" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="13C3689BAA4588BC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="869AA502F4717FE6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="C31014B3E57E9E2A" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="C1E56EDC7FD783B0" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6931181542EBC98F" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="CDC86F6C5C8D36F0" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="4FE18AF89F8B23E" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="4A7CA2D7BA505781" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="7D0421872A12D194" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="C005D216E78D155E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="5F7EE7871412C18C" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="6DBF7F664FE55DF3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="42187B5911564562" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="F601BE3825DB8E8" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="AA98B47687000536" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="98B8EC82F330DF19" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="C5A0262BC0C2A018" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="A766AFC1285027C4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="9840040E4C3A9EB4" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="6DC3DCE8A3B02CB4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="17A8400E6F4D6FB0" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="730096E52830987A" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8BD2BEEE990E606C" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="328B7CA1D8F0ABA5" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="C2783A0D9AE5F6F0" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="BA36D9D9351F9174" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="C670B223768BBEBD" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="9FAE4BE8E28B47FB" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="F623118BCC02EF2B" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="67E2F5EFE6E0B526" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="9F7AA74A2B352793" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="8CA736AFCEC01F16" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="3A38E7AF98B84245" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="793E042EF9B46B31" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="707422A377422C02" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="E74FE7D65393001F" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="171254ED6541032D" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="1DFD61B4CB561C49" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8DCB6B237BCE447" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="FC16B187CC4E7DB4" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="8C65208B819FB4EE" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5563307BD30D98FF" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="232FEFDDC0D22F6D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="49EA9215F320C850" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="BEF6D108A5B80C85" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="C0C05B6CD9658D74" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC1120FCC1F7585" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="BA8197AA59E11A20" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="286E95B68631A863" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4C327D7F7C8E3F65" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="71D1DD12C69FBBB4" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5F936EC664F5DB09" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="3B4F55674C966F1C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="830C4CACA35FE8B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C8E6954D21938B73" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="E338E6BF9C6F538A" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="2A8714C527137E7A" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="9481C8A608A5D62F" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="600E6F6A021A25A0" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="5CFC339CFF7E5596" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="867FA73C293593A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C272D65A44D31614" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="646B49FBC9B901D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="CE0A2F20831C054C" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="8FD987E5A5D430A2" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="F77DF09F30305167" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="699473EDE1C90D5D" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="42E1D4519CA65752" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="2B1D46C194359B73" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="3C28BBF13BDBBB0C" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="984DE7B3F6937E9F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7C7FCA121896DF1E" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="4BCE37CE5497217C" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9BA5F0814E965C58" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="C438AD3F9ACB41C5" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="1905F8F44743C1FA" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30D7E62CFE04A00F" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="659AB819E721E3A6" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="4B82E44A718D6678" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8AC970B952766248" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="A24560C38F5F95F4" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="49CC5201C15B5126" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="6C19F048D1452C74" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="318FCDAE28983848" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="EE1B4E08E993CB00" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5A7F0D96BCA58D2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E0CB10E1902A31DC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="E6DE488AB796AD18" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE0F9CD5D8E7E71C" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5BEF73B36438FE3C" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2835CE2D102EF371" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C42840E2EBFA220" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="474F1B44B19C83D2" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="B2E907D1F851604A" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="86762AFDB796BC65" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="69478AD12AC0DB6D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="F7CEDF90F7EA8400" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="991F2F476662BF1A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="F5DCB8278AC1C636" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15B234E94B472D39" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="CBDC1BF2CB66255" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="1B54FD0AC8B03C29" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="E331D7EBB103759A" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5DDB4A2EA36C8D8" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="6107F7C8477B3991" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="AC4F529698F668E0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="4F8F4D63643DC183" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="9DEA0F75A54EEC3B" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="127670611445DB67" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="55DBB4A6E94EF168" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9CB1FA143DE27EC4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="97FD4B0170306503" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="F8CB42B2250B838C" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="8AA7F0C1BAD59324" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="953A4DC0EB43DDB6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E244B2B3E8712776" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="A45B59CFD0996925" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="759E41A7F6CCA3BE" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="71D3B4AED563841D" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="54D70359F07C32AD" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D6844C87C3D60799" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="496EB6FE4D7D79F3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="D13C90ED2F41446" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="EE82554FC459E85" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="23D3210D622B6423" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="1B122F66527ECD4A" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="B498FD6F9A854B9C" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="1B8928DD85CC7AD1" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="636269B2BC29EF4F" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="98D5C575D9102266" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="FD4458BAC65E5CAD" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="71176E15B185E6D9" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="FE818B2E84BA3389" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="455BC3E5AD533FE0" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="C36BB706800E0B27" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="9607721F447B5FCB" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="557ADFFA2A8D40DC" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D8821AC877D20D20" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="650CBB364D7D8417" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9CCE2D2F695CB8F2" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="C704C57E1E8E58C4" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="F8BA17B82B822BA9" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2596C05EEA01E29" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="803C2F15CFB61EAD" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="EA4EFC741CAB7098" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="E7FF36B72EE6CC91" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94C58FB2C0AAA0A7" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="86D851EDEAE4D077" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="AA9C2E197DC70776" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="98FD0D2E563872C5" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="2EAE530175AF18B6" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="D11BA8E10331814B" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="44E8866D9D5E2ED5" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="D42648284F91F7A7" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="D7DF424C054AFC1F" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="37157AA2915BF2BA" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="CE035AD8D8ABCA4B" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="6EBEA3CE2EC3E70" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="B0668277EA427C1B" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="5232A7175A41828A" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="F4532C7E9C2D4545" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="4A326B42AA32449A" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="15641F87E8B55235" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2B45E4742221C4B5" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="606FEA09531414FA" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4FEC71344C993DAB" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E1F41544FEB49626" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B828B6A7B4EC3714" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="183C70D29A140DD8" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9D6B7B86DCA9B50C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6836D28F45C3A1C9" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6847308F2F328E5A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="6A0DB8D0E36E3BBD" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="3F2686B4AB0F2012" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="44ACC101AC44F865" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="EE3BBA7D75B22343" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="6496871B955424A" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="996AFEF6C00CAD4F" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="6D0C6DF580059FB7" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="99796A889B5E30BF" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="10E9E5C4FB90FA85" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="4E4C97FDFDF8CB6B" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="E5F8E952A661AA92" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="55F051F794645C05" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="26AEB1F4B3B118FD" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9DDB81BEDFBFBE2E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="854EB5D530AC15AE" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="7454095B0C314B51" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="53D0A237766EC0DC" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="BA4A11250DA0A2A3" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5CE97E923BA66A4A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D4F4AB876480FD63" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="717A9BF026705ADF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="6EFAE7222E7D3B59" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="A77C7F14855F3D68" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="C6D39CB0381F3570" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="8AFCB2E0320EE7C2" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="E9BAB1F7291D91C7" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="61BA819CFD6F1A9B" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="BA56F66100835B73" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="C65FED13747CCBE4" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ABA0BCC48563CD79" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="2C8E1192E87B8412" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="2CA9E35237BE8667" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="949A79EA81F29DC1" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="177E85F9EE359715" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="715AA9F3A057B2DC" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D425CC111AAEAFF6" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B86C0671ABE9D077" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="363C0573D1EB5235" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="2E8DC2B83403AC3C" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="B4CAC3874F5E1990" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="F88479F3995D46BF" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="F6FA5F8F5DC75691" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2F87B56006472073" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="27282E785B88C130" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="D8C91DA38DA6C272" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2BFC7978C2FD6470" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ACA9EC1305A57A4" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="1094586DEC974A3F" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="594BBF787E9CAD35" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BC406151C3E5929" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="FD9E38202EA5FBBA" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="951F6E8B8537433B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EC45E943AE6157B1" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="A8E14130ED635D37" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2EE35558C186BB9C" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D089EDFF3ECCBA17" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="25A8FBC24986CF0B" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="756CD39CA9DE364A" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="12C20B069BD6A570" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="698E897CD4ED4A8B" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B674CAAC2CC891DE" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="A4A37E889E94D3D3" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="ECC07DD5FA5311EE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="23A61EE9D092CAB9" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B9EE51AD7361792C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9B18FCC9D681F835" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A94151C8372B4AA8" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BD41F0AD5A1B22DB" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="31287D2CEC83E56A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="348E5FA3BA564E49" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E4F97038888016E7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CE1F2206DCAC6DF0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D41DD2F98FE78B66" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="7EBAAA78B43AA6C7" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="951745051983415A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AE936C018E9677C7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DAB471D146AD95D7" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="828317C9F03DF66F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E426D9B7FB512236" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="690F4A915E4705E9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C1F787DB7D7F191E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="8763E7F967943A2B" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="230E7CEF621A7180" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A7B27522FD5DCD0D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C0E47E307512776" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5DD17A387FDE0858" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="B34C8FDC6AD242E5" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="C11C9532750A3BF1" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="BDA3DC6D925664D8" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="413C292A530ABFFB" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="5911B1246B2EEFFE" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="1D574F0A9C33D22E" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="67B4CAD1E371C87" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CF475BC838F6EB98" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="918F6ABBB176ADA5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FDE4C8F1E84B2CAD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="896AEE5AE4365352" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="FAAD65CC2AFF73EB" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="B77F434F944E2D23" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="1588B8ED7E047F55" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="FAADED85088ADDF9" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F7D9625876E12419" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F27525722E60AABC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9C9F9FACA34F00F5" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="4AE802005C690662" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="686D0775923FC5B4" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="886B296CBCBBA540" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="19D9179704429EA4" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="23D61E9201392B83" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="B55650F92CC10679" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="9814E107E1F42316" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="112779786C730193" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="DD9873A0216D0852" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="50593E2D69D9FD71" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="9EB9414C31FE1526" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="3230161968B80EE3" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3C443E0A63D19A9E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8EDB77E713945B1C" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="DA507B4141A3F79D" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="4C63F4E271D09EE8" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="BC40B96B16D6B581" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8C9F05F974CE96C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="6AE56B9E925F06B3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="47E3325204444911" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC9A259AEB96E19B" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="1D9B62CE9DF2B67" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3490765E16A49A2C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DDC07FD331510FF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="A167B37AB5BAD752" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="96A62E9BFC5229FE" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="D9EFDF1CB6928795" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="90B0D1872B61B51A" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="127CE962820A9901" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="384851133D752F7F" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="311507FCA4B3F6EF" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B8F2A323F255A188" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="541EBBCFEEA8BAAD" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="642498EC1494D0EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="30CC429CA92EEFD9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="E75D1B28A583782D" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="113AE6ABD0ED7BE7" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="76041BDA5E9EE21C" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="18A97F08EBFA2231" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="B6116A773EB7EDC9" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="5B25A1AA183F8601" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="1121A8316D96BCA7" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="852845911C0FB006" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="D306CC1043E2F8D2" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="869FF70C98E5E4AB" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FF1FD75AD4A0881E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="773417EDD13B2148" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B93645FA2D168257" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="3F3025853A170CFE" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="53A3B6D61BA0C541" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="97CB5FB710BFB89B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9E2612150249562B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="14E777C2C40D4E51" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="E40038251D3C702E" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="91945608D4ECEFAF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="551D7DD195A6A9D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="6227AE049B0896C4" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="6659D06B7FD5F1FE" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="33A56B387C14AB8C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F13D23C3CFDFC4EF" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8433D75BF523FE46" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="9B1170ACEBC8BA12" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="5B923986C84F6149" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="60C1356259131164" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7AA58DEB630E3DCE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="79807533F4B5CF15" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A0CF029B1EDF7FE0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="BE7D5121DC07425C" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="6418C33B23083B72" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="E97347932A55424F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="5BF191C17FF10093" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="984AE78D2101A82A" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="1472FCD711FDA096" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="F7C18207FDECF116" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="1A34E4D7F75E3BA2" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="D27BB3AF64933E60" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="AC85456463B3FDC5" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="A5FC7B9E8D8F9ED" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="35CA34861F0B3E4" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF2B8855CCF6BCB1" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="DA43D61014EDB1D4" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="7F394DED91C18D74" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="454495D0C6CD0F2C" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="1EA8849C46E12B81" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="DA8860C492FF7009" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="C8DDEB4F96C03CDF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="5B052153ACE9E08D" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D8BA1A98E9A9B2C3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="F3F2C21F71A77271" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="4E231D071CFC04E1" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D32D6E1DD07EE0BA" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="EBAB0AB523A3BFE2" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="4F59DF4897810418" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="565DFC8D21B70592" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="E25AFBE5B3A91514" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="5BFE451ED8B3548E" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="50C32EEB15AAB52F" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="FE882E88FF11B13C" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="41B28BEFF34B744B" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="411BB35992BC6933" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9ECAC0653A69BFE1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="D1A424ABBCE52B9B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="61EFEBD64F3894FE" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="113039F1A2978E4" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="FAF7C987E268152" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4968E7DE2F74E955" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="83306F2C54C6D2B8" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FB68FD74310BDE39" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5E86F64F13F4E063" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A6E17A3ABFDA152A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="27D098112298046A" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="815B08C4A88F666" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="C40712943824FF7C" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="528EA655DF48D24D" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="BDA3EC352D93AD4F" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="44FEBB82B57B1D5B" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68078036161774C4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="210311FA6AA0F2F5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="BEC465CD096891C2" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="2FED4CAAF6AA211F" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="9BF114307C8E992E" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="1747655AB5F4CF11" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="78BFD1318EA1A702" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="BEB1E5B639061C2" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B74AFEC8A90384D1" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D6EFD76881C1E24D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="482AB91A250A6336" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="F26933E48CE72042" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="62A613ADF4B00AC9" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="4006CD2D8DAC5969" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="E24F569F9A6D3445" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="555063446C0B148F" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="A3D3DF3456CE31AE" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="8FF531F84EA9EA21" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="4912973FD5B80B9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="E675F49515558F93" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="5A7A5F6054EEA45F" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="CED4A7D5D65492D0" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="7171505306B2C856" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="99488C8FCFEF71E6" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="C2C258F375AC89E8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="C7C9E65ADC62AE23" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="4CD049956188B599" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="ADC82C95D65AA374" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="DA3ADC8BF23340CF" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="F792EDC050042C84" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="F72EC6920F1927AB" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="90AD6D47DDDC12D5" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="6543A0B47D7D9430" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D79668CC0C63E014" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="5BF9E65E70A074FD" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="704FF55C99F05F6E" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="2B753F50405C3D56" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="F5A7CD664D77C95E" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="AC081FA455DAF22F" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="3F665D22CEDA9BFD" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="94B70761D80AE316" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="692A55D276662984" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="1F248C96EBF27EF6" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="E0B653504416074" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="BFDAE4C6C19F9665" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="3942B51CB1DD6B5C" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="F0CAAA05A5952779" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="E06F7FE92AE5922C" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2EE36CE5B908CB27" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="96A49C41A3A0B574" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="901E43E13A612393" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="7C3D2736EFD05426" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="9FD0AE24DC2F4C09" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="82D2DBE71C4F617D" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="FE8E273E684F2CA0" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="84655BAA1C7A2BF9" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="9A5A61B718F5E316" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="313678D33522FB23" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C8B8B41881D8B49E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="24913CFE69DB2D94" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="DC32C52C1FEEF158" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="68C7DDE0B7C58E8" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="43825CDC41DB8FB5" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="2910CED4FFF21F78" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="F4F1AFB5A2A3E712" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="434BCB5D807A1E59" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="3352CE8818E2708F" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="881FDF014844957F" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="21FB2D1C8AA42DF6" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="339A80B1FDFD84EC" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="4794ED86609C6324" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="AB756D55348BA90D" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="A8BE27BF701BF4C0" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="7B39E9DA8D8190D9" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="43EA3DF3F5958AB4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2AF20422BB900FBC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="2AEFE3444AFFBDC0" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="19D8697CD85D4F74" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="A46603E8069A6EAC" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="C04D3C77A4E2FB09" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="93AADB7CCA72BF1D" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="F2C51C4BF05F7D6E" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="E5C90C83521538D3" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A07BF9FC8C5B07F0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="DFE7F5DF04CC7F7B" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="73BD84355D9C6340" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="263F6B8B1031B4E" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="70C66EC399D70BC5" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4B94A5DA52ACAFA1" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C206A8D0E28A5AA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FC03E63A70390E83" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EB81BC27AE1F26AA" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="548E3CECCED965E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="185FE81A1426473D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="FF0D5F44844807B0" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="F8E5A3694E6673A4" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="DA604F3E4F1EAF0B" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2CA436424D669356" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F3EADEC5F722BCD9" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D37E2B24B62A3E6A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="49986EAEF90D0B80" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="147FD98047B5AEB4" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9CF93089EFF85A48" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="E511A794AA8E63C8" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="191CAE6901F58C8" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9EECD93EAB22CAE2" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="693DDD442974B1C2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="DB8A5D408F13EC8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="69DF8DBB5E17B397" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38E64F6172F3F36F" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="37C0235B79155528" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="D8AC4AD5773F57C9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="283A78F46A00D7A6" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="E2C39BD358189D9B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="66AC8D3974A495EE" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A6CC3580B9BB2D26" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2526D2D9371DD9A9" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="BC912BB119C366E1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="74EB955401EFA691" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="239105896C339A17" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A023A7A281E3F4D7" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="8D53773CAE30F973" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="9682490B7C88413F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="BBE734683708F1A" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C89534ABDE948EF6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="941B129C4C8F7F41" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="8C0A118ABD4FE10B" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="1375180D9BF2FB03" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="8CEC72FBC26392D5" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="23ABC73106CD8C89" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="466AF6CB2F80E1C6" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="F997373C234D54E9" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="4B54312087B5C5F7" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="E052E69E3960BB89" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="D5EA4DC7CAA178A4" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="915FB89B59F71F89" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="48F16EC5E7DDB62" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BF9A0C17938A16E5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FD2DBE72D63AFC9" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A95B0E5E4EB62464" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5353BFC3DAB0753C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7C719911888D6BCB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="1CFC29898E853334" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="F3A1ACF66A82F144" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="5A20DF367083C69" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="467F76D97E6839EF" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="D0F5F0588FEAACC9" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="D0D5BDACDE632D71" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="9415A3ADA347403D" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="C82EFA9B2B41DA79" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="B0E74BB5CE65CBA1" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="E42A19B66BB0F62B" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="F56CFD558A478433" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="7A8344961978B949" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="21AA3932F15390BF" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="B39EBFE424C31200" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="D5A7C27D14F99B4C" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="5C44C796A60715FB" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="9E7047C65BBF3D55" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2E93EFAC65D6AEF2" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="501494588770AA28" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="9FFAD3A8D556E0C2" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D610990607D3F185" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="DA263B40CAAC95D8" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="1046CC396A451B28" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="55AEB230C3B63E3" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="3912E920E7D29D1D" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="9A5A2F9527ACEE72" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF27D52D9ADC8431" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D219E0D445E7E6E" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="8709F4299AAF8D4B" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3A0583887A367B78" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="25F01D6366F05DC3" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C9A1ECCC0816B687" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="C86964D797EBD784" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="E179FDA50004CCCB" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="A99B73399F488C4A" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A96BC1F163196E5C" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="8E77D7E6FABFBD5E" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="F4766960F257E2C2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E776EE508EA27022" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="61D337FAD11AEA3B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="345B2C5E16DE1D67" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="FDCFDA7B32E95B18" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="C57737745B2DF2E2" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="52C8317E33EC6C6" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="9CABA3CC16492D3E" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="C00C1F3EF02DC86C" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="CA3BC455451D3B4" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="306E485B5626F680" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="14D4428B1B2978BF" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="50BA778666159312" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="3B41C7AE604B2A44" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9BB42EA078DF392B" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="94B6EAAB2D8180EB" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="9375B945915A22F" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="C3B6BE1BABF1A185" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="30A4E69013452406" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="CC03283556D2DC4E" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="B848B0F200D6A176" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="149AE3A7543304B9" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="9473CF13F3FF1B04" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EE7DD66A4FC3A4C0" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="A7666E21C5750AE5" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="9BC0D7F1DB1B4FDE" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="8705DDB1A5D98BF6" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="1D49CC99B39FD08E" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9E987BAF2B6D013" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="54822625C3D9D3C3" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="DA746C92D7B24C9B" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B8C1E6080EF4E102" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EA4B22B4A7876F8B" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="441452D0F0FD62D4" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="67569438D267DA7A" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="63F086A62F799C36" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="593F15200AC1B03C" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="DC0C9C741B2FEDBB" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="8730AA76464A7EB5" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="E6A98C8C65913A54" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="9AE295D4D440D3B6" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4FCD35676BCED89A" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E30E12A64C2E9CBF" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9473FE0C2DB24686" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9CD5E8947B8B37F" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2662336140135CCA" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="29F228E9EECE2AB6" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="39480F69E9BF29BC" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D58363E196137507" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FA2A8CF4C29409D0" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D9087FCEA9220F4A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8EA46C97330C864D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1DD9C043048EAEA7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4A223D6056E6850F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="231EB3BD56F5D89F" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D587A2184997B8E4" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7842C2B6BEA948A4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="62EC5D0A4E70224C" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CB08D83B56AAD5B9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49A0D8A8570B4B26" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AF1D27323AB0EE7E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A20E48462A78E385" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="67840F3BB204071B" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="890919F4D67A576" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F6A3D8C1EECDD3D0" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="18AFAFF4B447DCC3" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="802A22950894F157" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FA3A68D3239531E2" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9B96FB03D1437303" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E3F5821468CD1B6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="EA04C2592666A4DE" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AB2DA0F1D4D788A3" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C1FF06E9D62553D4" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="93D377D4E3DBEA" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D19B7612E54B9ED7" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="15E9E046B10DF89" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E871CF645BE6BEB9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D9DC05648FC4816B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BD2CC9EC6396A28C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E1DF08139FA80DD9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="CDCDD0D98EF975CB" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7D4B162471F77330" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="24F223A1C37476F4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="16974275B1B517B4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F8DC147B50130069" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="43562C583A8C09C8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FAB8DF1D9FDB14DB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4B4A4D9D395BBCF4" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="31FFDD3AACEB6984" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="B6CCBDF3A87E99C4" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1DAAA70DE2C4162A" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="D0E7D94BC1A8C648" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="4F46B554F9C0E8F4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2FF84720F00055F1" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="84A019FA1BE1D20C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="531A8D3769B635FF" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="3EE8DA8294C71A7B" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F464A41EACF94D5F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2B86C21A91238D99" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DC7AA50C0ECF1E1A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2D6BB476E0AA83A8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="323D6886F487891D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C3D11E3ADC3C579D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="FB3A956096FA0CA0" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="45BEFC3665825E26" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="225030BA223952A9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B6637EFDFC4C563E" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C1EFC79DFEF9180E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="64A5BE4D6EB74300" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A49A84875440AB4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A56D304247370597" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="F3E0E4F1F81519C" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="1626781F27A1ADB2" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="9C399BAAF58E26B4" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="595B4C5312CD18F" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="8EAC3E0030E3490B" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="default_state" class="Tunable_ButlerDefaultState" display="Default State" muid="7F1C7B704E78843E" description="Situation State for the butler to run all its default&#xA;interaction when no other service state is selected." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="8903839D6DECA" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="89AF92B86AA33B87" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="91B8B0BF68452D3" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="E592B7E2B7EE703C" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="EB52FE73DF3E63ED" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="B7504E72D8C6906B" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="26376A1372DACA9C" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="7D83F802BE0C96B7" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="484BFAF652B353F5" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="436FCFB79C95FD67" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="5AC7A76F2ED3C54C" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="59C3FCCFF2208F0" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="1574E17698DE243A" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="40DA4764EEF753D2" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="EE0132C5909FE2B3" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="F3FECA274352729E" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="8AEC4519D7001632" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="B1631D3272CE0B91" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="433DC4323EB7B89A" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="C0DF0FDE50A45B1C" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="3B6A26993FED9158" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="9F6C8D192CCE1441" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="626109D07561719D" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="525D64D85C26F7AC" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="5A88B67C68955573" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="14D0602942A97CBC" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="C38FCA052457C273" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="AB79AC9559EAD85B" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="F7D788DFA648EDFB" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7F0B78852B7468D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C713DD0BAF392CA6" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="E32679163184B67D" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="E0BE172D77F0778B" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="93E4BA9A30AA33AF" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="678C06CE71FDE31E" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="989CE6144197A961" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="A93D9CB172D5E5FD" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D50226E73A0705F7" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="484020533370546A" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="B6219C8BFE65C62D" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="92442AA29B83C1EC" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="E73779A720C06F71" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="377650AC0E101C2B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="2AAAE0ACE98B9251" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="9BE89C56D5CF8D11" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="5A2271013E30A77F" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="31574C407BBAAE5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C1A7BF866D874C5" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1BCC1EF21967E4FD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="72C358EC254FA2D5" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="E538A1538F56E677" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="20900DE33E368167" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="17791E68E9012C95" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5B054934AB7D7485" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B8F151478E907C47" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4B0BDF0D1C24C3D6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="625F4A43EF4CEA35" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="AAA13646280C35B1" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A3F642687728E928" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="10882105C0FB4ED" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8E53C6A6685D58EC" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9A011B4350A0841E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="57AC021C2C86C0B0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="22D99A0174354046" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="75F574359DBF9F6D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="E86152EDADA2EE12" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="84FC12FD877D8EE0" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7EE779E6B3AD7BD2" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="D29899CCED3A53BF" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="926544779C46DF79" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="EBE3C945686C314B" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D0A4F9C4671FAB6B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AED2042BA9F354AA" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="26CFE29AD453080D" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="2E8B00C9BA7B5811" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="798AAF0FD9E11EBA" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="4830FE1358D43058" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="862F7C97D48A158E" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8BF26F443B25540A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6E60C5B50D594DCC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="406F810AA51E6626" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4224A2B91CD0E0F8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="138C596271E5D221" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="144CDC9149CB930B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7EACBD6D62AD1635" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="211B1618A569F8C4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="38E9F22B951BFBB1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="D8C795F72515451A" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="67DB6A47657FDBFD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FA3CAFCD918780A0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3E241D7677A30D3E" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="49BC957BDA4103F5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B28B7680372279E6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8632C96563882B03" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5C06BD92F13F2200" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="4ACD5CA7A6601655" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="EC41DFEB81659CD2" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="8185FF2DB6DA0CDB" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="28C72BFC17CC203F" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="966C6F50D6419935" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="DB71A500762EF756" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="EF7D78DDBF1F4456" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="93391B4F958C4BC6" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="A7E87C57AE13D29A" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="182BEFB68EA1F833" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="3FA68E63BE7332DB" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="8501ECC807557347" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="4B181521EF8EE6F2" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2E1FE25D5DD74B8" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EC064A17D852E72E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="ABD8EBFF9180F1E7" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="DE02CA5ABF890FBC" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="AB452ABC57D470C4" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="F0B8DB9F6FFE2899" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="45EACD135971AEFC" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42063707AA5982E7" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="62AFC8E83B6819FD" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="2A8EFAA39790E535" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="F4405DB1E539F23E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="B2A8361B8BD2BFCE" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="7C8008FAA6AF56F0" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="87AA6A0D29A1D1" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="FEFDC475C446D4A" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="65A61580849D85F0" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="876FA3EB6703AB16" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="1F3B80CDAD324C21" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="710AC94C19727B65" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="907EAEA59B321E82" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="320015A38BBC29F7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="8FE4661365BF0FEE" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="FD1D00F5F7973C09" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="E91795B0E3710EA0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="50A4D5D9F0292BCA" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="D266D953C763E3D9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B867F2BC673E241F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C2AF84507AE2FED0" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="529D75BE0868D9B6" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9A49620AACE2D7D9" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="906B2216E0610579" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="78DBB6EE9D7C178D" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="18BE125685E4F5BB" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="59EA9DF1707857EE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8499FB16C69A3118" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="49E0674AC98510ED" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="4E98459CDD1CF8C" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="54D2AA82A3417D59" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="A7A36F41EB51A1EB" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="58860A0649A1715" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4A485E2322F423AD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4F6D1D7CCC0903A6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="273E1B111B62F25B" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="BB1D9A2A3B178240" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="C60D5919A6575B1C" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="60CAF793B4293821" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="A9E6669AF6C15103" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="BC1FD8DD13050F4" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="7150EF80CC16A961" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B863A7D1F49F9BB" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="B4A6743AECCC2E6" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="C250B1E4DEF34133" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="811494A02163042A" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="81556A86A369D9A0" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2F6F5DD72EF31A21" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="841C2B3AB90EAB17" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="775F808D506E5E31" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3C0826BF00F8652A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="429E7C231A45B38A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="182636FC8D415346" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="D434B7287DF45D97" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1994631E3ABC1ED4" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="D06ABF2ED60DA901" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="E4652BF435508352" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="22F2A63D0658056A" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="8ECBEEA316623733" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA53B9E06B8290CA" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="6270FACB9AA266B9" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BAA56D7D2D71051F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A2F304EB443C27E7" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6B09A3DA1DF7CB04" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="8A71F3E39DEB7676" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3BA845E4BA1470F8" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="5927E3A7F8545075" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="5F7A2BBB0067CA58" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="394C453D364E5D7C" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="80BF06CFEFC95A8A" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="C9A09E46CFD2E45F" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="15124F71F0D5742" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="D3B9A26C54E0A5D4" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="4D7ADC6BB164B1DE" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="22C546AA6476FC2C" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="E145BAA523C3EDBE" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="6AF12909098E2D8A" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="9D869EA7A8C5F464" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="3A411C81EF16E6FF" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A6F538372EE221D9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="89FB8C71D324339" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4136757BB4A0B5DE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="46A7470D41945AF3" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="EB34DDF09654D984" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="1C2E625714BB4D8D" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="F4295B617E7A6163" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="22B968DB1B2D8B62" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="485210BE5D087E78" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="2ED38F285D968270" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9534661C44AE90C0" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9268E6B703066F22" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="19A8C2EBEECD8550" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8AC349DDFDC79735" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="2E625C724EA43DD0" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="723E9C159D3EC008" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3E1F32C478E52D0C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="6A3A17AC67451B" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="62290FC0A5D4F3C2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8CF81324A00B953B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="2B9FCF631F2E185B" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FA709B09F019D15F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5A59AF24B35692C3" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="741B6B7C7F3449A6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="FE57482BC369CE87" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="337168BD15C80F8" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="FDF2962B31A500B3" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="25975258403C89C9" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="C5CF93A1BAFACDDE" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="F4E92360E77D25DC" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="A197486DDA701196" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="19066D0E1367B4C1" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="DCD9140B11222012" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D69B708973364048" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="E0043F8DD850922B" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="63C2432F1F353BE1" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="A4ADF253412681F" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="E277107C77EEC8FC" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="13DEC2583BF50772" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="D6A549A248E73876" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5DA0C02BF359D50A" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="5E64DA078B3C319" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="F0ECBCBD85C641E7" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="A8C8D282D547C156" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="84C8D81364FC7BBA" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="6D200FF08EFA5040" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="F3F0C3E88C51FFA2" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="79D9C67EB84EDB2E" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ACDFDDA80381EB3D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5894A617064A65D0" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="A0C34C295F6B193F" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="D7AED701D3AF6A94" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5ADA735F95F2E6DB" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5D4A15D006B16C74" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="BED30B61854A30F9" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A88019B70348114A" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="73456E98B00A85CE" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="FD252399CF47A569" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F421263C9D03A0D1" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="C4FBA11C9F6F528D" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FF2997DBCDDF4AA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="527DF9D15B7998E5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="C9DE578326A664AE" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="C7148683A761731E" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B491DDC0A181EAF0" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="16D91DD750D3F22B" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="F6D42E2C8ABC193C" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="260B9C9BB32F36FC" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="88C6C1093A324947" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="31EC66A098E94D61" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A1E152AA3D403309" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="5D05BCA0ADB4A154" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="599EEEC91C7584FB" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="668DCCBD246C9A1D" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="AB0E655E18CC238E" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="1DCFDA8CA764053C" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="464A85449CD3745D" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="55231123DF0BD970" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="F81002148562762" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="88F66B7E59C7F3E1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="957024AC191C033E" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="C0F980E2F67D5AC9" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="578FFC2C12476AAB" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="68767B3E4D5D05BA" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="646B130935709556" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="2037864886BCB379" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="85741AA536390643" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="91A86B3D49FF01E6" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="A347D4DD58E6D08" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="A63F6D1751D0DB3F" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="56C8795F7E17C27C" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="3CE3ADF8CEBC1C4C" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="21C99E691F6515AB" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="9EEF99F6551BD442" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="132D0A5C87A91024" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="27C5BE500950F8C7" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="2CF890D0EDDEB65B" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="36F5BC419EAA0251" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="61E88FF7A57E0FB0" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="C137186F6C2F4E9A" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="267BA5833CAA5EB" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6F4050FDCF7602D4" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F323FC5B8AC4B96C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="67BC99A9EC6EC42" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="E2AF51FAC0CE3076" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="960603A292B89207" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B67E20F284389A26" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="2CE8BD6041C2FA65" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="973DC7CA89B48198" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="BB9BC5648EC693F9" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="E10F2E809B4D9358" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="801EBAA4B3156DCE" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="8A7ECF8FF62EDC65" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9D188FAEA2582619" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="8E7BB524BDEED1E7" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="73F53820D2D48D79" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="1A6626758E5C96D4" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="881CD380259B221C" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="A7CDA9566C7E32C8" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="E48DA5BD772AC1AB" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1EC7DF0DC6BDF8D9" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="397F0C372B3779D2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DDA11FD0681C30B6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="2AC797A1A614225" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="DA0C5BFF6B836B2B" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="141C6022360C354" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="4F83221240F7570D" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="316C31D2D39503EF" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="3A3A294DB853D718" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="D72C1311D778C0F9" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EBCA16B52583AC0" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="65123FA0A7909A5F" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="29E289038A92281F" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FB9912D7E9B1646" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="1A8E3A8B1D7B7B01" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="FF7828F60A2CF3D0" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A3000FEE67B333" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="1C3B006A0B47AA84" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="4F872753979DF438" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="38EAD4745EB97276" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="A2B9457F8E552A37" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="349C88332503058C" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="B9DC0C00F0EA1206" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="DAFDA54C87BE7918" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="D07CA23D1899F9FE" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B77022CA65B23D2E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3E4CA38D81B3983E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="93BED15309C8BDB" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1DF82F2A38149085" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="92DEE017D95F9011" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C8B8404703EB6C7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8434467B17C78678" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="8C51086C53A998E2" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="9CCC3CF6CF4A440B" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="407B167FAEB2AFB7" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="8455C41E7684D502" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="2082427513980B2E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="1DD3D763F3C5888A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="37E8DB2A8CFF07E3" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="40A0CD658407A4D1" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="28DD34C93FAE0F70" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="6A3222A2A73A8829" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="F4F0D1DABEBB8B5E" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F85EB6FBB5BC7C8" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="8A85D852721DBE93" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="B91DA7600283D64F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="E8127738A985B538" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="56EDDB4405EE2C1F" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="70688FF6CAECC1B8" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="CCF482574E27F5F6" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="243700440D9122A5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="CAF82FC486C4F4FA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="3D286B192E65B19A" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="16C9C1DA34330679" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A4C5BF3B65EB8668" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FD43D3AE7E892F32" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="88B6910C1FC989F9" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="DA658D5B7C7FDDEF" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="7B6D68495ED583D1" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="543A1E78401E969E" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECC9903551F387A9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="78878BE7C91A187C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="46CEA649C373DC63" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="A54558D480F2966B" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="44FB8B210B8C6C70" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="CCB4E6851A6564EF" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="FF6A92A3F0C7C93" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="5BF292AB993FFC51" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="656812C58D65FC80" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="BE0FBA44D378254C" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="3D21DEA4FB42FC1B" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2AC1EFE2DAB4792A" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="65D6929EBEFD6E51" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="15F0E6731EED2AC1" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="A01616FB483FF6A8" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="BD6C83D9444B128E" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="14CFE8134833351" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="BB517AADCDE46E1D" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="E05696FD3D07E74D" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADDB2707BF75DD11" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="D50807729B5D0913" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="A14B32B5F9D875DB" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C60DA4D89C462386" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2767A726763D41E4" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="AC28A9F658F86B3B" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="6EB9F94D8498BF55" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EBA99EABEC447977" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="6BEC01E24D43AFDF" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="9F5A45A72D33F28A" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="2B72C508DBA7D5A7" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="CA4DDDB9BB7744C3" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="58612CE46AD2AC1A" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="DD5AD70DA3A77BB5" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="6CCFECBCE5ECE00F" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="366D1E4F08DC1F44" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4770F832C4A0442A" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="9931AC6FF44815E7" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="F731A349BB0374D0" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="24A8FC5A6E5CB390" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="F8A4D4DD09AB13BA" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="7342A6FD27898719" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="5E92A217ACAB10A8" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="70501B7E3535F473" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A539B64E3FCD172E" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="8436FDF62DCAD9EC" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="CD0D2415398DCC2B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F6141674D09F8E6B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E01A65E2DC38E77C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="9AACD7017A1F41EE" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6797B6F117D849A2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E0991F617E73E331" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="AEA0FBF4D5A60F66" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="219E619F78B13A3E" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="8CBA3ABEF3C268CC" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="B133C07E247BA1E7" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="8EE4CD9FC893C5DC" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="AD4CE56452C2F9E8" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="DA132A541B3A918A" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="19B6EA2E68C03611" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="BA720CF417742762" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="91A16FBCD3135DBE" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="B954535C65F1F2AD" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="69410B52C3639D7D" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E5EE76FEBD6B4F66" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C0F4985B5B9628D8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9C25D623EA46F8CA" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="6BB8883B4DB6DA48" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="FEE01B19282BBD9D" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="140684CFC124189F" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="517933997FE30387" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E3FC60CD3554C458" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B8C023D7D3F559B2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7D919D6BB2F4D1A5" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="2229BB371955899E" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="90760F9E2DDA4C07" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="495DEC68C5812C6B" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="539E704265F58AFC" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5A3C09C236854A3D" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="BF85F086F96EA46" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="470068312F313822" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="921F56D6614ADD5A" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B319DC63C86B9F79" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3EF85715CD401BA2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="748CD132DE668087" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="CDB9B62EC32C5C91" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="EC87A3EF8BD49623" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="740D1AC700548EB2" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DCD13B3504BF08FD" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="57D1181C05D6DFC3" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3C2D1CEEB5E5E1E9" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="D9B04A31F73756FA" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="17C1BA34203F18CB" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="F715C6DEB25DC25B" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="773B791DFD25A603" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="98E7F1A61685D087" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9ED0EC3DF86FE384" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="FC8B9EFDF164B989" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6FA78DB67D3B2CC2" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2FDC4F53A79F5ADD" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="2D82923B5B14708A" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C01A7CC967B9CE32" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="354540CC6F62C03E" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="4D38B4149B141F7A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2D7B0B32ABD30A89" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="848ED3006786484A" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="4605A52FBDEC8A50" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="735740C9DACBA846" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5C44665DB88E0B90" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B8C73FBE16D7382A" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="AC3979A1166408D8" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="71E8C82441131274" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="7F9DD384459DF1FB" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3702491A567DE595" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="8ABCC97103EC8101" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2E43C90091AE0CE3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9E122D1E89503875" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D635E62C5278FB80" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="45B87C77845438AB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="7151BD7275979BEE" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E82353ABD7902EB1" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C618D5829ECC00DB" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="80CBC05F7578E4D4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="93EB7620E7EEFD27" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CA2FEB603F1F4982" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="67E848609993CEE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="C5610B3B052D6625" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="59CBBFCE1BFF4E1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A26E01F782E38718" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A3FBE62F8F6ABE0A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="67B9C6B389AEF942" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E8DA136D772944FF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C820310C96C5D8C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F385A72CB51E6F44" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A9DC3CF4A3C79B3A" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="9A8BF2F3F7CAAF16" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F308C02AA2A83662" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9A11E3ADCC0E42D" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D3DC7CB4139DF573" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="841BDFE1192C9243" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="418A7E0D61F5A821" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="85E4AC68A0CF361D" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="DF0AB5C21399B6CE" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="D531CAB351ADC12D" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="FA6ACB71D3AE034A" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="59D9082D88A12A15" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E7B58B02235ED141" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E6D9FB8133F1F5FF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="9609659F2AE38D24" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="9ECF61220A30D2FB" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="E398998D048FD15A" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="1CF52FCC880584CD" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="B90CF14D44142965" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="2D67DB8267A6B6E8" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D9C8FC6270A0E4E8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EE53C721F8C6C1EA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3224218910C10A8C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="9E02FC2F8A1CA1F0" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="D760242AD2B30C2C" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="DB6C78C79FF712D1" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="D6E175E3748D822F" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="979C05F9741DEA12" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="396FFFE22BC1E51E" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="3D47C42E0617B9B" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="CECE37711DCFA269" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="B0271DCBF8344452" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="33D0A2FEE056D505" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="C131966BEEC0FDE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="587C29530421BF8C" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D873D80EE044950" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6219833C164498A3" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="12B496E7C0712AB3" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="F87CFBAD7174AB15" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="815C3594AD7B8D02" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="12A8539CC71964E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="57169D3A820A9F6B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="FD02788EB212DF4F" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D575640A274C1294" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="DFC1427F69475CEC" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3B3062AA41A05572" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CE94EA2E12397C76" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="963BD324D41415C3" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="3BBD8341CEC74552" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="88C70EAC322C7A69" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="2DA237C4C82434A3" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="9943FFDABA36B762" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="5BF0731ECF4C894" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="35F616941D05FD44" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DDB9E6D4B3879E46" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="44A57F0D0C9B2BC3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A89E8CD3A41BDDED" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1A105CF740AB2A01" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="B325A43896443FB6" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="CFE3682CF9466D9C" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="8282C8674A904756" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="9DB311A625D2F28A" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="A1BFC13D3112E8D7" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="D08D59DCB5A7D0E6" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="167D328FD60AB15A" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="F2A78AA7B6877FC0" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="6DFCFE21CEB493EC" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="8C6DBDB42A48DE8D" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="BDF5A3C4EEF5DA99" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8A49CAC06D5ECC27" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C3A97A69F4277E8A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="86E8E8939E224820" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F38635B410950F0" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B59EA9A93C311D5C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7E52CAEE5FDEBC7D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="B97DD0DA68267D46" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="96A9B1E934BFD6D1" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2A367F4A2E3473C8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="520B3212D9CEA8CB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="B31D3F7A0019DF5B" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="D1EE3AC82B1CB406" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3294A0677ADA4095" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BD132D6E74403FE8" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F1B1E36265C31C14" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="A7EBE8242E7236" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="20157E44628C1108" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="518D57C769752F2C" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="EE424F3504A77DBA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B9D846847094F01" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8687029EFD3AB9FD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="759510A4373186F2" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="603318A15D04B46D" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="413D11C182206F61" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="F892EB18214D3F79" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="522B6EE8C4BF23B4" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="80F7B3227CA9220" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="EFF85FE2C7239140" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="7885C0ABCEAB0BBA" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="6EB63614D6970068" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="3077E486EF3EAC25" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="FE91399913523C6E" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="A570716E3B73E779" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E56C7EE139F7D30D" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="76B0473077083B87" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="A6733F81385A9639" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E188B194934E6AC4" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="AD74E8EDD560BEE6" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="266FBF02CE60413B" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2C4E7E3A38D2940A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="2F1B372ECDE73783" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C794A8882F40F5AE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="5972E9F7A7140301" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="D6B34CDE3A33DAF" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9BB5B4D349424D5C" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="A6C543BAFFC89AEE" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="424356514F48B418" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="DBC5A22C9576E365" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="294B1AF99BF3B19A" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="A9DCB4CA90B61A49" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="3D94BAD551738251" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="D4C00A76A7E87E" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4CE4C142C6AEBA8F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="461186F0B1AD86DB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1EA25DAA97CE8651" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="90CAFDD01F31C5D0" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="E1E145F27EE65433" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="CCDE5F5E84FBB0D5" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="257CB674948230F" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E36DE6F4B356DE7A" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="47E332F7325387F2" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C2F2BCE1FDCA0B0F" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D5577EFCFBBA4F39" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5AB0B18F5CB494BD" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="6607D189FEEC5C7F" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="FB4F169451FB17AB" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="3236ED220A6423FA" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="C4FC46509CCE8F9C" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="F83A80BAE83E0A48" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5BDBCD7C57E95446" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D82BDD7DFFBADCC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="18C9BB283ADC044B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="D8066698F3E10B4B" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="9992AF4DCE98F532" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="57A55C71639BDDB2" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="6E4158661F4019E6" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="22E25AC4D97F6804" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="A1D6199677CEDCE0" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="7E27AD4A64B3C4F4" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="167DD557626DFF13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1FC2C838F163F7C6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="2E78DDE795874332" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="B06816239382938B" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="6CD880A37D3BF45C" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="C7A0C95FB6797FA0" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="30F236A35941F3D" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="7029A0B463C2828" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="55598B4BA77D4727" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="58BF840B7E2615EC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="FE39D3DC6FF22588" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="61341578984D3CAE" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="A6FB47D02C0FA581" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="802B6499788EB47B" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="9A5F6F2F9B0D81F9" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="DF795D4F0B8969BA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="EBE079A1C73CB3C1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="D2034D89FBC15C24" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="F9A70DC16380A75" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="F0CF35164B5BC45" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="38D4297A829059B4" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="CF8472A81A5B914" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="3030F7F42E2AF2EB" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="BBA19EDD6C35A729" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9EA41E961DEBA8F9" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="4E44875F969A570D" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="DCA05052ADECF14F" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="83AA01671EE29AEC" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="F2D0B6D2A0E24024" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="C1BD925D8B7784E9" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="77E763100B0D6CD4" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="9A6D79FBC617016C" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="9F60DBF67812F458" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="B4B4527E27320EF" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="4A93D29342A73FDA" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="4BE14ACD0E24ECB7" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="7A4F29A5D0047D55" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="F5D248D2C2F2D72E" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="64E4A23E2BA72C72" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84561780C8458AD4" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="4A2085C52BD6B65E" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="4BDA84CDA197D2A5" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="41A94168A56941D3" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="29ACA985E224212B" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="A837CC4FFD6C47C" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="DAF4EA573756D776" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="498AB357ED6B59E6" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="1A6EED5DDBC629DE" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F648993C46E65BB5" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="5F1087DC22F0432F" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="6234CA4CCF3F6E27" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="2283DF2AC9A5680E" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="D10F0571A59800BA" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="D4EC7C4D64E655E4" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="A3B5FAB57F53544" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="47D285A589B560CC" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="CFEC04936327AA43" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="6EA2779B1FA508E9" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="84FDF5C2BF7EC7F3" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="1CC0E25056BB3BD9" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="AC5386E2C7996945" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="4CCB1D3063EFE034" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="EE914764E9555359" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2F958EE8076FBB39" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1F7B7E47CB37C889" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5797015DFC2003EE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C507D817C15DADB6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="88929A7009E47320" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="B5D71B0D2187F344" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="6858EFC41652F079" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="360D7BDEF491DA08" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="B97C4C20F0544041" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="BE68617C1121866A" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="AA422FA4C1162A3A" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E62900AB349329E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="F87279C748CE0EC5" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A32628C0B6F5FA94" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1CBB656E542901E0" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="848DD4BA22F6B188" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="52BBBE927170C933" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CB3F705A18B8BC45" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C900C529BD16732F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F149E62D92BC5B6D" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CD8A7AA030CB3AE5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F81C4DDD7B5B72C9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="92BE514416E8798A" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="7BF0E9C96E5FDC9B" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="AC6D487316649" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="950C0E0DF7D6F56A" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7A9FBCF4917F41C2" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D82BA6AC79CF1104" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5D89C36F57F0FCAF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="688881A54104770D" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F4D8E6E8B2E5820A" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="AF6020B6B4D4F74B" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="592683F0C05ABC8E" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D504A144F8256BD5" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="A19F75430891B502" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="9F4BC4F85E542039" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="36AFB39B5B77E210" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DDC0A9B0B2741F92" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="DAF649A182520368" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="6A3F73040425DBBE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="55EE483DB88B9C86" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="922028B73460E80D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="1F9FF39703F21A7C" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="43610F4E44CC849E" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="10DD572A4A812723" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="A1E3AEAE06F97259" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="66E1C22AC29BEE87" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="875AD2EA13E14ED9" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="1FE9A97AA96F8160" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="3B9DB0B2BB649CDE" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="C8960ABFD6C4932E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="6B41252ED383EB08" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2D9E3C53DA6A710" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1144CA9A058D7366" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="55EC81F80E40A0AA" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="736784C2570469ED" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="544D894B30014E99" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="CF35B26D92A4D737" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="4AAB6665C706E5B0" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="5390EDEC84D6A1CC" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="407448B60751CF47" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="3DD701530C716E1B" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3562A5689A5F811F" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="D95C97D9815214D0" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="AD38987E6D202B15" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9B7CC9C89402E5AB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CB0DE2F2EF1CB39A" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="E1E9EA35F4136042" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A0A091E558F7C793" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F901092CE6048561" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="AC4B70CF549F55DB" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="F6199DEE8D13D4B0" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="DC7A92AA71DF3D4E" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="A00A87F8BAFF1799" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="F546359368E02B9C" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="CCED0742D0D655DF" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="7A82EF68069BACFF" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="7AEF458C1A01546C" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="A739BF2F158E1FF4" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="2644203752CF3C87" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="E1B96F858E7411C8" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="B28BFE6F14B8464B" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="AD90984E98D3B757" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="36FA54E1E48CAED2" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="D8D082F665BA9D0B" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="D3836E6A3B45ECCB" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="EDBE8F4A914D2D54" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FDE0EB988A6D0B07" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="641748B009A08DEA" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="5205EE33D7F63B2B" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8B37B6B72A6FC728" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="2BA8526A1163D3A3" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="E481F24BD7984E18" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7982E2C5F7F675AE" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="5B0C618E7EB10427" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="FFFDEED9ECCB7492" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE3D415215709A68" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CA7F6C578637898" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="309837B0D6BC61ED" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="86F2FF183DA6CFEC" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="A88DE1C7AB6CF47B" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F61FF2D2AF71FB92" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="72941E636295DB43" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="53F06A98694744F5" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="10894C1A8EDCB229" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="206F510FD202B959" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="6494DE809D951EEE" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="D433F942BD25F17F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="52245F59A865CE4" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9955992616818C6A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EACA4207FB46567A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="14A26E01AA295974" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="CB8693DF34A575F5" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="D371E10E89D74138" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="95D90B9B79F69411" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="4C9807F041F60751" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="BB0AE7780ECB690D" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="634295E426228B35" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="49DE78B1975286A9" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="9D6B735D73853605" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="FE45CFB1560D409F" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="4434F3C199932B43" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="5B323043575E1B92" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="C9E80FE973E51001" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="8EB9FC60E7C76FCD" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="19400F6F37C7B7E4" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="C42E51B52247F20F" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="C5608A2CB9785418" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="87B029AB210EFA92" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="DCDCD0A2BEFA6C2F" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="96DAB4E98B274DC5" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="7C2DAD101D750DF4" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="47451E7F0FD32308" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="43AE53424134BC43" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="E72D9375C77FC5F2" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="53CD00A219A2CCD1" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="680C30DFAF8C189C" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="DA89280F10D253B2" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="367FAF582D5602DD" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8DE131E47D30E52D" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="1AEBC1E89DDB94CB" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="18B981330C5FC737" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="803616BFEE160EF3" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="5C85FA81F021CD6C" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="FDBD6B21FE175416" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="90B3052389735715" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="EDC846B94C780CCD" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="304AA20AB83A67D2" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="40B1F434EDB3A520" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="8AFFDEDACB08C40C" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2A2D19D9E4DC1479" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="74FCA426BE32F090" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4EFFC72500A97EAB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5F37EBAF1A1B459F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="C04EAD835A0D753" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7C1BA033A631F392" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9EC67F324A17CDB2" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E4865C44934AAE0C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5F62286940E3CD05" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="92DA3162EA5D4541" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7433E2BBCCDB54C6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="71E3A5A8E495A2CC" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="B9C76E21E16C83F6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9056430C1A14C045" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="65D40728433ADBA3" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C8B8C9BC00B703A4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECBF387FC5A46C7B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="19E3DE9713BD069A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="76059BAF4A8F89E4" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="2A219448E9581AE4" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="B50F1C6096925E4D" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D2C48323400800D5" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="123F153E4D02CA02" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="FFB56DC5C5083CC5" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="64D282EC45F9E2B9" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="DEA24563E997258B" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E2060D4D6CC839AA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="37D1FE6693C0112" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="89E3937F71B3E6B4" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="239AB9F97219F889" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="C92A0A349FA80C36" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E2AE2D19E21FF557" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A434AA871D79F699" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D77798B186885FE7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BA3C9CE18EA68A95" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4EEAEEDC13B5E578" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="57DBEA30DB580091" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="C3195B1D99202322" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="25C13245823ADCD1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="94156B2F83F5750C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E4504CF751BB17BE" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4338196A57C3F687" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C46E4FBAF1D81B5E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="470CE8D33DB5C43F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="62EF144B00CE3E10" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="6CD4CB8E21338964" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="A598DF07C1DF7D69" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B94D44C94F0C295F" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="6948604D3547A3AC" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9A2C88C91E6C19DB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FC08C3856B1D3280" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A90CC28E523B4F00" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3D6C181573897330" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="97A018152C8D230F" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="66E54789FBB1A1D6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F794BCC4CFD87405" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="17DD51A921294E06" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6F1B41D2EA13204" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FDE9299FA9BB455A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="91AF50EE99FAC6D3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="924A3ACEF1142184" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C9FDE97B5F0E6225" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D20C43BE1F505F30" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8E67ECA46A5DFE87" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="57D133A96DA1F0C2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E20449BF51E82316" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EB7696FE2FF2AA4D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4B16B252EE26F708" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="63922447464F250A" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="BD235F9D097908ED" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="20D653A17A7B875D" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="565EC4D34CBBE0B1" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="620B67FAE594ECDC" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="gardening_state" class="Tunable_ButlerGardeningState" display="Gardening State" muid="D9D05D1444A06ABD" description="Situation State for the butler to run all the gardening&#xA;interactions." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="84D6BE40BD5B7602" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="7315BB4EE3CF53DF" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="5ACFF8142172B134" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="693BDC7823CF0CB4" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="5DFFAD2657BC504A" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="F153ECC891DE3F0D" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3787F301F739B39F" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="35EC64E2EFC612C5" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="550AD466B0E54168" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="B06C5C163790E5E4" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="29664F226985DBE8" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="DB4946266D260C1A" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="710602E5F04396A7" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="5FD94E9DE4FB9BF1" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="AF5584BEFA257F0E" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="E461FB283C4A35A1" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="346BB52840E237CD" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="306D45A21D193EA0" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="681F9FED75120B30" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="C7D0F93BA64C5826" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="9E50D721A11A18FB" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="8905F6C999E1D4E0" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="719CBCBE33878EC6" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="FE1E1BDD28899AC3" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="14D6DB6D8630C235" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="43AA5569EC6F116D" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="BB965AEE6E411BD5" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="51299A22579E3588" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="85789C51D429653F" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="534F1945991D7A1D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="296C7B1D8701C6AB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="6BF1ED6D815251B2" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="AFE8D548CEE23647" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="2C4C2AEE3A83535" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="938F863807143DF4" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A21FC4EEDC5A4BFA" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="4B27C2422630EEAC" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2294EFD8A4D18972" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="8E23DBC4C6219C78" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="BB4BD2E10AB28417" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="72D63DBA277FF73" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="C8552DFD5934BDF8" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="3641F6AA3042702" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="B5BE24EF044CE235" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="DE27F52965B24CCD" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="B6C642642A7F1A8A" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F6AC462D91675328" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D8E85FEAFFC8F5D7" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D56C74BE89B6C846" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="62397A42D7181C0F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="C43707F38A6ECE03" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1436B18555030C04" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="21449B0F88B8C37F" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1AA5B701A16A01F9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7B4BA1B6493EA87F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="63D0CF52CDCBB9FF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1E1C01D1CA402A36" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="87545F2EA231281" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C63D93F296B7D8B0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="77E3F4F5F54C0314" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4DE9F5A484BE18F6" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="888A01281B284672" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B444769EA43EF746" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BA0F03025E99B80F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1C12B405DA30FD85" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="9623844FCFA33BC9" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="67E792956F0BD063" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="667CC8D729E456F8" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="A8E821B7E93598F9" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="F1FD67450CCE80BF" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B80E0E45785F289F" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7DF5FD1AE1A5D2C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89E826D839D09E4B" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="15CB8C4EE13F7EE2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="15043EAF0E795605" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="D05227A7E1DC06C7" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2B5F2A1FA6FA49E6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8BF9DCF88547DF37" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5E9CA3860B7D1F9A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D8E363D8B7061C3C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="AAD7199098C026F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EA3D9C2D57B2726A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="946C6D7C8B5F05D5" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="705FA55074E04F47" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6182B7A6AB1EF3AD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F7CA883DDF93F23A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1635611690231AA0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="7E492C84165607AE" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A35345232DC94BB9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D23AAB241EC9D47E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CE1689A213400DD4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2B5586EF700B9DE5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="128607591417909C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F81A3A6B2269901B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C1C5ACD557E7C6B2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="1D0883F4D639D7F7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="714E20E3DEC3CAC" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="77BC75005CCF6519" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="112C6D8406717AF2" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="A02490C0ACCCA11D" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CAEC33C4150BB1E9" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="DE3610465CC631AF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="532536A6ED73335A" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="9CE7FE2CEF34C34E" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="5CE6424E65B7C557" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="5ABAEA52AF88404E" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="535748CADF320F87" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="39E26FCB2079307B" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="102A739C81F9DA76" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="E6C76A0D46EA9739" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E91DCA69D3CAC722" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="9E95468432AAED5" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="D6AD0B5DAF2C10FD" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="4F8BFA0E26D91837" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="F7E6C74439A3A2B" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9FE63C224E5E2ED" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2C045736B9B1A5E4" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="2F80EE678D67AF6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="8D350EAFCC831287" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="443075B358C3C0AE" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="D0897C5A296EE7B0" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="4C52C277972A0B5" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="B0E3364E24ED2D25" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="B6807C17924DC9FA" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="15E9BD7FA4D280EC" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="731ACDA3A003F84F" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="300A6C37A8E7941E" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="35D1825352250A28" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="4A38E3BBA7708346" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="516322B07C50EDF8" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="7B91FB24A8DE5A1" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="7284EE66490CE8CE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="F61CC6726D74B0BA" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="BA2A70FD0C31CF26" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="60CEDCD161DB5BB0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1E740D165F6CA250" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="873152F76AE713F0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="603469558C870D67" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="AB29BD2A3905EC94" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="E68413F47144B93A" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="D3A3FB2ADFAF6871" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="339B7C7E91A8490D" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CCCB0687BFB20A10" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A966DFCDD5E02BEF" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="527F5349D766152B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="16AA91FE302E5BE8" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="C8E6FF66A67C4074" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="91577CDAA4CD0C3A" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="251933C0E556CF75" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7DE40D8F3EA7082A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="83DCC0CDA8126D2" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="82A6E7942658B5DF" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="F21CC52C33DA8603" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="2325A2164F676392" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="A7B64DEFA049E37C" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="59AB79E1AEB380E7" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="82F633B9EE3C228D" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5D0FBB010F12FC7" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="CD1C7ED7D0282C4A" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="E947D1A79AB627F4" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="3F8F734F33E88F1" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="A64BC5D3DDE9D9FC" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BA1AA408325EB5E1" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="994387A822815D39" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="719626635B78D0C7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="684F14F8F2028F87" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="82FA9B5B51394BDB" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B76E55D889A818E1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="DFD277C328513BD7" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4248C87929F6350D" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="983A89922223EB20" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="90E0AAD4772493A7" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="A5E814E9C0AB1F17" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="16F430D00BB08202" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A26099359C8E2CE4" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="A05B69D8C5136D2E" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C7FE6406B7C45A9D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BAED8D39391D7068" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9D87A4F4A1B27F4" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="3966127E08546A0D" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C5182A588547CB98" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="94A2447A524CFD75" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="A097BFE4909CC72C" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="5F7C6FB3A8D4193C" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="F8DFF59839A85D86" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="D76266615984B54A" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="75C47F058E344A77" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="A9A15845B28C7E5F" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="28718078A177A984" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5495672A4FB62EA0" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="CFA79C8E5F127C9D" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="142649ACEE83468F" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="E3014C779CEFA23" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="5F9F7C1C0014FDB4" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EE9BBF9D57E0A934" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AEFD7F8393C0FA07" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="870D8A20D0E87B16" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="301C545D6F62546" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="DFB24766502AAE72" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="411CDFD870E213B9" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="11C1A968321527D3" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="A0C82C7A6CAE6368" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="E554036B037B9533" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="F504A2292FF8B8C2" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="46B3FAA59089B46C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="EB77197CC53D9BB7" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="AC3AD57A56A43DEB" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1170E4D3605A3D28" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="329A475BBC6C68FF" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="465009B3434BA8CF" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="8C94E073BCB8B500" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="3F931B4B95F161A" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5BD3E42B4C5DB669" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DCCBCB9F7605E38B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="798757074BDF7381" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BC1B8D35260E7B90" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7AF02C39B767BD2B" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="836787CCEC555C25" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="82EDAC9D83D2DF61" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D4D212A972A7B95A" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="9584774865C336E8" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3CE2D35E1345763F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="3B56005E3F72EB2C" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="DAC3D8E22646C091" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="39561812F2140B1C" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="CC5987E2B512A59D" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="EBBA3A285AAA0A81" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7050034753186EC5" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="4704A692323F49B2" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="5DC30102A119D4CD" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="C6872A534B460AAD" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="DB532A7DB0936403" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="FC7E91B1F4F0BC8C" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="6B13B19A89C3495A" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB1CC88055F6AF46" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="846F8A6899E206E2" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="7D6C796B01B2515C" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="B04BB2381B80AFEF" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="4D6C6C6CF16ACF6C" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="4BB7C5CF7CA1DA73" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="EFCF5B5AD6D1C5FE" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="D0B833295EE57082" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2325E81C699373D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C78C58AB99342647" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="EF63015A3FD670CF" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="D102BD1A1DC66EAA" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C9998DB6135C0966" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8D3D0B5808BF97FF" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="83EDC2366B6A228F" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C571DC98070AC296" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="A555426AEE6BF190" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="9038F269196E3517" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="53F3E70CD3E97211" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="6576E0F1CE66F374" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="656667B14CF2D1B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="ECE2FB78ED94FB75" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="B0705D3D7FAC51BD" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="EAFF97D623548B05" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E142FC14D5D2A02B" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="93E5B538BB5720E1" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="AA998F1A7B54DA84" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="4A8E5A2DBEB36D94" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="687B0974E6ABF06F" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="83EC81F717CC6C73" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="3A8933C9AC45E3E1" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="E43D8FABDED60901" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="7830CC35BBBA0D73" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="1B111FBE705CA7D0" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="501790DD3B586550" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="3D18BC2178658F0A" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="92155447BACE6CAD" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="8ABFE7E70F3EEDA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="5CAE811FC7FB8A89" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="D7E7BF912AB15E57" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="7F704952264F8C94" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="6DC0F630F6A3761" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D7BC55DF003BDE1" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="5CF7801A1B068CDD" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="6CDD9B941F3BA631" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1F14A304CF30ACD" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="67C725A89C5F9E2B" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="EEBDBC17D0CA1CE3" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="5B793C3C7FD9D226" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="50C10E1681D41D72" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="BEC15933B8070D8F" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="F19AB06977B67148" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="878B0361C951F020" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="7710924A1F50ADC0" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="A8C28B66FC89F03F" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="8ED6CA43D419F61F" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="2E6B1B28B5452584" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="1821351BB7C9EC2" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="614464994DFCAF69" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="FC8AA68452112A5F" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="C3815AF39D251E77" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F78F49123E71AE90" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EE326B73E3CD3FFA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="4B72A0827A38811" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="9D8F60A6EA0FE029" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="1FCBA07C29886D31" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="59CA358232678CAF" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="55CD87E4169B3039" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C92E0E11748B66B4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="7EE740239ABFD9C9" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="FF7D9DA396721C7D" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7E70BCDA7901196" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="CF989BF6C9AC932A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB99CC6CAFA1F128" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="13F07AA9BA3854DA" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="B7E981344EC3EB66" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="68438D547E5618D7" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="A77C5C953B5FAE81" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="2A15F7D6F9F6CB56" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="FE5F04049D19102F" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D29594A7786569BB" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E228A3663E12F5AE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="533AC58CE5D9B870" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="975B868BFF2B4217" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="B86116C145C03566" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="FF63912AACFC5C76" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="A2CDB20AC586D6FF" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="BC75832C8B4582F4" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="3801687841F67AB2" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="BAEF2C0A7B5AE53E" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C052E8AB9660A061" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E0F74C487FAFE008" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="F2A7D3B15577A417" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F5773DDD577D13A" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="B406BE6121179490" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="FB0978B915F6EC13" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5514618A6D924C4" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="ACCBAA06757E0E24" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="86FCC442D646B6C5" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="4B582028B86851F" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="6C57F68A37E0F8C4" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="FD112EDED0C8A03D" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="3F53B30C620F15FB" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="1959B2A6263117A5" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="9DFF3D4A6E162D19" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3B078A2C62F29A81" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BB5C58F00B21008F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="69360327DDD69F91" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89BC052F124A163" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="30F90C55F3017B4C" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="98D22CE6DE4BF693" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D73537384EA18BD3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="C0C66E0B34FB7337" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="F5D6FE549633CE33" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D5AE2DAACE071A23" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="9D210BD4CC4953CF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="562648C2903936CA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="EFB8873101A33D5B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="E9C039F90DB3E296" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7011E3E0DB1C360" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="B6A6EE352933A291" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="DF2560B0353BA730" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="C1467EDBF21859F2" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48C7410784B34644" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="E3B859DD41C9EE7C" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="CED81AB6B8CFAB55" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="BC5E97EC46397DF7" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="C536E83E6602EF02" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="5EB7AD4076A8E4A3" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="3344AA3F2906D1DF" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="53604E13318EB929" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="ABF09C38CD12039B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="A8FB2D9113696B15" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="73C733A7EE2BEC8C" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D74E7A8EE792576B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="1D2678A1941F852E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="5ED5DC321AF3394B" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="27FDC7A2703F9E54" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="B1E6C37303016185" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C397212DAA44B39E" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="438F00B3CFD371DA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9D3C8DAD96BB6C20" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="9F81EAC484910587" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="32C251278D4F0AF" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="9AB310D6A52BDEE0" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="BC637F9290603E2" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="116FB4FA73B698D3" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="C0D41A2480BC15B9" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="AEDD6A05223FB096" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="BA38AE95A816F0E7" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="3DBCB1F9A06DAE73" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="9D77A6AE3CD8848B" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="CFFBA7E8AF83FA7E" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="F04B1542D1D30952" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="DB0D8453BE817D9D" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="EB50A7468865B537" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="426969B3243F36B" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7F80DF41C4289ED6" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="14F5DFA2CB893E18" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="942E2B59D5B81CE8" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="9DAD2A4ADB32E8EB" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="2ACB73BAC9A353D7" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C6AE9A5192E98D1" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5EC365B9B304A6F7" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="BA2A5BD73DFA996" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="26E9CBD65EEC8CC1" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EBFCBAE166057831" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="7EFD03F77C492FA8" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="A2A512BBDEF4D135" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="EE935E82EAB14FFE" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="8850C7AF621252A0" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="83D78A19AAFE68CE" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="6C071CE20F0B46A9" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="9989FEEFA18D7921" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="98D132D7456F48E5" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="50FC2FD18FF09DC0" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="BAB5164336EE46D1" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="4F47E578A188208D" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="F307AB6E26B5C58E" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="D35741A782731F60" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="3435E388AD8887B" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="3B590FBFB3EDCB74" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="7AC1D377778B5612" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2091E39035FBC748" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="F25C4D7B8960DA7E" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E93B5021E3A6B6F0" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="404FE303CE87D407" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="606D2D2DCAFABE14" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="A4D0D6C1EDFAB686" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="56AEE9D05B1FC61" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FCA27F365EA9AB30" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1332ACB07CED81DD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="9BA353A382D5F08B" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="FB7EB05B8D429C39" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="2FE5A5B01415C128" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="E043D4804310FA6E" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="6A4CAA697BC16E" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="5BBAFEEAC3DA5AB4" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="9BE60AB03AB1C498" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="B7F0505247AA8C56" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="5E56D52A5057B0EC" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="7370BF6753F25F27" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="23DE839FCB3DD227" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="CA99F56D3FB6BB0C" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="599F46E0CEB9E57E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9CD97CC1BA392A7D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="8C9B44ABE05BF768" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="611AF2E7C6E27E9D" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="D3C6FFDC6EB6532B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="C49DE7096FF56FC1" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="8C6F87551414F8EE" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="16BA4E3D1193B0B8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D6AFDAD4A2B79384" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="48946B07A15B2304" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="A70CFD9524D2B326" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="974430A69F328D3F" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="826B427A5575279C" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5FF1272EBA2B09C8" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="FD03E506105F9C01" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="FE661594C3664F28" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="4ADF0026B3ADB5A" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FE71B2DE699C57A7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="79394282F12974D4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="39AD15C3A9EB2BA7" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="5B3884836116E063" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="D4209A1B1D995E3" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="48DB45B6F7AF1B0" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EE6173043CD2EA18" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7E39A50C1642D5E3" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A6AC4A9EF2AE9B64" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3EA459F50B2C05EC" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="8E4034926EFB9778" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="4FD9E16EBBFFDF5C" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="CB6ACD362BD394B9" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D542DAA45E0B4572" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AB16ED1F147D7BC2" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="197F6BC3E0EE261" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="350B917D1EC22283" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D323A03C0A183A81" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="5FA77987F6E73880" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E309AC1193FE353B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C9064CE3D2A7C80E" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="494A56B4ADB1E33E" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AB679F8E269C465" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A711BBACD9DC8F86" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="E6E5106317E96886" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4B0A12B534DEA5B5" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="89B78936EF002402" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F6FF23CA3662D2F1" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="748FE8FABBA5A383" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="700C8EA638D76F1E" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="48609917EBB4D7A2" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C9091C3F343490E7" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="BE693830384B09E9" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9F0645FA110B9C95" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="64660A7E08461339" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E2B0867A4FD6DD77" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="70DD10664637CA7F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="21D06DBA4718C01C" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B4A7AE1E446D328C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F18E6CC308098DBA" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DCFF168D02C4D4E5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A836825F4EA14A12" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8E4D02B77891E26D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F547F1BFAE172EE6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="C4FF6A95B16800C1" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6A3C2AA25062F43A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A97985825837B449" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EBAEEAB70E70CD3C" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9AD922488D4C5C0D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="57DAF8DD2EC8F26D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A4B0A2D6EA72D480" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5927EA87B40157DF" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="FC91391466FE4CFE" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="61B936CD7A4451BD" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="12F8F7D5FFFD4006" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D25E74B3F91857FB" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F3B1B334D3FB89F1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="7196FE45A9B19F1B" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="A940FA4D1E09A89C" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="A05B35F61DB7DDEA" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="32F18FB93633BB9A" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="14892EA9D12458F4" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="5ABDB1453A7B3AA3" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DDC49C45D61E462" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AD2B8F9483526378" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DFB69176F6204B05" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4823B3BF3ABC81C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="D3DB0E2F00D58A2D" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="58A8D19E4364B3B7" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="E3FE96D5872C8C75" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="BE09A2C0157A65FE" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="1EADE01AB241B439" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="BBBD5D3D071110FD" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="73CE4E510069BF42" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F40FD93DA9D666C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="459AB4DB53C13F7E" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="41D785665CEB6254" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="E1F35EB7AF1366DA" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="F85A85FFD3F0719F" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="98D6A25B8E79793D" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="19FCA7D56A6C54FC" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="D7D3A74CA23A128E" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="FDEFB3E27DC3686E" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="E02A404ED63BBB09" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="1E598C0818FAD6CE" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="7341C6C910254FE1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="FD697726FD7283C0" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="120B38AECA1DF19" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5090ED7C6208D275" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="4AB938B8B23BD8C7" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="A4C11B48EC8225D7" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="FCB062385A571C9D" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C073F983D07B9A82" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="3D8BD34C9CB91002" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="B370FCC894052A11" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="62C3D66F5107A176" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="76AD1E6C9862581" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="709FF6B8F0B61A99" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A6C247F4DED302A5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="D8A289BF95CF86CA" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="8729AA5F7DB030B3" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="7D185F4473D626D1" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="DD8F3621E9BB27CB" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="226A94B1ED93C48C" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="17A579E0769DDCAB" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8ED33A38F0A0B8A6" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D4F8FF706A772C96" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="22411680CF4FFEF6" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="281CBF33A61594EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="12B45DE28CE26DF0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="62650EE611DE0352" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="E2ECBF22D6255F3E" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="8B1C79BA177F5CE9" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="993E61C0F6465811" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="D973184A27191FD0" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="91BD788BF0705EA6" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="25A80D8F2CBA4A7F" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="B8A95237F69AC194" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="2181AEFAADB6B64D" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="1778D9C0E9322945" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F84CAA0070B3CABF" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F7AE75CCDEBD9B11" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DAE0D345697A598C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="1EB4B0C0946787D0" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="C09003C85975DBE" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2965EC2B1E9E0D03" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="62FC4DC306AEFA35" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="7560071518E834D0" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="4376C0A9E7B28009" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="472D0B068C7C8C61" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8AD60B5D014438E9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="CA1A7078BB70531F" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="291BF3E5CA773DDE" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7178642C7FD9FD0F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7876B54CE86DCC6" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B92B5F6B1B3A2040" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="8AAE28A3D33CD5A1" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="855FE5BB63A49DD4" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="3BB5D033D2C94E5D" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A9F24FDC850C5FBE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="742C53EC1502062F" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9DDFB349ECDDA7F8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="D0FF883614A7A6CB" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="39D573D4EEC8F704" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="8EF98915C8140619" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="9B85909F827662E4" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="15DB543177E04C28" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="7D07C694012783A8" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="12965B64C690070" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="4C9BBF89D9BD702E" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="A3EA3B31260CB7DE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="BC6BF519897777D" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="974F1247158A8339" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="1D1AD73B093AEA2F" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34DE586717A66D25" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="948E103D0E9E2E9" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="EF9412B5E08BA883" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8BFD1552465C50E" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="3A71DF6F7A5C07C9" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="CAA1FA14FCF07F6C" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2CFB6EC1A9AD6823" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="FDFA4D1DAA28C2A6" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="663A7B6A80D0B4B0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="8BC7244F647435E3" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="707BA2B6578EEE55" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8C308B85ACD75C90" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="424D48C1F21C326F" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="F8A715B5D896B619" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="EBF2EA442A049A21" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="B47361082F7C1B46" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="8CEC6CE2A3F11CCB" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="25C1C12337DEC8A" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="B1B30976C84F7266" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="18006298CBCD2C7D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="40C817454C9ED45A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="81EB744450EC063E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="E9B4C7CD4D9B29FE" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="5D6014B699DD0683" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="A5DCC46D2BB4FB87" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="6D6916DE12610929" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="880768DA32C5F592" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C045DFF9D2FDF188" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6B202494B5F4116" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3CF1D873C74E854E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5EA92ACAD97F75D5" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="3841F20DD602A11C" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="A7783272CD749C33" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="EC63C3F01D31AEB7" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="5DBE3EBDD330C42A" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="ED099E2F967D9F2A" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4B94F0E6A5DE1AD3" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="86AF5DC9200B6475" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7484761AC896C5AA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="DC33804780766C1F" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="685D507BBB4E1705" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E8B76A0288140DAC" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="9477BB88968D3834" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EA734F6F80104E71" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="34C7B7ECC92DFCCB" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="384709F6C471B6F8" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C2F11BCD16B2A62D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7EB3C8D0EFE6BEDA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="C49363050344A02A" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="62BC829A273CFDA2" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="D5722381FB7ADA1C" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="3FD84E07A720227B" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="C3BB04DE056F87D7" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="66C34EB5A3595B3E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A0939C60B13E404" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="B05383F9B6EED306" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="516FF18863651C5D" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="E4B54BC970674D1B" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="298B44E3E7C3379E" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="59E4CB5CAFA44553" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="7C1F8DBB7D976A7E" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="65C636197BAA3065" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="44FBC36816A0AC96" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="4E0CFBC35F02283F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="C6FB003CDC18C200" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="64A1A30EF4B08A3A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="65A680859C3C3E64" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="C09FDD0FDC159742" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="DA7348805B3856E" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="56AD0791F66958C" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CCD817AE37661A39" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="9384466B2826A9DF" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="C747C087A0545BF4" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="3B0E3CCDE1FA45C3" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="99BC8F44F01162EA" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="F9060D9043F4C066" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="82C80B394576862F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="E9B23DD3F9253104" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="4B123016085B6963" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="35DD6BD2DE7428D0" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="1E61780BD181966" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="1E778B50D4A3B327" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="44BCEB541CE33C59" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="9962611732F77CAB" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="3B92DD33754EFA4A" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C075BFF7DD361567" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="D9FF0A87072B4578" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="21D32AD21695E514" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="7DD08A3708E499E1" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="1BFEBFEAC55E7211" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="2A2902E5F18958B6" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="ACA44C101E960694" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="1A27CD0FF6342893" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="F1648EF803414FF1" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="17E4415A464795C5" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="54D68DD6AD541B10" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="950C5C3FCC58612D" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="B2EFB299CE3B3D32" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="498178709890124B" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="138371485447A3A9" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="E74B5508693A9644" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="40CE774BC6637629" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="D937D7C52F38354B" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F2175CFEA31E7DD5" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="314E6B90956A8784" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="82219987E8A1EA40" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="7BF80B2DBF479DE0" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="D283C24003F71F99" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="56CF57150A691C39" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="387501FAAEF365BA" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B11A38FB3D15CFB5" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4D702FD33B14BEF6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="13E90932C26917D2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="89F514AF70154F76" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="6DD42102181954C7" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="B233E10FA6FFABAE" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="B251FF4AD0AED9AB" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="891435401C518572" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="BBDB8091BA5AB7DE" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="50DE760F12F8F180" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E8F771400D2837A0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="1E3D6F7A6F7BA1A2" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="54F912FFA4D50DDC" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="3E3C844449BCEB47" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="11CDCAE0AB994207" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="83260730AA860571" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4E071CF891356002" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D962EE3BE17F9511" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="108B14EF0ED1EEAC" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C824AE299786F91A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B854F7C1CB1116DE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="8B21D8737E86C57A" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="9A999C8A7A241038" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="D297AEF0E8151FB8" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="591B2EBAB198CF78" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="46F635224FFD1E2" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FAC4F4823C54A5A1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="89FF29D67C377188" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="E7A8F19070201574" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9ABCC090FFE1ECE3" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="66211B16053291CF" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="E36B14CFF19BF343" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B7CE8FA34FE8833" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="3BE5E3DCA699D420" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="5476354CDC5E38F3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="E9883CF8FF3E8E0C" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="35347347429ECADD" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="4E8637B0F094440" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="13B7765993C5D2D8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="68F158F4C7DA3D91" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="62478A10B96AFACD" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="E0A2D82AB2995E6B" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75E4D5CA2385B3E4" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="848C9CE4CA566A0E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="497E8F8E3CEF233D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="6EE4CF9B068C54AE" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="5D3E0487ED54EA93" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="82BF6074D78C83B8" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="D5580141449F4E43" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="D42520AEC5297541" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="852A6C6C7CE76E78" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="506CC1B8EB7C9861" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4FEB14BE0D7F3836" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="A415E88617CFD2D8" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="3DD9BCCDC1AD7E80" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="516C682E65338828" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="B6093842C91EDAEE" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="B4B118B413F3A73A" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="6435BC8D5BC219B9" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="B195C309A7F08D50" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="878DB5E564539041" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3D36E50FC5DF7503" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E1B7FC4E9BC066D7" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="496EE45C9233C7A3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="43B1DB764F8E473" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5CBF33107A13E452" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="795D9163BB881B8D" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4B4E2141002539D6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="99D71B0E8062FB9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="57154ADC2FF52861" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="E56E32BA52B7C143" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="EE55010C779ACFF5" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="8EAEDCA0A15882A1" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="F464C731BAB37FA0" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="3FEEDD27DDC1B21" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="C514A224A9DD0540" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="C386015237342839" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="5E90B980BA507900" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="DD5DB7F9A3EBE128" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="16196C5B21C1EFB9" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="BC09C695F1FB8859" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="AEC086D58FBC1D7C" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="3CD0D252435931DA" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="3CBBBC7F988DA287" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="698CDA3271DF7EEA" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="28F4D464FB7ADC46" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3839A8A5FD96471D" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="42119DB9C6D47561" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="5C6ED0F6390FD3E4" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FD2E4FDB74EFAB6B" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="148316BD9B2EFCF1" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="4DC610BF79B076A" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72B9A31E50531505" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="BFDFCCEBC7E9C150" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="AEFA9FDCDA8474AB" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6CD6B78F0D659015" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="77614D39FE205F9" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="9187D1C82C55B82E" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F220B38E431A2349" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="45CDC243222A7084" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C83C39846479F5B" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="446E8B4583ED0402" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="B27FD30F58273597" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="E9137D7EB167B30D" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DA1F828DA593C73E" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="18615C3E589BBE3E" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="9DF49D2F7984CEA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E2ACD966C526B6F6" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="83C4CE36D8226ED1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="19089FA2DCD68F5A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="522616E96ACE7BB" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="937465DDD92E87C8" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="39E8145B39C3AE43" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="45AF7DCA5BE25D96" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="21ACD2F5721BB43E" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="912ADC5CEC6AD75E" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="1E27DE625227C033" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="2F1DA71E0B7009FF" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="59005FA9EF972EA9" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="D5C07E79E6136D83" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="BCD678A5B8054B64" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="F3777164CCE725A" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="32FB43AE5A5F448B" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="3D5742A2689C1E31" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AE2B0451285E0561" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="59C05F84CD303411" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="9204454E87129989" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="E6709139CB490F13" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="3B5EA259472C244C" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="91F2B8C82CD9955B" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="CA2BDC9D1DB1EBFF" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="33BD7A79D0C61816" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="DE194AF5689FB2D8" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="7D85F3D30838EE43" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7B4FA60E16A24761" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B3F42EF9FA968B6A" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="6B234854532C4A65" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7248204584785152" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="38AD0B9C648EEA8A" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="FA970B0F29458DD8" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="2891B7ADE5037B82" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E5B802DC4C863C2A" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="1FAADA5AEA007E87" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="58052D983FDE8C13" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="B428F0A83C17A14C" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="996071D63EEF9DCF" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="C6F3E16977BADD65" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="406BD01F344E3246" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="F87A22BE64C3C336" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="67B984AA74DCA6A3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="AF788BBF452BA8A6" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F67C9B8CAFCEC7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3312EF8C36797E43" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="1AE80E296A91065C" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="660C780938EE2401" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9A42D22AE69E9C70" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="764F60485C7F5114" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BF94C2DD98DC7C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="502E1CC1CED211BD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B7D53EB84DCDC268" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="85684BC6A360E37C" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="13ADD37AF452BD94" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="436DBB4ED59EB1FD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="13660CA648D0DA44" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F5713EE122A2D1F0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="332FEEDED78903D2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="58926F654E5DBCBB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="48E726EE573709D7" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="E3380A175BAB99FF" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="3848BB33C4E95CE6" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F90CAA71597C237B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C5F76EF45EFAB606" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="F4EA6E73A0586131" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1452B4495FE42D87" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9AE7CEA087B7B682" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="614F3B61A69D742" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="588FA5EA754072CA" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F0BE070D84A660DD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C8BA479260D0BF6" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="A89A413BD31F82CE" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2A70DF09127E22F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5BBD8D8E8EE6C85B" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2ED1D6E66A1A9B17" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A9BDFD1B40D34BFE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="92D9834143F39144" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="259FB8C7FDEAEB40" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="253505490E454A9F" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="105523F6A95A5D65" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FE7B50E5275D85D8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="138E555AB80969F9" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="63750DC87C917C8A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3083489A0A4BE015" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9C424937631B27D1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F978F1BEB60EC5A0" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="1C4CBC484C011485" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="EAF17B9B266A546B" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CD3DC3AE28297B8C" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="7181F00389DADDAA" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6471895F336E8530" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C1626B9AA1524A74" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="210F8C2492758B3E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="222B7FBB3655990F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="2D28AD53B2DC42E3" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="86D442CB8C656641" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8604A2D56BD0D042" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A806D145D5E8F236" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="13E61306634350B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="306D5186E0BF17E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F3F1DE593C1A24CE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="57099BCC5A755677" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="591D214328DEE388" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5A999369BEC5AB43" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="649290790D5B24C0" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="221A589547241AE8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C95858F0AD0E5E8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1CD570E4A1FAEE0C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="AA7E1D9ECA959FB2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="42990CF6E728451" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="F541AA7E061EDD5E" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="82B0AC201A6E5D11" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="71757EC532538796" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="BBAE259B0D45A977" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="repair_state" class="Tunable_ButlerRepairState" display="Repair State" muid="BC6ADF7D57B8A33D" description="Situation State for the butler to run all the repair&#xA;interactions." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="B5A48F9609D6CC5E" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="77524C2AF5AA595F" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="219B1A29D9DE50FC" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="18A6A40ADCA420A0" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="25CF86BB50CCAFB7" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="F8D8975F4A312FE3" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EEAB964B5CB5FEB4" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="73B75442D038F444" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="59CDB0F145877027" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="43373D535AD3B5F4" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="FFFC1C559DB88A0C" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="B891FE5A02C08BBE" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="BEA02D0F5199747B" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="ABB99DF1F7352D9" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="41E2EC40CD69A2F" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="50EF20C117751421" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="845DBCE1681D2068" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="370643AD0847DEE4" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="4D6227930C2011E2" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="B079A7F4B7E55A49" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="A0D9B0F8C9B12C3C" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="821055DE694328A5" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="C78B67CD7AD9163D" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="1A7A714672A7B2E3" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="9192A4E5791706B" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="36175D21C09DE1E7" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="86D907D198FD69B8" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="7E6D17CC0A900383" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="B10AA1CFE3E76290" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9713E1A946EEC864" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B560AFF33FAD7376" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="CEBDCF210297ACAA" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="4E6A2E6268D3FD26" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="ACC3650F4BBD478C" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A731FF62160D2DA3" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A8DB184483D421F9" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="D3BAA6D1319A1912" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5B05485387DD302" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="6DBD2A5BFF155174" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="4334EA43CE7F6A50" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="C8618FA35DF31E21" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="25658EFE5DDAA5BE" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="3864958BC68981B6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="8433096D06E588C9" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="DDDC6DDA30845608" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="59A120760D86540B" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A18EFB949C79B963" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="89E008A1EE9DFE26" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B53B72761924953B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="948043B6E9F750E1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="A9D618EE1922A56A" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C04565A04846682E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E0B5916B346CAB19" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5EEB39C295CC7208" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E67080420E2B72C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="32AD579602CC4B7E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3B3BC0AD150F79AD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="8C8B15924D93F5DE" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="383C8C0EB2C46FC" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="417C9E097DE654A1" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C7655565ED9097DC" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EE73CF7C951A28B6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9FF7056CB8FF328" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BE33EBB80285E4BD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8411F75AEA112104" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="4EA743B3B4A93861" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="40A1F5C7E0DE8785" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="60131D1F738D427C" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="20454C096CDF2577" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="4BF16B0D912FA758" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B425FD3BCCDBDAD4" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CC74E58409555EDA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7AC4D74368D72898" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5D0D98DCAF716769" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="BA6841599FA28CC9" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="DD1BB1E51EF6E609" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="302E16D2F07FF623" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="35DA4A17E54018A3" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="84C07F0FD78BF193" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2CB908D41670EE16" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="F77FAC2947496BCB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="50477240AAFA86A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F411DD326FE57ED5" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="10AEB48DA24B794D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EE7BFF9364B6B5DC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8E93F5C471EFB63A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6420161CC3AD4DC4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="5D9BAA26BCCA1DAC" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A5D8B7AAFD8DC7E7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="916D1A0775C609DF" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="14143599E954D682" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="932CB7A705A6A164" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C26350BBDCB9638D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C9DFB977A1936E1C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="30E94FB6874E52FF" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="6DADBF1A68821F23" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="5ACA3FB8D6B5768C" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="495ED5A35811B736" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="FD7A360359132833" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="2B7C5D86571207AE" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7804BF7CDBF55B85" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="677C34C2108BC800" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="F940DD8560317C67" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="E453D7C335A3F0AD" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="5562C111B2959579" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="C204BACFC3CA3963" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="C512733B09072D0B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="465CBA11CE24145C" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="316E6497CA52C683" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="703F6180EA85C3C6" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="3CDA21F37E4DA066" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="E135FAE3F3497B43" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="4892073C72CBA252" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="C14C1ECC9D66A1AA" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="C709B0744398C219" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2EAB792FCD20305D" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="858B723DD87300E8" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="A71268210C327BA5" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="F8FD1CCEB6821E5B" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="DB589C1CD1933528" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="AB6E9A51AE249F93" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B395255B48E3B3DE" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="20B79670E57F19E9" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="8DF6B365157A68E2" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="2E12252C61972BB5" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="1FC558E1F7F0A67C" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="15B8BEEB1F8BDEE4" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F115E1C868F142F3" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="108F2829C58D10F9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="12B3C329A7263D5C" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="3621975BAF95673B" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="181B5153CB966C0B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="7A141F2326EA859C" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="C3EECF1C896AF3CB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="FE6DC2F410DD3512" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B42461AF4C95F3B2" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EC43FDC94DBD8C47" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="31AF2B01E3B959B4" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="27FF00CF5BF4D5BC" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="F1B6BCE98E4982FC" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="F9B8AA27216DF7B4" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="5EB798536105EC28" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B770BB7409596E97" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2E26EFBB8A56D453" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F5C80E2E9086043C" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="1C4E328095797DA8" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="10DE91D4AEFFFD59" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="68B91EEB643EFE69" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FDA9D12EB0F450B9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="55D4120EE06F7678" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="13D5202ED824B20B" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="3A659C549F229493" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="FB06B03DA9FD9991" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="D5F2434FDA939EC5" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="B54E9A47A68AF179" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="6BDB748500E6CA9A" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="8C8AAE4538DAFB8D" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="60BC300F3E1B29EE" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="122C5ABCDAB43445" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="53DC2B1B7922234C" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="4D3EF5E5F2345FC7" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="DFAA8F6098698DC6" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E110B5811CB4282D" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E573CD935D5AFCAC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="93B1511532BDD84D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8EF5BC05995BFC5D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="20A60F3FE1AE0B6D" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1072AF3AA2A79673" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="89C2C6EED16CA850" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4862B27C6D017BB6" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9F034BA0F97A70C0" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="5B5BA006A7F183BC" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="6855620CCC197F68" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="925FE850ABD9E66C" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81859F41F44DB73B" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="311DFCC265C674E2" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="266AE059E2270D25" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3CDCE9992AE4FF2" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9DEDEC27B5405453" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="96AEB117FA523657" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D826D897E7DF0FE5" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="29C93753BD48D33C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="6503696FB2F100FD" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="CBE7D4D1CC79A1A1" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="C8B0CE38676F924C" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="382D469D017A2EAF" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="3E99A5CC56AFE630" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="AED7005586D3E12E" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="AC44B4E7E93580AA" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7995E2152CABB5C3" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="81186ED58F947254" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="4C764A6C5A81BF8" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="3902970A6ADEA9D7" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="18AE0ED5CFBBFBA4" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2359EAFEC9C1559D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B685A69DD1982748" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C93555515E2BAB28" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC60D22C24E0980C" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FC00556B96F9919E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="92FD187355634877" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="C28601FE5C90FA74" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="F600C432C7D22A2B" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="B0429F32978A1A59" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="E3B6F63DADEB93FD" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B244F037076321DE" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="69020B3900ED6F20" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="7EB1A405E0659D7A" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="500E91A707291681" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="85FBBEF4743A7AD" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A0FB0812787D26C9" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="70E9D7EE3C6CF3FA" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="642364887CCBBC94" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="45FBFDCC5434ECF4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="74AB96C913CE358F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="675F6A6BDA23C26A" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C30025696DFDF3AA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="45AA66F8B2DADA03" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A45F5C6B805F3CEE" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="A9BCDF900D3D41E8" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1A1AFC185B694653" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="449DB8598D2A0535" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9F81E3FC13CC2CBE" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="8E5E295F4275332C" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="D8D83EB7611739F5" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="BB02C026DBCD1135" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="4B7369FE5C3D21A1" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="A7FC5255014B2E87" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F35859E037E81D4C" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="C29AC668E25C92D7" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="DA3ACD164A066C98" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="5EFA4F459A14CE50" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="C45F11841F3DCC8B" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="84AB52BB49A00C62" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="70AA0A715ED98000" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AB423784589AEF2E" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="EED0EF8DF1CF6F33" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="5F2E04FDAF024B6B" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="908BA35898B1E96C" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="FB609B7F44B0A9AC" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="2B57E54A06E0E717" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="1FF13CDE3FCB921D" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="64124D2E6C60F97F" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F402DFF14204D5F1" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3F0BC23A96F504DD" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="8C3E7F65E84966" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="F0F41FD1E7895922" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="49534A2D19364B3E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="81F4849189D7757F" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="2794368843C8428B" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51CC3AACBCA38CB3" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="33576A33CA0B3044" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="4678256CB4E1030B" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CD31993276A8C168" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="1C5322CC41DF545F" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="71F4C54B0096034C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A8F47C07BE6EA95A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="CD9AD702A43C7D4E" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="9853EAF04B374A93" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A0C99224C7919A7B" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="A36E8E6DD67F34DE" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="61F47B1D1EF0D592" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="254604EB92B61D03" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="C7E1AE0BAE1C94E5" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="532FE85F8A10AA09" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="9BDE53D41DE385DE" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="9B300D2603132352" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="3EBF4095CFAEA44B" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="23D2AB132CC4F4A5" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="4F1FD66C72AE8817" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="63D96A0BFF0E368" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="2020D33D89DA7968" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="6CEE2582C9CB84F6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="50236D2A15988CBB" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="EC3E79CE4EBE4AC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="370912C12773A913" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="F4CDC1277F4FA268" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2009F05D548BE46C" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="D2DA6CDDFF4D9663" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="EEF3F45DCDE28D55" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1F940D5BFEA94519" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="FCF0084029E03698" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="631583773085AE17" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="CEECCA5DBE4DBEEF" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="998D7BA6A3D7CF3B" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="71EB7388CA262035" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="D9431CEBDAD6E732" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="7264EF9A704D28F1" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="BB613E05D149ACCC" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="604D1C4D5E8B6C6A" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="228E7E768ECC28E3" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="8E377CA907D85D47" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="930BE6530328454" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9DC344407A6D212" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="F663951A79229DB3" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="6E221E4FDAE70E13" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="89E55DA7BB513003" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D64AAC58A1144A89" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="33C9BEB5BBAE15DD" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="E871E642B075519" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="B70FA8AFEB0DBEAB" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31FE273A8F901EBB" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="7C467C41CE9349B" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BAA5A6E8A140F17D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="BAA53BD27D9E956E" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="69BD2BA8C243F8C1" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FCCC9DEBFEDDA35C" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="5F4176CDCAE5506A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7D56623BC29B1C4F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="EE38B7D143CA83A2" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="D76827FCF4A99E8A" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="F66CA8C1436D2EA5" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="5892404B8B53966B" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="1BEB92D6CC6BDAE7" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="C50765B4E7C6EFD7" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5D373B22693953AA" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E1B3D9611D04D149" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3F97C2A6083FB6A4" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="7790221ABB8F4808" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="E4D04B4803EEEDC1" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="8924136880E5B923" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="EDEBFFB182949701" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="87FDEBEFD332CFD1" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="B138C8A202308844" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="9DE28BF1D02466CE" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4931668EB42079D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A425893809B4ED2C" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="A6D424312BD09509" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B885BFF3C57C55D8" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="FEA47244D145C328" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="871703CDD6D8E394" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FFDD88C932A30280" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="BA0D3044922F0791" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="866FDEA87ACA3C05" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="70870A0636D7C896" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="18A6C57F8D0D1A99" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="AE00CDCB4412CAC9" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="B94407ED2A98B5DE" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="5EFED90A285D1791" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="224F1BF53AC72C2B" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9A963EC47705D75C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="291F4E5F231EDD1C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="854268EEB1850D2E" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2DADAC24C1E3971" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="999528424D03BA5B" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EFA909D6305077BF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="511F84740B83B6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="46009D701A19A900" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="40409431BA633F96" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9A5DD1D7EE1DC046" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="541536F064BFFA08" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="2A01ACC7A2ED4B10" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="697F96606CED0CE6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="866329159286A7E8" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AC5E44C361F7075C" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="3B2A8BA7F7B3C25E" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="CC66F881536AB0D1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="D55054C04527EDDE" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51A637E8B81B7C91" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="A1C6D988ADED3C97" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="BE973C7E1F1A9AF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="3AB5562F9CBDAC34" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="A4B6C52205E4473" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="74EBE10C3DA173DB" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="46F5D0141101150D" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E53CAF3D85941D8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9EC16F6AF1BC34AA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="4D68EE57FF33A158" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="E8C4746A3F82AD4A" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="92C405FBC30E6A4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="83307CEBCED573E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="ED741D7DA56E39B1" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="A3BE49A3D0249B66" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="CFC0459507F8E145" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="9253CC785B75A01" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="44B9A9AF0035EA93" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FD56EA2FA05A9B6F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="29D0AB2A871BACA9" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="8CCF9948F9B5AAFB" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="AED77DA7D6CDB98E" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="4245DD90CEE5CE6D" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="2EB54C0D614339F2" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="B3B9108FA703C469" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="1EC135D10AF43A52" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="1B58CCB7AC552DF7" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="BF5204399F4A51D8" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="B77356FDDBDC6AC7" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="489335526BA672B4" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="ED952FA8B9EF8562" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="76C653E5D9C7D891" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="53DF8F8082727BD5" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="A033318642AE2A06" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="354D2894A3FB94E6" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="5F9454CBA429D720" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F95F161F373E080" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="8FCBDC6A690CF4FA" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="1785E48FAA8C6713" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="191E45FBED765DED" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A2DD9BBE87DDF119" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="946B109ACDB21009" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="DC3A8FAD7B69ABF6" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AE08237E6889C3B7" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="1A6DF24F855F238D" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="93802F3872BA26E0" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="346F4E0B3601ABF7" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="1D75B9F772BDF275" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="6FFA6F8501B924CB" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="1FC56945AD2CD50D" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="9B50A58DD32F55EA" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="AAC35AE8A85CF9F6" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7B8709461F64372D" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="2532723DD5C5237" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="C8D016AB76B17504" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="B5AE79F7881B9ACC" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="3D819CB9DDFD4C65" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="9E9B4953BB07BAE0" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="D15DE17C5BB4654D" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="662F4113B14AF486" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B5BE01B8E543912" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="9C5E91A35C0ECA0A" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="71CC795893281118" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E64957651311712F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8D021FF57BCDEE8E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="589C00D33EBE2570" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C3C483E3F3E7418F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E91AFC5B97292F14" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="98195DC868F6FE44" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="499F9D1EB07CA618" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="860A8C618FFBFE51" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="73D6E1FB5D62179E" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="D9E509475D77B7F4" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="F1996980CFC4E3EC" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="36CA3AC14C419D59" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="EB0199CC9818D892" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="27DE508FA9836891" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="277366EB5973A854" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="ECCDF7A11002697F" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="6E8E735C6CAB31D8" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A8F61444E76A3777" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A97869CA154B0386" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="CA41992AD7AC8531" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="62F5B1B547DC80CF" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="532334FF255EB445" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="55CE24574EAC35" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="12F1FD42CC466FD7" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B772F5F95B5B1E2F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7E2BD1FEE61C52B1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8C4E9830125FC9E0" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="B4CB239DB3CE242D" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="6BCA3FDB9FAC21DC" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="181DC22A2935E6F8" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="89442DA65DE8BDE0" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="2B1D2724EF2688E5" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="225CEEF2589757CB" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="614F808F83374C53" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="A2BB7A212076CD79" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D68BA9DCBD64CA94" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="DEE12ABA00F29273" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="B1B4F0B0CB52087A" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="F3FFB2C7E3E8EACA" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="4617C654EEF35A0C" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="987AC6539BA6B552" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="29ADBACC9D86DD7B" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9C6D1B0F8A87CBF1" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="29627742C2D14CEA" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="A255666DD641167A" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="704ABE2B68C42D53" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="6788BBC9E5416E40" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="E30506D55682E262" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="ACAAE8F5680489C2" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="97AB3C8078A6421" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="6915A22AC2268761" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CF2FC9C62B03A48C" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EC740195ADB41317" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="1D4E00808343AE8A" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="54B670D1786B9E1C" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="38066B8D7687C9C1" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="B381F1980435C632" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A25F1718088B289D" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9485847E0D41C756" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="EFEFC39CB296A168" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1A3C11FAC46A5C24" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="66D21F5C16E35027" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D5D7F2767569D248" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="A54588318BDF118" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="3C80CC29D06AE300" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="1967AE813FBCE1A" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E67CC31FBA5AC993" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="3873C4F77E3D3595" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3390570F3BFC8289" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7407E0D59B832E34" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="73392A45DDFDF300" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F5E39CB542DE7DC1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A0D4B4910A341D5B" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5DCA3193468F780A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FD3E0ADEC48731A0" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3CD9688D9EF676C6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9D499FA818DE17FB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D1A3C1E08618285" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="FA642F527AB0EAEA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="75F2405B8B8F3BD9" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E3EDE8C823AF324B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DBA6B70FBA586294" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A96ECEC1A08F66D1" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="67F0C39B04D8A113" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FDED568A88167B91" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="22FF8CCB9F8FA49C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FAD9037056D04750" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="DE2B3A21443BE80C" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F1A25EDE485906EA" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="79F1D43BD7A144ED" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D98FACF0F6D0E8" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="776076AE0F33972" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="57A7C0F16E4C4A1F" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="C5C5EA3D0BA1890A" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="9FECECD2EB6E3C69" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="4333B91BE189C2F7" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="DEEE5E40D9C18ACC" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="8FCE1B6AFB9C86B8" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="70BCE6B4C2FDC8A7" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="71ADFFF65C2FB41F" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F4B528A3BD987B1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="15191D0105265A74" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="4C4E9AD8EC8C7D11" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="1DD9D28FDDF069BB" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="636B99230BEB7A31" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="A23908DF3F8CDA1B" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="E4F741D9B60DC4E7" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="62C2DC4C9425A074" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1A314C5D1A99A1E1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E357A86A743C712F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="1CFDB672B85DBAE0" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="BF7649DA9610A489" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="18F3DBE3AC9EB84F" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="541DCD8D0DDB609C" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="4C1E6957AB21A879" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="9B20A966291F745" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="CA96E3B74CFAFC4" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="5F276D218A8B94E4" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="D1487EB648C52F72" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="C85A17464CE9CE8" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="CDA9D4A9B152EE7C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="FA722BD8210931E" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="329A38FE18F36100" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8A5F2701DD4C7AAB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="A4F6FC8C46D5BB27" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="8603D2F970F3B6C3" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="B82027A4A87214EA" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8D3A056593479227" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="67111AA3E2B59FB6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="FAC64E5B91364BBE" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3871DEA13EE4DCF8" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B64FACF514ADFE45" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="20AF3BEE06BAB5CB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A029B683894417E2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="A9E1D060BE09D72C" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="93DD3014D66628BD" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="5C9130842982A1D6" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="E74CFA5ACF0F1C54" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="6F2252EF8DDBFC60" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="5EB3FE081D8608E2" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="44971D8DB3FAEFA" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="74EA7418027B15DE" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7C785BB351BF83E7" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2994177E492786EA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2F073911E7961B53" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="5F11AA45BA556978" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="D7DF6060811E08A0" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="FFDCBC532CCE7DAE" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="5E2232ED07CB286E" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="EDFC97463CF8E38F" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="8A2D6EA41CE1355" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="2F6ECF444C0AAD42" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="6CBBBC825B2B2FBE" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="D39ADBFFA34FBD17" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="BC9C57FF59BFD1B2" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2B5A0ABD103C69BC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AFF7821A5DF7C8C3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="4CE53E66ACA0AF50" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="8B508AEC38046131" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="FC4F354ACBBA50F" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4C8993FE6C112AF5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A104DFE6C43A2060" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="1E2CD1F0E44EE954" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="CE546F882E88060B" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9ADD199A0FC74C69" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7A5FDEBAACF09938" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="686E3DDA1FC6E1DC" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="D8559E8F7BD7299E" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="936592059460E44B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="110C6C2B42EB7496" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3875BAD9D27C9F86" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="9B3EF2397C03A57F" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="E68B71B4126EDED6" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="99F8011488F7E4CF" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C29620CCDDC9CF09" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BD0C33E2B38D2DA" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C12CAAA1F68E83A1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="5419B10F227604E3" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="6EA6F47012350A9D" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="1E384E84EBE0AEDF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="5C42BB9818CE94EF" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="E4DCE5B164F36560" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="54CF30132A9A692A" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="F3C8C00FE29A163A" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="86493CD8557F9CFF" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="124BD79DB081A3A1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="123A96BD1ED99A41" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="5A12438C3E367D3" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="9EF85F331246831" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="73468977A77584A8" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="79C77E2BAAFEFFBE" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="F9E88868AE8AC93C" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A648EFC3F0A2F5CF" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="98E379594954E418" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="244FACBD93E366F6" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D43E09A8932CCB3E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="66A02596767A3EE6" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="101345251A8E186C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="56720F3FADD9F0B9" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="AB70CDD87AF1A861" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D7CAADC503DC243" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="163DAFDDDAAEE5FD" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="89129EEB230D0776" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="FF23B13B864BAAA0" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="ACA0E36DBB245CD5" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="282BEEB8355C6CD2" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="71744444BEF88579" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="7407443EABD04336" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5BD351E52E6B1BA1" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E0865D9D0CD4435D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E5C275A5ED5F0D35" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="3EEBCD822BCF8C67" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="7F9DD2528717A914" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="A449D9E7A631CB4B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="5DB382A42D721CC5" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="214A1811A0059F45" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4194A722531A0C27" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B42CB1A4ACDFA1A1" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4244D9C4F1CAC018" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B8754D9E9DF0156B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="16E96A9B7E0E4149" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="62ADFFFE084FD8A7" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="7FD412A8A130E7A0" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="A3226C683D4A0CE8" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="2FA014360B638877" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D0244A27601C3AB8" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7735B3513ADF9CA4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BAB487C5242E8C2E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="22EF58BDEE8A76D0" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="C3BCD9958F64C7EB" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="235EC2F145AAB731" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="7BFBE3A476E522E9" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3A094DBB6FE67617" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="71807A141ECD2DF6" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="942470911B6863F4" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="13E72C004EC3F329" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A5534625F90E5185" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="948AD6DD3C117DD7" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="E85B2917BECCB738" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="DA6A5ACE4E6E56AE" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="D3E01EE647A26578" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="99B1EF607CA2DD78" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="2060E58C671AF2F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="1D02C4C713C0B170" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="B37717A608D9B7E8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="964818A52F63AEBD" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="C32067DC827D57B9" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="BDAEAABDE6A05D4B" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="5A8119B18ECD5311" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="33EF98729AC0B0" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="81B662F6033C1C02" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="7EADAE71958A7021" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="99376F90B1D08C4B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="E1D54B3911F53635" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="F29EF41AE2C8B413" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="79452CFE26D7892B" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="F40A3BB39D32DEA1" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="C4A7C3FD8F32E990" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="AE8A5A7A325987E3" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F7C486FE91B59C9" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="51930625D89D94A8" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="73635AD8E571DEA2" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="2A8711F164A86336" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="108BDA471571542B" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="5264158A6FEBDA27" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="245DB092F9DD1EA7" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="43FEDFA81168BC1D" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="B878C259C495D06E" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="4602CCD262FFB800" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="AA3E5652520A24B2" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="753C163CC952C887" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="85A9937C0BB4FE76" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="6EC31F6CC4E008D3" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="3DBD5C9B100B13F" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="14FC777F37C4BF0" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="3557600148C3B5C6" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="7FCABF8903A1FB45" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="FE9309E99E4FA971" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="C46A49C77C2B3077" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="90A035CA3E4738AF" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="7FDA1F60AC279C61" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="641E50B3761890F8" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="6594BC49B7AD50B6" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="988770A9945B5DB3" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="AD2922A3D24F3E03" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="D10729AC6266E5E0" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="DE1E40654C73E0A2" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="85C671B71141349B" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="D859337DCEC1D905" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="1A892F1477CACB24" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="73745635BB2B4D3B" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="E3C2217ABE77C78" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2F160C6EFF967F1" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="FE4F8B7DA2D6E181" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F4D21188DE1D999F" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="FA1C602BA4A4B087" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F54122CFCA879F45" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="DB44143CC6CAF3FB" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="145CDFF233FDD7AC" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F2B0450709A5E402" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1A64485EB1DE1A86" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="905AEBDDEF1D7CB7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="1FE8AB31C4803A72" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="D4823623ACD6C09D" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="8A7779A3DD518D7F" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="592AFB469C937797" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="EAA2D4E1C1DB1C43" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="8631E8F3992D2F75" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="33C7388273F1F916" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D3534ADB39BDAF4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="5954D74D24FCFF85" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="834CCE82DF989768" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6EB0F7520EC424C8" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="ED8950920B0941DF" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="847FBC033DED1ECF" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ED08297D165C8BFD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E02F5AAC37EDC894" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A9D5BC10921046DA" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8521A4B8BDE98A67" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="15DA1BB530BB6F5A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="EAB2F5CE50F537B8" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="164DD3C388C3716E" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="D391A356522F6156" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DCC8802500B3A219" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CFBC2FB4312F411" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FC15B615280CCC6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E6A72E3B5C9216" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="17B76AAB89DA65EA" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9D4C3168B55CDF0D" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="301B0284F3E20CA7" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="6CE1DC19263B62BE" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D4BD1E90801FB2A1" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="49DC8C2FD585B0AB" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="FF6B65C307B0349B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="D6111DE73B8EC730" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C9ED8856D98969BA" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F5FC418210BF769A" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="7216462C9A3AE686" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="DD127A5B31314C2F" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="FE9792AB8B386DEF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="84A8C48C08BB8D98" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6012DA7DBCCAF47E" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="4B22527B1E559549" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="7FE8BCA469AE34B7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="663EB07A5CA36CA1" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="8CCBB23C5676FE5E" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="DE3637AA33D32F7D" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="6A5AAEA611D8BCDE" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="7863E0D72B4F877C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="E8AAAF3AF55C7791" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6C3A8E1AE589C9B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F1525BEAC674E716" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="6B83E2155614C3FF" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="9F82E348172EBDA3" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="4C44F1D9D6FAC3A8" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="E602192E4F0FF169" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="E60145948379E65" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="4CE76251434DE9B0" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="3553F1F1089CAB3B" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="3E12F162151AE84B" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="98B91446E0B76C6F" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="BF0F129ECA479EFA" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="7163DEFCC02E3D9A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E51A7640D67CEF1A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="7249C2A5DE0006C1" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="5A56B7185BF0942" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2F4B6E872F2F388B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="642AE980BD712DB5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="7AAD033E3E797D8E" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="26AB5B7F74BC0992" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="EE6E502B02EDE95" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="1FA10229F6865D33" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="4C424F2B245F1142" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="4295B9203060E230" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="AC7438645F95BA69" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="E862FB3E5149A81A" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="555E8281B84FACC4" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="5A99EA7D01AFC344" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="6FBDBF72E68A87C7" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="7838C0B316203B0" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="E274F45F33F62D7C" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="4796DDA9419493F2" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="788B57C57FD32980" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="3059717E19D4C5D8" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="480E8A034B5FAD7C" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CF97534AEE16C506" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="CE4DF792B4C89838" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="51E4441EADA5981B" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="153A120D33607BBF" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="44FB0E8E5E6D3008" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="F763AB7F98C3AE39" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AA80B32ED6490604" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="AEBE9D67918F2871" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="1B7D70229D1936ED" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D6AA1DC1EDB9090" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E8CC4E16E8EBF62" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="528CCB38D9DF3839" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F90D679B0A81AF01" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="E8B7419D632A39FE" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="68C847C68455031A" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="C804EF534AABE57F" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="208CFCDB0BF1C26D" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="2266510BD20B1BD" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C2707957C5641027" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="9C162FB81D450B02" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="F6C7D8E025D3205B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DA7BA04929ED3670" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECB2CF1E116CE8B9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="574E2147C0A701B4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="1FF530B0E4CD6D8E" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="FEAF7EA47BEE86B5" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="B88A18970B7EB239" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="9DC8451CF90593E5" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="E7D5EFE753FF9DF4" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="166F1EDF5FE398D" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="AC65D4B9A6C64849" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="FD9390DAFBC75D8F" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A65A40AD8DB33E" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="6DE18AD7957C7F64" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="765727D77E326FFC" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="7302EFEA12092EAE" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="3261BEE51AAD9F8B" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="5904AE8096A88A3F" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1E68902DA6C3DD27" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="EC34063DCA8AFB2F" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="7437549E602B5CE7" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="40B53E7D2AFE6922" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="23BD99E90ABBB179" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="ABF91B3E559FA619" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="B774F2C6B3761684" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="A29172D12DDCB51D" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="3275FD80861C863B" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="8699000D6BE4FE26" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A72AD5841A977775" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2B21598B63AB7A2E" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="5B892A13AF2D5E44" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="69A42BE19F6DC608" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C1F4473EF7F91BBA" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="C737C35D577A92EE" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="DB4726BDC25795DD" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5351B8B284D1D16" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="351858CC3D6B130E" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="CC90520CE3C1AA0F" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="CDB1AC69C107BE2F" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="2E0089536CC08A06" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="24B462C33AE47857" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="67788F598EAB5107" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="8F9939C17FDBB056" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="44B8689066CCB9A9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="44E9953AFF109D0C" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="12198FE24200F8ED" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="555BD01F0CC26B3B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="1B87650A1E4579AB" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D295CDDA885A2E37" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F5CDC13C06BD76A4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="488CC57224A6DF03" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6EEF04E1E783FE2F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="34C7DA13CD9314A8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A64B8B6B4823445A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="C71F2BCA1A0637FD" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="95ED854FA55DE62" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F49FAB17B9ED294D" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C557C650B6770D54" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F6E2C14D4E7F11FC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="994058156416A94B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C9A4BF8FA785193" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5BE6470109915076" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="8FAC12A5B5424F7A" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="65071E405E4C992A" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="98065D764606239A" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="84127EAF6EFF99D2" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="4316E106D8886E4C" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38D0BEDDACC4F5D7" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9B3F502BC1880C9A" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="85E2FD8BD8303A1A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="82AD2FF7F0EA3405" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C48597CA0DF1F8B8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5CF2A8CE9F7D106A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="DE5FD2853C279A12" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4A45D8E53754EA18" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="53A67C58653FA279" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="40D0959530FB519C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6187D260B4C3504F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="373068DD80A9ED8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="ABE635EA7EDA1255" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="AFB909E3AA8F0982" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="37929C550DB93F31" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2EE8EB79A7E9511B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F9262FC1A1484FC9" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="204B1AA43A3F259" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1BEE6F688782C13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7BAEC693D2835729" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BF1F47D8F67A7C0D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="2966F281C901307" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="E9E6FAE76EBA8D7D" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D39D7B3069C03B55" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="273FCEF003DD2F1A" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7D444FEE24A19CF1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F3618F7CE2D4ABAB" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E97D994761BCD9D5" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="364E342F6823CBF0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="E1929C74CB80A729" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A66394480DE1944" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AA5BCBFA2E3A3FC3" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8D0DCAF0C70AC737" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D01B379D3D9B1EF4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="375F447BB1937561" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8176DAD57112687C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="4895FE33A84CEC35" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7A2DE821458C2E6A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3C1A76818EC4384A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="29BA4A2C37BDC899" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ECC03D2BAFAF57B8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FA0EB5D60F72B1E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B6F5FDE4B76610EE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C33F83568A57175D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="AFA2E330F5693240" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="54EE7F81D316CA48" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="45998AC42C35EE9A" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="A4BA82259D1C0655" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="8D43D9C842A6411C" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </TunableTuple>

        <Deleted name="category" muid="6BE0362AC331D0A2" />

        <Deleted name="compatible_venues" muid="95A725973FE6F8D2" />

        <Deleted name="creation_ui_option" muid="B780A033EF621529" />

        <Deleted name="end_situation_dialog" muid="8F7C70E8271E11D1" />

        <Deleted name="entitlement" muid="13B7DA4108E09FFD" />

        <TunableList name="finish_job_states" class="TunableMapping" display="Finish Job States" muid="65A53718BDE676FA" mapping_key="key" mapping_value="value" description="Tune pairs of job finish role states with job finish tests. When&#xA;those tests pass, the sim will transition to the paired role state.&#xA;The situation will also be transitioned to the Leaving situation&#xA;state." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="DF7E53B1C633B08F" Deprecated="False" filter="0" group="General">
                <TunableEnum type="ServiceNpcEndWorkReason" name="key" class="TunableEnumEntry" default="NO_WORK_TO_DO" display="Key" muid="7CFB5E4C9A4BAE99" static_entries="situations-service_npcs.ServiceNpcEndWorkReason" Deprecated="False" filter="0" group="General" />
                <TunableTuple name="value" class="TunableFinishJobStateAndTest" display="Value" muid="2F957482B626B63B" description="A job state paired when a test for when the situation should transition to that job state" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="enter_state_test" class="TunableParticipantRanInteractionTest" display="Enter State Test" muid="B226B65511B91B23" description="Test for what interaction to listen for. If&#xA;the Ran interaction test passes, the service sim in&#xA;situation will transition to the tuned role state." Deprecated="False" filter="0" group="General">
                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="ACE5B7E0C699876B" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="snippet" class="TunableReference" muid="CC11340FC33B21CE" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                        </TunableList>
                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="D7C7C4FB1F2BB23C" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="interaction" class="TunableReference" muid="399EC21AD83C2A00" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="8E14B2994BEEE6C1" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="E0A5D6276109FEED" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="DB1E0F5EAC289E08" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2F66B2C96D4A500" />
                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="F7CD4E4CF546E8EB" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F86615AEB01117A1" static_entries="interactions.ParticipantType" description="This is the role the sim in question should be to pass." Deprecated="False" filter="0" group="General" />
                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="1726E03CEFEA4B82" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4AD0173B17AB0C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                        </TunableList>
                        <TunableList name="tags" class="TunableSet" display="Tags" muid="F9F5D744698995CF" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="77534A7E9E471BFA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="D405CB50D8F25BE9" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="DBC26DF16B9BC182" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D0D7DD537FCC82" />
                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="778747D2C831DEC4" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="C1413380454E0388" Deprecated="False" filter="0" group="General">
                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="9161C318BBE2DE70" />
                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="C06A0C5330BB21C5" Deprecated="False" filter="0" group="General">
                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1B33B339C6EEF8EF" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="40EBC19D9B56FEA6" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="E337802B0CCA36CD" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2A38940A622031B5" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="700082F40F7EEF52" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="55BC2C43FC31E088" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="2BD7B4DD2D908C90" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="object_state" class="TunableReference" muid="FE515E7167766993" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="581D22C86775348F" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="274C6C0A8DC195C" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A56DF10A1C29E608" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="841D511D0F6990CD" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EC2385CE8161D81F" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="13C5144139C4AB0B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1D82B644DD5F9028" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="EFBCE34CFE34E8DB" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableVariant type="None" name="notification" class="OptionalTunable" default="disabled" display="Notification" muid="8300F8120D280F7C" description="Localized strings to display as notifications when this service&#xA;NPC finishes his/her work for the day for the matching finish&#xA;job reason. Parameter 0 is the funds deducted from the&#xA;household and parameter 1 is the amount added to bills, so you&#xA;can use {0.Money}, {0.Number}, {1.Money}, or {1.Number}." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5EBB4E43171B25AA" />
                        <TunableVariant type="None" name="enabled" class="TunableNotificationSnippet" default="literal" display="Enabled" muid="309CE310AE5A3E43" description="This may be tuned in place here using 'literal' or as a reference to a Notification tuning snippet." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="literal" class="TunableUiDialogNotification" display="Literal" muid="3BB5C712FB0ADBA8" description="A dialog that is displayed as a notification." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="additional_texts" class="OptionalTunable" default="disabled" display="Additional Texts" muid="A74544686CF4BA16" description="If enabled, add additional text to the dialog" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9593BCEF8A087590" />
                                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="EB67A55FE9EB50A7" Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="57C135F678A65E95" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                                <Tunable type="bool" name="anonymous_target_sim" class="Tunable" default="False" display="Anonymous Target Sim" muid="6637257BB848AF39" description="If this dialog is using a target sim id to give a conversation type view and this is checked, then the&#xA;target sim icon will instead be replaced by an anonymous caller." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="audio_sting" class="OptionalTunable" default="disabled" display="Audio Sting" muid="8C7C2A69B153A9AD" description="If enabled, play an audio sting when the dialog is shown." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="58BE65EAE9B2B42" />
                                    <TunableTuple name="enabled" class="TunablePlayAudio" display="Enabled" muid="70B290946CF9322B" Deprecated="False" filter="0" group="General">
                                        <Tunable type="ResourceKey" name="audio" class="TunableResourceKey" default="None" display="Audio" muid="A103E381C51A16A2" description="The sound to play." Deprecated="False" filter="0" group="General" resource_types="0x39b2aa4a" />
                                        <Tunable type="bool" name="immediate_audio" class="Tunable" default="False" display="Immediate Audio" muid="1A6C7BCBD86573F5" description="If checked, this audio will be triggered immediately, nothing&#xA;will block.&#xA;&#xA;ex. Earbuds audio will be played immediately while &#xA;the Sim is routing or animating." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="joint_name_hash" class="OptionalTunable" default="disabled" display="Joint Name Hash" muid="85F993678B65AC28" description="Specify if the audio is attached to a slot and, if so, which&#xA;slot. Otherwise the audio will be attached to the object's &#xA;origin." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5EC7FD166E1C754A" />
                                            <Tunable type="str" name="enabled" class="TunableStringHash32" default="None" display="Enabled" muid="D0E47677C924953F" description="The name of the slot this audio is attached to." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="play_on_active_sim_only" class="Tunable" default="False" display="Play On Active Sim Only" muid="592A032731B767F7" description="If enabled, and audio target is Sim, the audio will only be &#xA;played on selected Sim. Otherwise it will be played regardless &#xA;Sim is selected or not.&#xA;&#xA;If audio target is Object, always set this to False. Otherwise&#xA;the audio will never be played.&#xA;&#xA;ex. This will be useful for Earbuds where we want to hear the&#xA;music only when the Sim is selected." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="audio_sting_owner" class="OptionalTunable" default="disabled" display="Audio Sting Owner" muid="786597146B1587AE" description="If enabled, this will set the owner of the audio sting when the&#xA;dialog is shown." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FCF79EB4BBA13A27" />
                                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="F3EBD06E79090208" static_entries="interactions.ParticipantType" description="The participant of the interaction who will play the audio_sting." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="background_audio" class="OptionalTunable" default="disabled" display="Background Audio" muid="F7F9576637BC587E" description="If enabled, play background audio while the dialog is open." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="74092FE6233EABCE" />
                                    <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="8BF7D23C75D9AFC9" description="The background audio event string." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="background_image" class="OptionalTunable" default="disabled" display="Background Image" muid="200F9CE2D3B51D85" description="If enabled, add a background image to the dialog.  This will only &#xA;be used in the case where dialog_bg_style is BG_DYNAMIC_IMAGE." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F868A7F4F7A4B94" />
                                    <Tunable type="ResourceKey" name="enabled" class="TunableResourceKey" default="None" display="Enabled" muid="E8E4A6E3A9D700A" description="The background image for the family portrait." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                </TunableVariant>
                                <TunableEnum type="UiDialogBGStyle" name="dialog_bg_style" class="TunableEnumEntry" default="BG_DEFAULT" display="Dialog Bg Style" muid="C4FF05D3D1350B3A" static_entries="ui-ui_dialog.UiDialogBGStyle" description="The style background to apply to this dialog." Deprecated="False" filter="0" group="General" />
                                <TunableList name="dialog_options" class="TunableEnumFlags" default="DISABLE_CLOSE_BUTTON" display="Dialog Options" muid="A0505F4ACAEDF734" description="Options to apply to the dialog." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="UiDialogOption" class="TunableEnumEntry" default="DISABLE_CLOSE_BUTTON" muid="9294A3665FDD0580" static_entries="ui-ui_dialog.UiDialogOption" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableEnum type="UiDialogStyle" name="dialog_style" class="TunableEnumEntry" default="DEFAULT" display="Dialog Style" muid="5F7519ADF5AF9A2C" static_entries="ui-ui_dialog.UiDialogStyle" description="The style layout to apply to this dialog." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="UiDialogNotificationExpandBehavior" name="expand_behavior" class="TunableEnumEntry" default="USER_SETTING" display="Expand Behavior" muid="6BCA28A937A0CD49" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationExpandBehavior" description="Specify the notification's expand behavior." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="icon" class="OptionalTunable" default="disabled" display="Icon" muid="22F6C546E4F9817F" description="If enabled, specify an icon to be displayed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F8CA3D280A39358" />
                                    <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="EE3663EFE861A6FB" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="30303E724591893B" Deprecated="False" filter="0" group="General">
                                            <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="41AC7D5B49C1CB0A" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="F551EC93F9CC2468" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="481585B126E095D2" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="145154DFE5794545" Deprecated="False" filter="0" group="General">
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="66BA35C84F921682" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="10AD98A504A96A82" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="6509F9916AC1675E" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="6B8B6861E81953FF" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="50D3F7A61111A88B" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="EB1B2D8DA076DCC0" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="3744DD3140A48D18" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                            <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="C078CCE6118A0CD5" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                        </TunableTuple>
                                        <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="50EC866BBB733C99" Deprecated="False" filter="0" group="General">
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="BD470F507C319942" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="85E9EE3DBAB194A3" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="icon_override_participant" class="OptionalTunable" default="disabled" display="Icon Override Participant" muid="286D41A6EFCA521B" description="If enabled, allows a different participant to be considered the&#xA;owner of this dialog. Typically, this will only affect the Sim&#xA;portrait used at the top of the dialog, but there could be other&#xA;adverse affects so be sure to talk to your UI partner before tuning&#xA;this." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D95CA5EE2D58EAE" />
                                    <TunableEnum type="ParticipantTypeSingleSim" name="enabled" class="TunableEnumEntry" default="Invalid" display="Enabled" muid="FF15924405A4DFE2" static_entries="interactions.ParticipantTypeSingleSim" description="The participant to be used as the owner of this dialog. If this&#xA;participant doesn't exist, the default owner will be used&#xA;instead." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="UiDialogNotificationLevel" name="information_level" class="TunableEnumEntry" default="SIM" display="Information Level" muid="4F12FD339DBCEF02" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationLevel" description="Specify the notification's information level." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="6158E1231898D9E4" description="This field is deprecated. Please use 'icon' instead." Deprecated="True" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7356607E516EB777" />
                                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="D1F179E697F315E8" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="PhoneRingType" name="phone_ring_type" class="TunableEnumEntry" default="NO_RING" display="Phone Ring Type" muid="7E1999A014CE9535" static_entries="ui-ui_dialog.PhoneRingType" description="The phone ring type of this dialog.  If tuned to anything other&#xA;than None this dialog will only appear after clicking on the phone." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="primary_icon_response" class="OptionalTunable" default="disabled" display="Primary Icon Response" muid="D34D55AAFE5A8A26" description="If enabled, associate a response to clicking the primary icon." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD26D651FE34BC64" />
                                    <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="173A417A3AD1F" description="The response associated to the primary icon." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="6C035D6AB9DEA2E6" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8D11FD24BBE44259" />
                                            <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="DE01D0376F70A142" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="463E4034BA3BE8BD" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="138988357722B40F" />
                                            <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="25D3877190628B03" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="3BD6898C3056B18C" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="arguments" class="TunableList" display="Arguments" muid="85CBB4AA71567C34" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" class="TunableVariant" default="none" muid="2AD4582EFD541F96" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="34E0C8524C7175FA" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="2BAAED2C954DC3F7" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="90813FF7B1D249CA" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="F8956D00F422B93E" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="C5FAD7D58B12E523" description="An integer number." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="FB3C57D26219F69E" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <Tunable name="none" class="TunableExistance" display="None" muid="3EEB9A4D3CCF2696" />
                                                            <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="4C34BF69C79FA87B" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="8426492D9EB52DAC" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="645C2AA0079219E8" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="string" class="TunableTuple" display="String" muid="C7C06D971A6E9B49" description="A string." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="D8F4FCE11EC5AFF3" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableList>
                                                    <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="64C987FA84370D5D" description="The command." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="3053FC5F231E7C42" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="B47AF6008E2CAA96" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="secondary_icon" class="OptionalTunable" default="disabled" display="Secondary Icon" muid="6E625D41790DDB97" description="If enabled, specify a secondary icon to be displayed. Only certain&#xA;dialog types may support this field." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF79AE4902E7D4A8" />
                                    <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="9D602C13F99DC8B2" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="A1DADD788B843510" Deprecated="False" filter="0" group="General">
                                            <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="85740A99FA800C65" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="5AB9D778730F8915" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="FBF9FD9DC9D9BEA0" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="D7AD262510F7B98F" Deprecated="False" filter="0" group="General">
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="DFE54CEDB456AC7B" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="F9F345D31875413B" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="A200562D7011AB6C" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="4964166F4F1BE024" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="43A0D9EFC9146A2A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="6C160AC93603D794" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="19FF1409A3FC9842" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                            <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="4EA029F9BCC14DCC" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                                        </TunableTuple>
                                        <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="539251763E8AEF43" Deprecated="False" filter="0" group="General">
                                            <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="E12F92ECFEFAB231" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="C34A6EB67655FB8A" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="secondary_icon_response" class="OptionalTunable" default="disabled" display="Secondary Icon Response" muid="649A47A6652E0A9" description="If enabled, associate a response to clicking the secondary icon." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A1DBC924544A45CE" />
                                    <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="78373CBF71BF381C" description="The response associated to the secondary icon." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="8EF26525E4EAACEA" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="50324FAF6456EF1" />
                                            <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="F47B020AEEC2624B" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="940620D56674CEE0" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F1F5D701B21468A0" />
                                            <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="8EAA7A4AAED4EA9F" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="9DD8ED2D25B3540A" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="arguments" class="TunableList" display="Arguments" muid="4E3A538EBA4B2AAB" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" class="TunableVariant" default="none" muid="56E854AD08FAEE55" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="DB352B0E08DFD18E" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="731BFCFD2565E2A6" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="F4E734D10E3D2DE9" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="E5E615E0ABEC2F05" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="B8FF4760A4B2854D" description="An integer number." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="FDAEE8DD426873E8" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <Tunable name="none" class="TunableExistance" display="None" muid="C7668E11502182D0" />
                                                            <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="9D47540D373E4FBB" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7F6F909876E5F96C" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="670ED698E2C577F0" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="string" class="TunableTuple" display="String" muid="699A435EB86F27DB" description="A string." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="543AC236A9EF5789" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableList>
                                                    <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="74C2D5D25BB9AC02" description="The command." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="BDC7C9EC8A9BDB76" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="E79A956901E8154A" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="text" class="TunableLocalizedStringFactoryVariant" default="single" display="Text" muid="A268769BA9E790F0" description="The dialog's text." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="concatenation" class="TunableLocalizedStringFactoryConcatenation" display="Concatenation" muid="3500387397D3BBD0" description="A list of localized string concatenations. These strings will be joined together into single line-separated string" Deprecated="False" filter="0" group="General">
                                        <TunableList name="concatenations" class="TunableList" display="Concatenations" muid="8C1F9910C442E1B7" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableLocalizedStringSnippet" default="literal" muid="945DDE7A49F47DFF" description="This may be tuned in place here using 'literal' or as a reference to a LocalizedString tuning snippet." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="literal" class="TunableLocalizedString" default="0x0" display="Literal" muid="214423FB51FD17D9" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="2DA9A59FF52A3C64" description="A reference to a LocalizedString tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LocalizedString" />
                                            </TunableVariant>
                                        </TunableList>
                                    </TunableTuple>
                                    <Tunable type="int" name="single" class="TunableLocalizedString" default="0x0" display="Single" muid="E654DA15EA17406B" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="variation" class="TunableLocalizedStringFactoryVariation" display="Variation" muid="B11E5F0D8431FD0F" description="A list of possible localized string variations." Deprecated="False" filter="0" group="General">
                                        <TunableList name="variations" class="TunableList" display="Variations" muid="EE294F3B4A8C8444" Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="6858997AF7795C6F" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="text_tokens" class="OptionalTunable" default="disabled" display="Text Tokens" muid="82C306B01B651001" description="If enabled, define text tokens to be used to localized text." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39869CD433D960B5" />
                                    <TunableTuple name="enabled" class="TunableLocalizationTokens" display="Enabled" muid="B6B2A166425E3AFF" description="Define the text tokens that are available to all text fields in&#xA;the dialog, such as title, text, responses, default and initial&#xA;text values, tooltips, etc." Deprecated="False" filter="0" group="General">
                                        <TunableList name="tokens" class="TunableList" display="Tokens" muid="64570126D4E47EBA" description="A list of tokens that will be returned by this factory. Any string&#xA;that uses this token will have token '0' be set to the first&#xA;element, '1' to the second element, and so on. Do not let the list&#xA;inheritance values confuse you; regardless of what the list element&#xA;index is, the first element will always be 0, the second element 1,&#xA;and so on." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="participant_type" muid="405FEF30E96C8AD0" description="Define what the token at the specified index is." Deprecated="False" filter="0" group="General">
                                                <Tunable name="active_holiday" class="TunableExistance" display="Active Holiday" muid="E87C4AC22E43EE62" />
                                                <TunableTuple name="animal_home" class="TunableTuple" display="Animal Home" muid="48793A4BD3C13150" description="Tokens for the animal home." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="animal_home_data" class="TunableVariant" default="max_capacity" display="Animal Home Data" muid="7A6AC601E6DA5BC7" description="Data you'd like to fetch about the animal home." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="current_occupancy" class="TunableExistance" display="Current Occupancy" muid="D330BBC265979BE9" />
                                                        <Tunable name="max_capacity" class="TunableExistance" display="Max Capacity" muid="5F35358B53F28E1A" />
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.Object" display="Participant" muid="88E239A48550DF17" static_entries="interactions.ParticipantTypeSingle" description="The participant from whom we will fetch specified data.&#xA;This is expected to resolve to an Animal Home." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="associated_club" class="TunableTuple" display="Associated Club" muid="4846436DC4873442" description="The token is a stored &quot;associated_club&quot; on this&#xA;interaction. Only works with ClubMixerInteractions or&#xA;ClubSuperInteractions." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="buck_amount" class="TunableTuple" display="Buck Amount" muid="7200399379F8FC8D" description="The token is a number repesenting the amount of the &#xA;specified buck type the specified participant has." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="3EE5D8EA79C6A3C3" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="1116D036205C3DE9" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_data" class="TunableTuple" display="Career Data" muid="E91F1928FD6862BA" description="The token is a localized string, number, or Sim,&#xA;representing the specified career data for the specified&#xA;participant." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_data" class="TunableVariant" default="current_level_name" display="Career Data" muid="8C9844B7D513E335" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="current_level_name" class="TunableExistance" display="Current Level Name" muid="5230D193558983DB" />
                                                        <Tunable name="current_level_salary" class="TunableExistance" display="Current Level Salary" muid="F3F7FEDA3B983D0E" />
                                                        <Tunable name="next_level_name" class="TunableExistance" display="Next Level Name" muid="FCBC0D591C4BD9ED" />
                                                        <Tunable name="next_level_salary" class="TunableExistance" display="Next Level Salary" muid="7AC346E8BCE3B9CB" />
                                                        <Tunable name="previous_level_name" class="TunableExistance" display="Previous Level Name" muid="891F2B3F28A47DCC" />
                                                        <Tunable name="previous_level_salary" class="TunableExistance" display="Previous Level Salary" muid="A3BB8CA1A7D7B66A" />
                                                    </TunableVariant>
                                                    <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="9C005DC604758D6C" description="The career we care about." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="1658489885BF20B0" static_entries="interactions.ParticipantType" description="The participant's whose career data we care about." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="civic_policy" class="TunableTuple" display="Civic Policy" muid="BA4E9579D38FC86A" description="Tokens for the Civic Policy system." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="civic_policy_data" class="TunableVariant" default="voting_start_time" display="Civic Policy Data" muid="EF0A0D98BE3BBCB3" description="The specific value to display." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="voting_end_time" class="TunableExistance" display="Voting End Time" muid="C53171CD3B0D5E42" />
                                                        <Tunable name="voting_start_time" class="TunableExistance" display="Voting Start Time" muid="6E2442EB7A71F07C" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <Tunable name="current_trends" class="TunableExistance" display="Current Trends" muid="4B3A6698F46C0126" />
                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="74162598E258943F" description="A catalog definition to use as a token. This is useful if&#xA;you want to properly localize an object's name or&#xA;description." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="50785FD6542C2618" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="game_component_data" class="TunableTuple" display="Game Component Data" muid="12D769FBD28F187B" description="The token is a localized number or Sim representing &#xA;the specified game component data from game component." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="game_component_data" class="TunableVariant" default="high_score" display="Game Component Data" muid="208434BAB16E2438" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="high_score" class="TunableExistance" display="High Score" muid="1AD2F12F852E24F2" />
                                                        <Tunable name="high_score_sim" class="TunableExistance" display="High Score Sim" muid="C5F20C8EC6AC679" />
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="49BE1027C339118F" static_entries="interactions.ParticipantType" description="The participant's from whom the game component data &#xA;we want to fetch." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="gig_history" class="TunableTuple" display="Gig History" muid="B184824F275865EF" description="The token used to display data from gig history." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="customer_participant" class="OptionalTunable" default="disabled" display="Customer Participant" muid="DF506298654C6B84" description="If enabled, this is the participant representing the customer in gig history.&#xA;If disabled, falls back to searching for any valid gig in history." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="14225A1995CAEEA1" />
                                                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="B9EABDC261092125" static_entries="interactions.ParticipantType" description="TargetSim searches for provided customer sim. Lot will search for the current lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="gig_history_data" class="TunableVariant" default="gig_customer_name" display="Gig History Data" muid="780A3F2CF7273280" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="gig_customer_name" class="TunableExistance" display="Gig Customer Name" muid="30E785AB306CE8A3" />
                                                        <Tunable name="gig_project_title" class="TunableExistance" display="Gig Project Title" muid="C5634712498BF268" />
                                                    </TunableVariant>
                                                    <TunableEnum type="GigResult" name="max_gig_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Gig Result" muid="96C65E5E68E705E5" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="GigResult" name="min_gig_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Gig Result" muid="9385798A4B97E630" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D88EA0E427B1A46B" static_entries="interactions.ParticipantType" description="The participant whose gig history we will search." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="global_policy" class="TunableTuple" display="Global Policy" muid="AC60A0A4A648BFFC" description="The token used to display data from the tuned global policy." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="snippet" name="global_policy" class="TunableReference" display="Global Policy" muid="B434EF5E1ECF54D8" description="The global policy from which data is displayed." allow_none="False" Deprecated="False" filter="0" group="General" restrict="GlobalPolicy" />
                                                    <TunableEnum type="GlobalPolicyTokenType" name="token_property" class="TunableEnumEntry" default="NAME" display="Token Property" muid="C286884D9878F912" static_entries="global_policies-global_policy_enums.GlobalPolicyTokenType" description="Which property from the Global Policy Token to use. NAME&#xA;will use the policy's display name, PROGRESS will use&#xA;the progress made over the max progress value. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="interaction_cost" class="TunableExistance" display="Interaction Cost" muid="1663C034E7B9CC49" />
                                                <Tunable name="interaction_payout" class="TunableExistance" display="Interaction Payout" muid="5F080059C2C3CA96" />
                                                <TunableTuple name="lifestyle_brand" class="TunableTuple" display="Lifestyle Brand" muid="CEC32DDC2B475F20" description="The token used to display the name of a Lifestyle Brand &#xA;owned by a Sim." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.TargetSim" display="Participant" muid="45F0E5B6AAFC7C11" static_entries="interactions.ParticipantTypeSingle" description="The participant who owns the lifestyle brand." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="money_amount" class="TunableTuple" display="Money Amount" muid="AA6E9557CC5C18A1" description="The token is a number representing the amount of Simoleons&#xA;that were awarded in loot to the specified participant." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="B8AACF5D02979F9A" static_entries="interactions.ParticipantType" description="The participant for whom we fetch the earned amount of&#xA;money." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_fashion_marketplace" class="TunableTuple" display="Object Fashion Marketplace" muid="F421683129692D29" description="Tokens for the object fashion marketplace component and &#xA;fashion marketplace system." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_fashion_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Fashion Marketplace Data" muid="D454BAAE3FB5AA71" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="CD941816E03AAA79" />
                                                        <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="F519E04227ED53A3" />
                                                        <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="8B73C141E3D2D303" />
                                                        <Tunable name="suggested_sale_price" class="TunableExistance" display="Suggested Sale Price" muid="FE686528A3BC69A1" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="object_marketplace" class="TunableTuple" display="Object Marketplace" muid="C9D45CE275ECFCEC" description="Tokens for the object marketplace component and marketplace&#xA;system." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Marketplace Data" muid="29BCECB073BC2C84" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="A064B47E65A05DD1" />
                                                        <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="A976CD0F20B81D1F" />
                                                        <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="A0F040CDB85A204" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="object_property" class="TunableTuple" display="Object Property" muid="88913E3FB6858A2" description="The token is a property of a game object.  This could be &#xA;catalog properties like its price or its rarity which is a &#xA;property given by a component." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="GameObjectProperty" name="obj_property" class="TunableEnumEntry" default="CATALOG_PRICE" display="Obj Property" muid="A0A7A8251CC1C590" static_entries="objects-game_object_properties.GameObjectProperty" description="The property of the object that we will request." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_state_value" class="TunableTuple" display="Object State Value" muid="B4C83134FAD48A83" description="The token is a string representing the value of a specific&#xA;state from the selected participant." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F06542569926168E" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;state's value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="6BF0AFDD6BAAEB7F" description="The state's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectState" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_count" class="TunableTuple" display="Participant Count" muid="C7AC0AC77E16994C" description="The number of participants of the specified type." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="87A16DAF45F57A00" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="FACF4B14A18C854A" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="34F9E4587D1B5CBA" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="57FFD32A5524BE00" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="4C8329C2673E3FFA" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="26179A93CB261EAC" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E1120D9E6969E19" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="EFCB72E9EDE2639A" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="CA0B76590174E4F5" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="FF893FC516493535" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="39117E0D0B7A6F1E" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="B47695CE69B3D0A4" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="slot_type" class="TunableReference" muid="623C5C1B2E4D3478" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="2237D7EF15628367" />
                                                            </TunableVariant>
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="ObjectChildren" display="Participant" muid="812C60CC32219348" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="27F9791BFE383404" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D86B8C7045240179" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="C4CAE2951A513D86" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="participant_type" class="TunableTuple" display="Participant Type" muid="A09282F97413463D" description="The token is a Sim or object participant from the&#xA;interaction." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="formatter" class="TunableObjectLocalizationTokenFormatterVariant" default="single" display="Formatter" muid="B302F08FC05C3B" description="Define the format for this token." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="bullet_list" class="Tunable_TunableObjectLocalizationTokenFormatterBulletList" display="Bullet List" muid="5FE809F65B87E129" description="The token is a string, which is a formatted bullet point list. Objects&#xA;are grouped by definition. The text for each item must be specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="bullet_text" class="TunableLocalizedString" default="0x0" display="Bullet Text" muid="CDF9BA52EDB5FDB2" description="The text for the bullet entry. The string is provided the&#xA;following tokens, in this order:&#xA; 0 An object representitive of the group&#xA; 1 The number of objects in the group" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single" class="Tunable_TunableObjectLocalizationTokenFormatterSingle" display="Single" muid="FBC9C9E1435DA06E" description="The token is a single object name. If multiple participants are&#xA;returned, an arbitrary one is used. That is, unless the mismatch key is&#xA;specified. In that case, the string is used unless all of the&#xA;participants' definitions match." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="mismatch_name" class="OptionalTunable" default="disabled" display="Mismatch Name" muid="FC6CC3C9714FB294" description="If enabled, this is the object name to use when using a multi-&#xA;object participant yielding definitions with different names." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BF026F23E834591F" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F342522DEFB0D543" description="A localized string that may NOT require tokens." allow_catalog_name="True" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="990DCA8498F9B4FE" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="28167D3C0E8F1595" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="6BB88BAF905D7A27" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="7D94D097E80B2291" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="DD1D3291C58948B7" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="940C8CBDFE7690F9" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="FD6E8F3421ECB563" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="800A6796DC464EB6" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="C982C5556C41825D" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="1DF2AFD9C2D2BB93" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="C4960E61D30EAE25" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="32B4D04CD4E25ED4" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="slot_type" class="TunableReference" muid="610DB4D0FBB8F7AB" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="FDC910DADFB915B2" />
                                                            </TunableVariant>
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6E4213CD495145F" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="E535A6AD052061ED" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D180A4A9CAA14C47" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="2868709930771827" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="picked_part" class="TunableTuple" display="Picked Part" muid="D708A05A7F6AEF12" description="The token used to display the name of a picked part." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="scholarship_letter_component_data" class="TunableTuple" display="Scholarship Letter Component Data" muid="1595AD4D2EF036A3" description="The token can be used to get strings representing scholarship&#xA;information from the scholarship letter component of an object." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F61FBE53F6A2E0EA" static_entries="interactions.ParticipantTypeObject" description="The participant from whom to get the scholarship letter&#xA;component data." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="scholarship_letter_component_data" class="TunableVariant" default="applicant_name" display="Scholarship Letter Component Data" muid="B742030E855BA9DC" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="applicant_name" class="TunableExistance" display="Applicant Name" muid="9DE654D2936B1D8C" />
                                                        <Tunable name="scholarship_amount" class="TunableExistance" display="Scholarship Amount" muid="FCA17DB7D32F2F57" />
                                                        <Tunable name="scholarship_description" class="TunableExistance" display="Scholarship Description" muid="3EC40A1AF13337DF" />
                                                        <Tunable name="scholarship_name" class="TunableExistance" display="Scholarship Name" muid="BA5F96552757994B" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="sickness" class="TunableTuple" display="Sickness" muid="1FA8C0949E930445" description="The token is the name of the sickness on the specified Sim." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="715070590D2F15AE" static_entries="interactions.ParticipantType" description="The participant who is sick." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="statistic_value" class="TunableTuple" display="Statistic Value" muid="82842FA45BD48B7F" description="The token is a number representing the value of a specific&#xA;statistic from the selected participant." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="clamp_value_to_floor" class="Tunable" default="False" display="Clamp Value To Floor" muid="11737A0C0359D42A" description="If True, the value will be clamped to its floor." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6838745A75FE6110" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="51B905CA295301EA" description="The statistic's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="street" class="TunableTuple" display="Street" muid="5B1B5BA090603A2D" description="                    " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="street" class="TunableTunableLocalizationStreetSelector" display="Street" muid="AE2A80E1FFB8298C" description="Using the Street Selector tuning, provide a token localization appropriate&#xA;street selection." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="67D695F4F51B4381" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="6CDA070A8CAB76C4" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="5313CB39718B21DE" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="E3A6614B79BD5F95" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="518EA0D654F9ED79" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="5970127444ED9CC7" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6963DA040C76E284" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="5044D7BBEC7FD9FB" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="E1E29CFD09C28250" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="street_data" class="TunableVariant" default="policy_up_for_repeal" display="Street Data" muid="75AB1C041B9EE54A" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="policy_up_for_repeal" class="TunableExistance" display="Policy Up For Repeal" muid="8EF810EF27669A8" />
                                                        <Tunable name="random_losing_balloted_policy" class="TunableExistance" display="Random Losing Balloted Policy" muid="F57353B32D60E3FB" />
                                                        <Tunable name="winning_balloted_policy" class="TunableExistance" display="Winning Balloted Policy" muid="A0397435FC2507AF" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="venue" class="TunableTuple" display="Venue" muid="7339D527FA869835" description="                    " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="venue_data" class="TunableVariant" default="active_venue" display="Venue Data" muid="1B97AB4CCF813F4A" description="                        " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="active_venue" class="TunableExistance" display="Active Venue" muid="6DD2254FEC18E655" />
                                                        <Tunable name="source_venue" class="TunableExistance" display="Source Venue" muid="F1C1131342BC2664" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="timeout_duration" class="OptionalTunable" default="disabled" display="Timeout Duration" muid="39409E66ABE618DE" description="If enabled, override the timeout duration for this dialog in game&#xA;time." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1AB4DA1C5823882B" />
                                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="5" display="Enabled" muid="B4D52759FD2B91DA" min="5" max="None" description="The time, in sim minutes, that this dialog should time out." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="title" class="OptionalTunable" default="disabled" display="Title" muid="1978E46BDBB16029" description="If enabled, this dialog will include title text." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3992325551D8C7EC" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A1957AF581CA547" description="The dialog's title." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableList name="ui_responses" class="TunableList" display="Ui Responses" muid="A7A49474E2DF180C" description="A list of buttons that are mapped to UI commands." Deprecated="False" filter="0" group="General">
                                    <TunableTuple class="TunableUiDialogResponse" muid="57E297A5FBC9146F" description="A dialog response." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="23AA39EAA39F0BA2" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D037974EAF830C0" />
                                            <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="F798B0719061AB4B" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="BF1F82FD1FD48871" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7117BE43708442F9" />
                                            <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="F9F9549E768664CC" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="83FB9A1F3DFF0EA5" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="arguments" class="TunableList" display="Arguments" muid="331A4F255451DD55" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" class="TunableVariant" default="none" muid="4D3F6E17313339EE" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="F7561057CF4C5BDD" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="F00999E1A1C2757C" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="16273D1883037B8D" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="FD429B4A37EBA238" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="5EAE1F73EE225CE7" description="An integer number." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="9285DB36371ECAE0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <Tunable name="none" class="TunableExistance" display="None" muid="7884F56F38A26EDE" />
                                                            <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="9FBEFB9B3F386BDE" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6B52274774786919" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="1B3BA754F72D911A" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="string" class="TunableTuple" display="String" muid="8655CFF06459029E" description="A string." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="9B2C4BCF21A74ED3" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableList>
                                                    <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="2278F6739B157136" description="The command." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="4065895EB016842E" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <Tunable type="int" name="text" class="TunableLocalizedString" default="0x0" display="Text" muid="E6799588CAFD3827" description="The prompt's text." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="EDB0A6DD1195326F" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableList>
                                <TunableEnum type="UiDialogNotificationUrgency" name="urgency" class="TunableEnumEntry" default="DEFAULT" display="Urgency" muid="C39C56E53768C72C" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationUrgency" description="Specify the notification's urgency." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="UiDialogNotificationVisualType" name="visual_type" class="TunableEnumEntry" default="INFORMATION" display="Visual Type" muid="D72FE9F8863D2D31" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationVisualType" description="Specify the notification's visual treatment." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="9567672DDA46260C" description="A reference to a Notification tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Notification" />
                        </TunableVariant>
                    </TunableVariant>
                    <Tunable type="role_state" name="role_state" class="TunableReference" display="Role State" muid="714721640DDC0370" description="The role state to set on the service sim when&#xA;enter_state_test passes." allow_none="True" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <Deleted name="force_invite_only" muid="229A229647B8B8DD" />

        <Deleted name="goal_button_text" muid="504460D6B44A71DF" />

        <Deleted name="goal_sub_text" muid="A6D243E0E9EED7B6" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="222FC51B8159C9BF" />

        <Deleted name="job_display_ordering" muid="55109113C60CF351" />

        <Deleted name="main_goal" muid="2964A6CC15B2F9B0" />

        <Deleted name="main_goal_audio_sting" muid="5C9726A4A3DE1B64" />

        <Deleted name="max_participants" muid="735432188DF5A5C6" />

        <Deleted name="minor_goal_chains" muid="E70613B62F9CC584" />

        <Deleted name="recommended_job_object_notification" muid="BB41FAEF4C2B875C" />

        <Deleted name="recommended_job_object_text" muid="B69698B88FF47134" />

        <Deleted name="screen_slam_bronze" muid="F2ED9F01BC5BD035" />

        <Deleted name="screen_slam_gold" muid="52D4E3A41D855D37" />

        <Deleted name="screen_slam_no_medal" muid="7DB7EB19263FE4A4" />

        <Deleted name="screen_slam_silver" muid="AD019133C62CE401" />

        <Deleted name="situation_description" muid="A7E7FA5B0B479617" />

        <Deleted name="suppress_scoring_progress_bar" muid="7D16ECCE3531F47" />

        <Deleted name="targeted_situation" muid="DB7ACB9DAE611785" />

        <Deleted name="travel_request_behavior" muid="6B21AFD1577522BD" />

        <Deleted name="venue_invitation_message" muid="C1FD76DC06089A03" />

        <Deleted name="venue_situation_player_job" muid="B210EAF478540A20" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="66F58EF04B750EC5" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="259B190E871978D5" new_muid="DF506298654C6B84" />
        </ActionList>
    </VersionHistory>
</TuningRoot>