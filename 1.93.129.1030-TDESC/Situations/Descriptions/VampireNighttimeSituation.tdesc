<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="VampireNighttimeSituation" module="situations.complex.vampire_nighttime_situation" muid="EC8F595D04941E8F" description="Situation for the vampire nighttime visit." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="AC09F6463F43A590" />

        <Deleted name="_cost" muid="C08EE41B4EAF12D0" />

        <Deleted name="_display_name" muid="60A92D980171D60" />

        <Deleted name="_icon" muid="56C20CF2E66AE72D" />

        <Deleted name="_initiating_sim_tests" muid="6493D96B7CFB18FB" />

        <Deleted name="_level_data" muid="57910BFA28BF9EE0" />

        <Deleted name="_main_goal_visibility_test" muid="FE690FAE7EE43DA7" />

        <Deleted name="_relationship_between_job_members" muid="3EEACE1A51DFCA1C" />

        <Deleted name="_resident_job" muid="4F0F821D6517CEA" />

        <TunableList name="active_powers" class="TunableList" display="Active Powers" muid="5DEB3D661A7BAE6E" description="A list of Perks and buff to add if the perk is unlocked whenever&#xA;the vampire decides to enter the household." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="9182933242064613" description="Tuple of perk and buff powers." Deprecated="False" filter="0" group="General">
                <TunableTuple name="buff_to_add" class="TunableBuffReference" display="Buff To Add" muid="1106151878A95AF6" description="Temporary buff to add for the specified power to the Sim &#xA;while doing the break in." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="buff_reason" class="OptionalTunable" default="disabled" display="Buff Reason" muid="46B6A463519027CD" description="If set, specify a reason why the buff was added." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5423628ED592AFB6" />
                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="DD1217895BC16993" description="The reason the buff was added. This will be displayed in the&#xA;buff tooltip." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="buff" name="buff_type" class="TunableReference" display="Buff Type" muid="FD62ACFD8AE04102" description="Buff that will get added to sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <Tunable type="bucks_perk" name="power" class="TunableReference" display="Power" muid="867E0A8057D8634" allow_none="False" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <Deleted name="audio_sting_on_start" muid="E37106A667DDB09C" />

        <Deleted name="background_audio" muid="68AC5E85C8C90AB5" />

        <TunableList name="can_start_walkby_limiting_tags" class="TunableSet" display="Can Start Walkby Limiting Tags" muid="87446E61EBD88EC9" description="Don't start a situation of this type if another situation is&#xA;already running that has any of these tags in its tags field.&#xA;&#xA;For instance, if you only want one Streaker at a time you would&#xA;create a new tag SITUATION_STREAKER. Then set that in both this&#xA;field and in the tags field of situation_streaker." Deprecated="False" filter="0" group="General" unique_entries="true">
            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="560073DB434FF60B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" />
        </TunableList>

        <Deleted name="category" muid="F97513C228EAB8A4" />

        <Deleted name="compatible_venues" muid="787CC677B3CBAEC5" />

        <Deleted name="creation_ui_option" muid="BBCC7F95E9702566" />

        <Deleted name="end_situation_dialog" muid="88B2C7A284127E33" />

        <Deleted name="entitlement" muid="4835ED6216BDD6F2" />

        <Deleted name="exclusivity" muid="A513FE07959FE702" />

        <Deleted name="force_invite_only" muid="B5076EE306378448" />

        <Deleted name="goal_button_text" muid="27A18F487A19C1FB" />

        <Deleted name="goal_sub_text" muid="50AE1B6D9BD8D33B" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="FBAB77071B2C5F35" />

        <TdescFragTag name="household_sim_tests" class="TunableTestSet" display="Household Sim Tests" muid="C11B4C6DADDD1CA1" description="Tests to verify the Sims on the household can be valid targets&#xA;for the nightime visit." filter="0" group="General" />

        <Deleted name="job_display_ordering" muid="A41A862179E7FA93" />

        <Deleted name="main_goal" muid="A02F618EF4CF15A1" />

        <Deleted name="main_goal_audio_sting" muid="E701AC2D7DCAEE3E" />

        <Deleted name="max_participants" muid="E8DE9ED5727B3025" />

        <Deleted name="minor_goal_chains" muid="2AF92171EF73B018" />

        <TunableEnum type="BucksType" name="power_buck_type" class="TunableEnumEntry" default="INVALID" display="Power Buck Type" muid="4B9DCEEDDE3BE6DA" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="Type of buck type for the vampire powers to be enabled for the &#xA;vampire trying to enter into the visiting household." Deprecated="False" filter="0" group="General" />

        <Deleted name="recommended_job_object_notification" muid="578FA6A3F3B536C8" />

        <Deleted name="recommended_job_object_text" muid="1A78794A6A769036" />

        <Tunable type="int" name="save_lock_tooltip" class="TunableLocalizedString" default="0x0" display="Save Lock Tooltip" muid="56438101A9417733" description="The tooltip/message to show when the player tries to save the game&#xA;while this situation is running. Save is locked when situation starts." Deprecated="False" filter="0" group="UI" />

        <Deleted name="screen_slam_bronze" muid="96E45212A0EC2153" />

        <Deleted name="screen_slam_gold" muid="28F063BE35271823" />

        <Deleted name="screen_slam_no_medal" muid="95DBA3EDAC88935C" />

        <Deleted name="screen_slam_silver" muid="95895160850831DF" />

        <Deleted name="situation_description" muid="FE6AE470D828372A" />

        <TunableEnum type="Tag" name="sleep_category_tag" class="TunableEnumWithFilter" default="INVALID" display="Sleep Category Tag" muid="AF628877D06EFEC5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="These tag values are used for testing interactions." Deprecated="False" dynamic_entries_prefix="Interaction" filter="0" group="General" invalid_entries="INVALID" />

        <Deleted name="suppress_scoring_progress_bar" muid="AAFEE56F2912018A" />

        <Deleted name="targeted_situation" muid="DF2C6AB4170CB92D" />

        <Deleted name="travel_request_behavior" muid="B5CEC0E73DBC7244" />

        <TunableList name="vampire_discovered_buffs" class="TunableList" display="Vampire Discovered Buffs" muid="955F7038252269E4" description="Buff's that will push the vampire to leave the situation since &#xA;it's been discovered by the household owners or by an anti vampire&#xA;object." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableBuffReference" muid="C4B1EFA936B34532" description="Buff to make the vampire enter its discovered state." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="buff_reason" class="OptionalTunable" default="disabled" display="Buff Reason" muid="F145F4A65E9E095C" description="If set, specify a reason why the buff was added." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="71FA9233C1156FED" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C3E73BAD6E258E0E" description="The reason the buff was added. This will be displayed in the&#xA;buff tooltip." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <Tunable type="buff" name="buff_type" class="TunableReference" display="Buff Type" muid="9C387D05DE3CBB8E" description="Buff that will get added to sim." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
            </TunableTuple>
        </TunableList>

        <TunableTuple name="vampire_job" class="TunableTuple" display="Vampire Job" muid="7DB5A36B92CBFD6D" Deprecated="False" filter="0" group="Situation">
            <TunableTuple name="arrival_state" class="Tunable_VampireArrivalState" display="Arrival State" muid="9E6AB9AD7C3ACD03" description="The state for telling a Sim to go and to the active lot from&#xA;the walkby spawn point." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="B7CD27878E632DCE" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="14D1AC20ABED0F23" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                    <TunableList name="affordances" class="TunableList" display="Affordances" muid="1CD731388B323F52" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                        <Tunable type="interaction" class="TunableReference" muid="174ECA7764F9C7BF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="tags" class="TunableSet" display="Tags" muid="D22D1B3110F41902" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="72A77310F9999F14" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="B4456ED57E3894EA" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="C3AEA1AD0FF56E99" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="E24A2C055BF534FC" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="77D803762060F06" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="15D6210FA78B9493" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="525C9ED88DCD7AC5" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="F996CB582D228A2A" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="3E8328A508950D14" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="1414420F5CAF996D" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="425B45EFEF8A4C4" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="43D9721D67D6379D" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="16CA6E7F9E4D5BD3" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="7A8BFDAC62E01C20" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="25990DD024F92F92" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="DD35B1A53C85D07D" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="E4F79EE501E7265D" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="A5E978D0D2117D2A" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="C12212CB0A60CE9E" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="1359D32CD356AAE6" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="EAC48E3840C188F2" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="6034B0D3A8F1B73C" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="8394EEA4FE277DD1" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="FC60D7947C1C3C3F" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="1A0A3DDE5F244D24" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="5CD94E7C8009D1FD" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="FFA31F93843ACF33" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="9627688ABC1CBC93" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="D2F307A31F970709" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CDEAAF509C417368" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7060EB97F3F7E340" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="F345ED99460ACA61" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="DB0DCD3B77F88728" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="6F785389AB96BDF" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="EAC6E67EFE2D418E" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="C13BF7D08D37375D" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="196D3D48C892D602" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="938605F978A330A7" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="905C069F381CCB58" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="9EE84EA9380ACCB0" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="91E0332BD36CA79A" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="15A26E7CDBDFF4A8" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="B9CFF8B87A8B809B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="909775D10230D27C" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="28706CC81C7C59D4" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="E60A96A2181F3CBB" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CB7143B06D2468EB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="55102EFD98A57C8A" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1527BD286213D6CC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4D7987A8A81886A5" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="3A8DD7C4E2A1396A" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A01E32BD706047B6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BA622F4C3CC58AC5" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9E5BE06EDB64CBDC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1059453DDE9F3171" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="33A424BB014B3D17" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A25807FE1F87870" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="215127BBC02DC8FE" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CFE76E20E1A99F90" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E6E51F0B1590355B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3CB62536E46B8A4B" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="48CE05FC7580213D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CC496BDFAF8291F0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="18ABDFF1FF290FAE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2251A8D017D1F063" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="8D95CB83B45B42F3" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="7FDD61FA1FF1BE0E" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DB4F0D50C4D325AB" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="4F1045030B8CD1AC" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="38497B9AA3F53890" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="79D3604CE5CB69D8" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BE4C1FEDD22D89F2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="76B08C951F371E22" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="ED1ECC1AC23CBCD0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="59F430CF987102C0" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="EF8A5BD0A75E5982" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="15DF09F3362B942B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="97293A4FC23B6F60" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3C69530B92F79EE0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A754345CB6DAD4CC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="7B338C69B5C47158" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2E75FA2C42521D03" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="52DB9FE0867AC880" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="67A5A8C1255C2773" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF0037CC4FE76F7D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F1BB25B7D4692E23" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E5396ABBA97ED44E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="F7A88372811F610E" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="34242B1F4AA4D423" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="37F419935F69E014" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DF4534C70F417C5C" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6B2C8BF1580D69EA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9BCE86AB4C0932A9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="66FEC7329F2E5997" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="75F8C6201B9784AE" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="1378FF6BCCF52482" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="5ABAFC5558E43664" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="61FA24DEFD48E690" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="B367477432D246D0" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="DE05C69875996" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="115D412F547C2A2F" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="CAC27D1FAD188946" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="617F4674F0516FF2" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="C14DB10F9725D5BF" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="248F3C2FD0184C27" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="1E70160A5118C8D1" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="8566DC4FA0293B99" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="828E1A83DAB07F29" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6092CE2B20222F77" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="AD326E874D7BDF66" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F9075D3D602791FA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="956661ABC5B4E00E" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="34B5F33FDC9156B4" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="963BAD1A0006C645" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="1CB277E1DFA89CC5" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4A67944C09ECA887" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="9651BFC6825D3B57" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C69AF8C61F013031" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="78D0BCF98A089514" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="144F17E4A2430781" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="E0E9B0137B5D36EB" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="412E6BA9C98486B6" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="4F11AB681B01D73" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="5D4394F7B7FB9F7C" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="9C5CE2D7DF8D33C1" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="7A568AAC57E8D694" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="C012D21DB8F192F9" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="879FEC65E9240EC2" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="EAC133794965F83E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="96728AA1710F81F0" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="A7874C89709203E0" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="2C4B31843458AB9A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="25EC9A62E83DA354" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="C5BFE8E8901F8B71" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="E87F96BDB7B576E5" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48E3998FB5336BB5" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3A5575703C3974" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="B7A5DD6BA97132A7" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="AB61F68AF8EE3E37" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="A2FBF9B26C83E72F" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="C9BB70DF42703F4E" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="2DFA48297A3F49B6" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="632D0C294AE49547" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F5E2EDA0862BD57" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8162ADD8A53BFB31" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="2B9E4AE93ADF00AC" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="355E2BC3F725F5C8" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="5F1644BC6A3D470F" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="72264D808DFDFC4F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="91DF22AEC62452FB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="391DAD04C4AAD62E" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="C8AA46A124BAEF26" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="9F820263CB14742D" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="2B3CE0710476DE7B" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="394DC404837DB9F7" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="160D9342A3911368" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="E2B17D14236A2C85" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="64463D5089339701" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="72408DF16875CA3D" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="D4BDC1E0E7A67B8D" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="87908320BB00F3C9" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="AFB2046C76FE449" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4C98884257A39332" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E0281C11978C11" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D42EE916ACE35480" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DD5EBA5D79BD05DB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="647E1F8B219096CC" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D18D2C2866B172DB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="9CFD8D79DFEF698C" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="7CF71F9C924C0472" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A704DDA911C89A29" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="2FA83D7D42056A2C" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="12FCAC910B567A4D" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="8E0FC3FC3D27D5DE" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="159A7DC667D1BC0B" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="1342BAC3824855AE" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7DCF388B0AFBDBD6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ED5D91B8D7D0B5F4" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="35E05397F9831213" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="1A38BB5D24F95547" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="CC6CD5E4A09FF5FA" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="CEB976984B536C0" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="4F00FFEC517EE37F" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="B815B50F2A0A64F2" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="B809240C2F0D81F4" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="270CB4DB09AE5A68" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="9F9736CBA2530CBA" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="F6F2DC2465A2816A" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="A18A8989EED049A8" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7ACD94A42CD2BBC3" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="327C628925A2D6CB" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="DB2DAA63C4D81BAE" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="864DB807200BB5CE" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="4CEE117CD377B5D6" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D8D14A30FEB7BC68" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="262F746BA68638F4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="21B51EC56FCBF6B9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BECB7F6DBC95E135" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5EE36395790F936B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="B19E712AF20811B9" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="52F22B6110AACDC" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="97626864815D4B38" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="F62E30D8CF451FA2" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="D3F5FCA413AE941C" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="42C92B5001C42A0C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F8697BEFC7B03B23" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="189E7DCCCBC37AED" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="FA3DAE50184C61BC" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="58D9D60BFE3CE362" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="52905D7438B95DFA" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="FD9B771DAD19E654" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="7EAD1459209D7015" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C0AE2AD8CD5C7243" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F1819F490070F1F9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="7B20AA2ACF711A3F" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="721F7FC707CC4AB2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="80DE68A4323FE7BB" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5D6AEFDE7BF9C101" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="B961EB9A9A56747B" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C1F907F496FFCC3C" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="7806962865C151D" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="46865842671B3310" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="5B261E7E53793AAD" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="91D5AA1437BD9C71" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="4E7F2D65EB26097F" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="8581993729BFA98" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="C0265DF28AF6A704" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="54528C5C97CC6984" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="1EF63DF8184FB1A9" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="9F8FCAC73159D03A" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="A84492D417A0B1A6" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="3984EE36799554C3" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="49BAB19D5136BDB" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="EC67AA679DBEC0A7" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AAB7CAFF08DE8280" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="1218ECF572A1B4FD" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="57BBF5D8673E27C0" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="273965734DFFBF89" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="944F5EE0D4ED38CE" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="B2BAEA69302B4F75" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="54D7930998B855EF" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="254BA809B632B56B" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4109D45F0992FC7C" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EA5E21D91AE99FB2" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="D597070821C6CDEB" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="9436FFBE3D8618E9" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="253ADB0F182810DB" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="699E26BC6F17A155" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="4EFB35FFDD6DDC76" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4CE413C6B13DE271" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="4E2DA2AEDDE68B39" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="B8BD9F8582D418E4" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7E201FE461BF1A3E" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5ABB3053A2BCFD1D" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="21518646BD9C11F9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A0BD16CAE1326477" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="CDA7558FB68E92A3" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="E4CCE59DB9716E0" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4548FDB50B245A06" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="87E87ED40978CDC1" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="71477365238E984B" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="BE4B8BB5977D250D" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="60FB80F39F766108" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="6A796DA8CB437799" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="40CD700F29F350F5" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="6719AAC8F9C8EA39" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="242B6515C47C3FC9" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="99C1D928215065D8" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="E7DEB8FFB1EB9CDA" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="DD32C0EECCB304B2" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="39E6ECB8E645C041" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="237AE7BABF5AEE62" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="30ADA7DCF9946693" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="9DE8FCEE94E1A35D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="2CF2E9E60634CBC9" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="A2E4FF0B23D136A7" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D4EB6DDB796989A2" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="4448A5C81605F3F3" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="F49F8D3379615559" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C6A1473D3B5206B3" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="8797C9F962C8958B" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="CE05FB8936CB80C1" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="EB3371F3557D6956" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="9346043AB9644CE0" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="D370BBAC59F6DDB3" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="FE99099BE97D73D2" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="18203A0E22A0B246" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="20D04992C98AABD2" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="A55E45EC9D843B3F" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="AE4A2048282E1F8A" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="5DB92D595DA28A43" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="900AB86F871E210C" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E6E04FB70F657C95" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="DDD35A350F075990" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="8BB733BD2226A92B" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8B4FAA9333B19AA6" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AD8EC302A409A9D5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FA1EA4386EEA9E81" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="B80B87A1392ABAE7" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="C8AB5AF842D2BAC" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="910FBF88DE5639E4" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="A193CF9EA1FD0F05" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="54959700B902085D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="20EA915E7FF688DA" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="B15CE0C41DB0395E" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="55DC7BB9561689CB" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="19F6EBDB191DD461" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1E097CBE4E9D77F7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D47BF2689A03F7A0" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="42040327E6E10F1C" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="1332F9B5088B9E40" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="1031A08517F4B374" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="F5B0CE8A8D3C2BEA" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="56E8E57C7FC8B8CE" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2FEE2EFE9E7A7869" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4DE09A8A9B9565BB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7BA3E17A8B20889C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="BAB58D67857E32DE" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="1DFCAC867866E6ED" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="D60225F9E97CEEA" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="BA17A5BAF29A30C" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="77B3BA7442DA9224" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="C959DAC35C956DA6" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="C4A75EDB0B22279" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84AF7195D598BAE8" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="148DECD778FD26C9" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="525C09509D69E07F" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C9B8075E48D10EBA" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="6BA37AC9E5D5A76B" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="4D3182274CFC983A" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2345D090F5E932AE" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="352B468314E31780" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="8A15E7AD9CEA46E3" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="55B2794E61520908" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="DBACC4C54A4A85BA" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="7B319B512AA88EA" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="88673964E16F04AA" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="204A6449A05C79BA" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="E9388F74D4736C03" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="756772B1E6A4BE25" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7EA06F7BA37BCE3A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="B843A8F274F0E5D1" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C725D9FE14E986D7" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="DCB143833F9802A" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C7C9820E26E8E157" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5CECB3199564CF17" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="86D3F88ED71FDA3A" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="1419EFC00BA27B83" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1BA1F9F8940E12AF" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="B75135C8FE8B1CB4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="EC03BC028ED2C674" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="E735C152BDE9B568" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="A9F650123E36BA41" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="22EA754C8687E45B" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="93ED308788EA7537" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="14B621F375EED206" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="91B3F7DCEC8C202B" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2875FE759817AEBB" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="AFB67B52204130BE" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2F8CE04590E8B35F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="D59C21BBD89EAC07" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="54B5D1576D17E766" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="3021D76DC5AF73" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="A7523CCB336FF81C" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="66BBC85A276CD27E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F39CD5A8196EE2D0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="ABBB3D7CF3613E2D" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="4E055D290F60225C" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="51E48D5012F20FE7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F8A34533B764D439" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="223A5F2732402EF" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="7FEE21C143F174F0" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="7F5F36500E4F4963" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="7DB384B185477BFE" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A32B6E43B27AA62" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="DDBCE184344C1DF3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="874408A8F2A031AD" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="5CDC1B08500CE735" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="D922BBCEAFBB76A" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="FB87FC69AC48F1CB" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="BFC5D5B4C070582C" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="66975B054253C2AC" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="B95EFE780CE2D219" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="95640155E822A40" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="B4E982E7312F802D" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4FA8421A607D2FE" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="A5008D27DCBDDB7C" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="327F40EBE386BD07" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="DFC8E55C85477E41" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="5660D97C0A39CB26" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="DE5A788368E2FD63" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="8713ADC9F9067B43" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="57EABB93EB0FC930" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B43DB1387B33873B" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="4962B2CC46D11C6C" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="3F8CE8BE2B9B087F" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B4E4351CF4F4EC1A" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="617729F88F0CF9EF" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="5D9145398D4FE524" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="84F4AD10DB51C39B" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="126625E9CE1144E6" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="AD7DA340E2A6DA63" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="39BA848A5F9F9ED9" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="1780C61FDC09C215" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="E46C9A3B5A9992" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="20F277D07EFAFA4F" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="C05C95D05834C0E3" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="670B2204F069D865" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="2D032D5950EA42AD" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="44FA8042AB51881B" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="DF5FC722FCCEA36A" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="FC3ADA5966F38BFC" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="6DBC945A9DC7A73A" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="DE87BE4C232F0A7E" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="312ADF788DCBD7FE" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="417059FAE3C16365" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="CF2E0495E9FAF24B" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D408AD4AE00029EE" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="30ED1172CDB7A45D" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F547D1D125B7B0C5" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="276566BAE3C6E7F2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A898DDFB8456AF23" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="C18A7AA50BEFD724" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3FCFE20B2B77D41E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="487367382CB6ADE2" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6ECF5681A8212704" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="90A375945EB1BDC4" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="A479B10AFD681EDE" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="A7CDD405E10A154A" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="34CBB45842A20F7E" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="EFF3ABD081E3E301" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="A7C77C8E2D41600" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="CD5E09EFCF7341A0" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="96AE0AA052D52487" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="C760DCC184EAEE91" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="34EEEA745328ADA7" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="A0773F4E51EB3B7E" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EA9540AD85DF3370" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E6D169C6CF5F4513" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5AD4DCB6BEAADC36" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="C18B3B859824760B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="D59A983850AEA2B9" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="4A19E11F210AEDC3" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="8494BE9A839F9E7B" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1E449F7A5F081C9E" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AB39FDDD1704044D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="34D843D8344DF0A6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="2A51E84CC5A9053" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="5FA0EFD1CE1F394D" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="41FB8504CF9F1AC6" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="89C50E65DFACB989" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="71C57336833DFE37" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="8E9F3C6532330A59" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="EA5F25EE2284D2F7" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="9C87738B8088BD5C" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CAF9314679D050D3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FBD210BDAEDDB083" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="BDBCD9BB0E376369" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="248DB57615FAF853" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="B06A421EA25D76E6" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="848A31729C453DA9" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CE9962993B5F5047" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7A1EDD86948CAFE2" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DBE1EC9845E2A8AF" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="962EC018DA02B37B" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="E43861EFB7644D60" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="6C577F49712B17E1" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="157E793C40973109" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A4CAA6F305BB8EB9" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5A1076DC9DD36C6B" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="1F144FE118E06F14" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="22D7183B6E567C48" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E442730192A1F48C" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="222766E9235E988" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4E0220E9CC76E230" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="24BD0E8B873A376" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="9E406B89B9F4DCB0" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1D2E056F71FBDC48" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6BAF01F0A14C1B35" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="977012C53A9DA7AB" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7DC25E4A4A3944AE" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C7A512C8BEC927F6" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6AD3011D7B705DE6" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="567DB36078BE911F" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="7BACCF74A8626AAA" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="3865FEBC1463EF5E" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="47168BBD6AB2BB66" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="450128B3FDA2CE59" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8732E4B4D41DF809" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8A1451543F364BBD" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="19DBAB7398256B93" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B4E66302C4C7CD4A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="870AC8E36415F6E1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6FB6B719D7F499CF" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F0F79E4EAE36031F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="60E5EB489C9CE44F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4CCE11B79610E332" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="81B2EB21F15BFC1C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B04F837C58C37C40" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="FF14620DC9ADFAED" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="40205984EB03A5B7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="13A1CBC680D8FC23" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A5700EEED3E57BF9" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4E3FB439922AF083" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B76C99D6E887EA13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AF8BE18E1C02F151" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F82A107C2A2442F3" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="D53709F0D0E84DD5" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="7251DF58AA4414DC" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D875D68D9B4A3AB2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D172316BE085D8" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="393B1DBC6922FC0C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="883BF157C38B4222" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="E34A4A90A40A86E8" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="BFEB46317BDC2239" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="DCF32609C9F83591" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="9BEDE6A68446DCD3" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="9376E32715E426FE" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FC5BEAAA01D6564" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="A2692AEF640DB085" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4DAEB2BFC15E8B45" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="1114D602050CEB97" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="9463DF7C74943422" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="2F629ACED4FADE15" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="B12CE3EE33546329" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="14AD524F95672567" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="C0081D53F2F36D71" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C88B83997DFC60FD" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2907BDC21760E739" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E42607A490EF2CE1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="2A5B479840BAD33F" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="8155EB2D6008FC6A" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="5B4CCDA65BD822A5" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="D11A14941C5A5665" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="C12C21B9C6993505" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="367E2A9B6EBE6B96" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="84796CB7B7728F97" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="65F47B65BC4B6FDF" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="B4150498453BBB4F" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="F78576F9265482DF" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="799B775C6559B51F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="D2FDA3F1606195D8" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FF1B264F829B3C" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="669DF6B220EB101D" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="2322377D03599F90" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="3319AD130D4CB750" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="A9C16931A0711D29" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2105501CFCA70CCF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="F8F6B7E52A771A14" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="D488E01A74C19C70" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF2841B4F1101DE1" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="DFD90B66B1A2693C" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5773B6CA8EF53485" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="38BC1F101D9ADA24" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="19541362B01D60E5" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="A1FCBF36DF451A33" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="3FB6FC7921EC57EE" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="DE52EA2776600487" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="5C250C080C6549D6" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="FBEDAFA568AD0788" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F02BBBECED293BD" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8654ED62F7924596" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="103D6B37D64D5C67" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="16D19F0D2EFBE982" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F14BA6A876F8CAE1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="949FC0F035767113" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="AD6E335E57382796" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="19BA9D52292D078B" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="F11867A6C074DF73" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="63938AD4A1FA9EE8" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="EB8BE5BAF61992CD" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="5BAE8EF29A079A79" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="F0D4CEBF7F1348D3" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="AD29C69020A1C5D8" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="1AB71B21C7E9E38F" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="825C84FB38DC58D2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EFC5704F1652FAD3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="723306C94AC5F58E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="69C2BED64BE5E4C2" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="DE74D395ED8847A0" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5ACE40659F118E8A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4C43E18E2F7791DC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="CF228D1E8AF1E97B" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="A088935CF888D864" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49BEF0067911EDA5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D5C8C22A96212FFB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="93D6408FBF24C5B7" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="F2757DF6EE8E2ECD" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1ED183F51D9DB288" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1E188992F4D2EA55" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D3E7CC87AAC68FB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="2E7F5ED9211B9F39" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="DC32F801CAA40EA0" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="2A289A974CA8DD80" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6F7CD2FFC8378098" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ABF952E4921B8D5" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="794B234F74296B1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="67119CEF9250A398" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="AB8AF6A6B917873E" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="F4AFFEC1096F7783" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="5DFBA650F03F7BF5" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="E489CD45B2D08F23" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="E6F950EF63C256C4" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="F4162650BD4C369E" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="6E09D957A5D8DA85" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="64F56FB48E475DF4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="ABCA6507EE51B2B8" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="EE5E9527FE6B82D" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="678FB6AA17DC0589" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C35725A5392B1748" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="1F69A6442A194566" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="6C2462EE6AA5D9BF" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6E471820343D328F" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="A1CF10842B12B46D" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="1C3F222D5244A0A8" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="EAAA5221138DF25C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="19209C05A74BDA38" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DD50E6A77EA3ED05" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="9F2A170CE9A2AF35" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="D5F065791E5B5B0E" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="788BEB62A9A459C2" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="F094388A9F3A3C25" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="FDA69B11A10FD866" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="36F7BB306CCAD074" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="580F8094021556D5" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="AB96F96E00F1C950" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="1D9D6E6F48E66C6C" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="8D2456EB64C7EB73" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="DF7C16196302D672" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FD0E6D7C9EE9DD15" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B7227F92C8E9E10A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="93B1C1848F7C08F7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="9C089A92F58D28B1" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="D4B8B5B521F7AD26" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="FECC8A12106B10F0" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D234AF77C1435BFE" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="68FAF256106CA9F1" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F8F637884312D147" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9B44D13259D873B8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="40FE5E3F5FFB7640" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="E3DB92B832E70148" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="560E7EA3E6D27810" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="3D4965892E6FDE4A" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="2AA51A9B34AE85F0" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="5B8F8AFBC6823392" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="868701E9F04A3BFB" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="337A9E70F11CF7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="72F836D910B571F6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="ED237C4F89B9F101" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="D980512760C8A33C" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="C590545ED8E5F862" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="9C38523FFA9AACF3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="65172038F5692150" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="26D441CC5847A965" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A3E885FF9B0B8BBD" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7517816C947B3283" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="94731E842FA51E3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="A9F1DB9001937A70" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="7F588620EA41A4A3" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="9E16E088BFC3C458" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="3F2286F8094E7AFC" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="B0484EAFF491EBF7" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="9053E8F3650A9307" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="E0A3D2CD66BE7CA6" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="99C7C2C3CCBBA2C5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="9EC4EAB459F431F8" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="AADBCAA131F896CE" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="DEE7C4B4D970A84D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="8BFB9850DDE8BF87" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="50DDD1B6D9ACC7E6" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="749CB605FFDCA1CF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="CD375801BBC89AB1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="F5A2999D58226B0E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="12185AAAE21D8F61" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="C2EFF9745196CD64" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="6C9B0B4AB503E546" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="D59E4EFD10E085A8" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="D467E906572F625B" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="A9CDF7303463AAC" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D835DEF50E678C1" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="8562AFC842205BC9" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="8669DA23087A9375" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="B3F1A149ED0A36DE" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="70BB7C902A4891E1" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="F892BCBA897E5B4B" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="F31F760C0120C954" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="44DF21B1087A65E5" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="AC175569BF9A469C" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="3BD2A83B72CC0C0E" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="78945941B9587416" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="9FB7426E92AB5242" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="C644A013E027D0A4" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="B50D46243EE4C1BD" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="8CA45E0F731B488A" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F23F5E99D9FC0BD0" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="FE2106098792BAB1" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="693CFB37ABA97787" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="818FC03A2E1400C3" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="B7544BD5AC94DEAD" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="9F6AE840D6362833" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="D357BB8505DC72A9" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="EC6D4429D2E0CD8E" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="E82E3C1C32E1E404" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="88E1D8055C8A8DB6" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C86549144D274592" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="DCDAC74F4AD160AE" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="13894FE37CB0BD40" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="37EE4DD50DC02271" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="945D0C69F14403F2" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="7D7A90A2607A13A" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="E055D7416C691F9C" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="9AED809FEF678FC2" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="EF041010AE48D26F" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="E0A91F2EDFE70764" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="BA368A355FF7FFD4" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="5C02F92E83ABD1C" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="61D64E71C49BC8E" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="C3B52A35638DEC35" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="5342E10E48946B64" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="77D7E92A1309A8" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7A26A7C1E8A8A2A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1AB7442D6D420A23" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="918F91C80A28D7A2" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="EB80CB1ACA2CBAB0" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="CDA90F5EFE73FD44" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="98FC11BE809700F7" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="2A26DC8084F7DDB4" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="A10058012E5F2575" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="6DFB83FDE2F3EABB" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B2071D74ED12EC78" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="692F237706C175AC" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="230103D4D882A36D" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="58DC2DD9A3D47142" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="19983BFCFBE72FDC" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E07A18901068962D" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2575F83B85A84801" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C5A906E4756C235E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="99F5CB44A41CC806" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="66F48C73AD2469D6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="28DC1932ED8CEEFA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="632FBD2C0B3D098" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="7704598876AB6B78" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="FB47B46BE4F38F5A" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42282C915F8B4F96" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9FBAA57D0EE1FCA" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="156833F85F6F46EC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="39E165D61D8FF1E6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="D8E5D575B8DDC38C" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF6B57479F5CC9A5" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="69C44B952208020F" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="D315FFAD308761E0" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1619C6CD4B702BB" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="1A44DD1047241206" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="965584E3C3C3CC55" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="BE1F0DE8ED8012CA" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C6577B8CE97A2ECE" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="261575A269A91C9F" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="F274A5FF2BC0969F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="651A2A061BC5591C" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="113B83CED55F7218" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="B022266FDB61A669" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="83A974F91AE912B" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="B4A7F48C5124AB3B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="F3057E12AD80EA96" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="8A1840C28410EC86" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="9DECC0CCE0362983" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="26C565BBFBCAA103" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="A401E81D06B8F52F" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="FFF3A648E8F6AABF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="A42B73A33013C105" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B557A39850D75B4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D2C4B7989EA3FA4D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="344ECE446FDD8A8B" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="5BE290E8760B6255" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="6D9FCE6928ADE6FE" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="96F02F8F89503C76" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="CB870F304C253403" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="1CD2D12E92DC5C19" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="F1628911FC7CE9D2" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="6E269D39A72FB091" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3DC6A3EBE77699B1" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E3CCB6933A9C5600" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="7DF7AC43D8782BE6" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="296AD9C06C522246" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4CCAB6656CA50066" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="95F2DEBE166522DB" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="80E217D3D9C08E23" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9C297BA172F7D52" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="C733CE940AAA80EA" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="8705EF94F661CF97" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="2E020FCF8F1253F" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="1B9897646B1A29B4" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="7E3AAED685F20389" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="352615EDE13497E8" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="4CBD8A95E3C1E92F" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="78577B6982502C6B" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="60F34AEC8C018E1D" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="86539FA97434D4AB" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="C920D904FADE52B6" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="343AAF4EABEE18AE" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="7E2BFC6DCE1D9D10" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="DB905A8B0479E590" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="B9CBA361B5614F14" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="D4AF92BD03ED7BC6" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="1CFB5E0C44E6695A" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FEB95EC2E6541BAE" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="72DDDFB3DB16017D" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="C03AF7DA3065321B" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="258AA463FB94A26F" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="BADA8F3D978182E9" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="37953AAC5B940318" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C29F26F0AB2E922" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="BB59174B188D38D3" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="F5B2C32ED096DEE" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F73C215824C43C1E" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4A79FB3AD6CB8B7E" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="32281AC3B9FDAFA" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B4BDAF5E563A97D4" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="877E8DFB4EC064E5" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6528DA0B17749EFA" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="7D16ABBB7A222BF8" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="129B0EB3CC24682E" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="D6EAAAE127372CBD" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6048E0FE1150DF9F" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="9BCE2721FA151E12" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="2B66B198C8388C4A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6A9A6A7B6DCA248B" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D41352B53F01ED04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CDCB651F2800232A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="C41240C49329F1DC" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="2B74F27DFEDF9FE0" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="D5176E24288E3C9D" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="115AD078BBD045D5" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="A22CDCE4E02A2AFC" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="A73D104F0E0B180D" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="16C39E17B4C329A9" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="CE1777647A9450D8" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6906C304827867CE" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="6F5EE29EFF89A684" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9C0F26B67223D162" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="F9DAD0C034A8B0CD" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="560CD09D5D7D3AAF" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="1C3A5EE54429150A" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EE23D768D6ACFCD0" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="E335FA9230E02111" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="A73BC3A528A11B64" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="6A02937570816480" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="751FF869DC10DF60" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="274D08D204BCC130" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="F440E3F391225FA2" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="500E6081C117D0B9" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="AFCDCE7A17D1BFD7" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="1969EB4B6A455811" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EF1053AFC1755C1B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3ABDE0E7C46D0FE8" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="53FE9F96C9F9B852" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FF2A4BC5583E791B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D51F15EEF8C768B6" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="8492ADB5F0EC99C9" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="22C68B428E0A063E" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1048B167B04E1198" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="CD89B5E63429C27C" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="ACEAF1ECAB3560C4" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="323E08A2AD483C95" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="4CB2AFE3D8EFFB28" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="911EC0F548DD75DA" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F7E8EB45BDA9F0D4" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="57B2B0AC79B47700" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CA685EA8DB3B5CF3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="10F53BFCB2DD5663" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="46B3CE63CCB5A240" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CF4729C1880E9E12" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="31F2F81288B63298" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="932745116826C289" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B52F221A8985C16" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="30F805CC0A5FCCC9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3E84396E9BBF4944" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3939100866272D04" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="DC8ED860A8753073" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="BAF6CB14FE04B39F" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7D6C7F6EC82C8322" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="26817C2709C431E5" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4117CA385C9C2476" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="213325D4BB606944" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4670797AA5D6AD02" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D805AF6BB41A4F35" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4A3D692F84EDB253" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="7731DEB303DFB54E" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="A282AFBF0CAD4B7C" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B1AEF9071B2C62F5" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="858975E69ED1E039" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="757F2523A2DDC4B8" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3172AE0B1128F264" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="944157EC3C749097" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E510D8F754F690C4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E1648586E1EFFB8F" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FB7624F73EE235E2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="92E0519C73B638DB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="6ADE3CBAB6B6C3A7" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B6425184A999D070" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D61883646E7CDAA2" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DC11079A6DF2EA6E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D5B21922FCDC9CB4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="29FA91EB5E5563C9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="DAA9F846E14F9510" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="13D8955E941B34BE" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6E5427D246D94FFA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7D36B9F90B7CBC2E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="44B1EE887979F58F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F8AE657C874DC2D9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5EDDA46C43D32EA4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FED7F3DA3EC58A51" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E7FD8256F693BBB6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="CCEA471555E136BE" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="4CA3C98B7DD20201" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E555946828C50771" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="494CAB735786EF78" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="81DEE48425493F7A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4B9D3D2C915CFDA9" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B4F9D1709715D50E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2BABE7A0311AFC03" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="74C950A23145CF1D" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C24EF365C0AEB7DB" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="61D04E87A7823CD0" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="90DC0544527A7AC1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DC9579CC35B9949C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2EFB9D6730751085" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="96C169723A7A40F0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="DDAD5A4674B58693" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="47C2ACF5F067CD25" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9EBC278B5A9AFB5B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="952B10791BF86C85" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4FCEFA4661789256" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5DA0469524B0DDE8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="451A5DDA8A14F01E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3B073DAD6B12A0C9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="9C726FCF9444F66E" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="D05A8AE719A625D4" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="F6E10A045341E92B" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="7D13B7B3747FC1BD" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="ACA35AAC56A7A3C1" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="bite_state" class="Tunable_BiteState" display="Bite State" muid="3856508D5E5A9D6C" description="The state for forcing the bite interaction on the chosen&#xA;target Sim." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="2F7F85C28326CF8C" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <Tunable type="interaction" name="bite_interaction" class="TunableReference" display="Bite Interaction" muid="8E0DB7EB72B7549F" description="Bite interaction to push on the selected Sim to be run by the&#xA;visiting vampire." allow_none="False" Deprecated="False" filter="0" group="General" />
                <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="AB670510DCCA2E8C" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                    <TunableList name="affordances" class="TunableList" display="Affordances" muid="323218AEA4EEFCFE" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                        <Tunable type="interaction" class="TunableReference" muid="250CAA1D80B7B99D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="tags" class="TunableSet" display="Tags" muid="B26EC3650CD640C9" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8643200A5ECFE2E2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="20EA882BAF00696A" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="8FFCD28421717A51" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="304E18A1DFCD6455" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="B51BFBAC600FEB7A" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="AEDC400616075B10" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="47CCF9A3541AAC54" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="B2441D40061E682A" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="C3F20CC9EAC894F3" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="D6DA8A78FCDECBDE" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="2B7CA862BBF25EA3" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="7E78BC8A330993BD" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="C9A149FF44CFE53" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="7F115642085CE068" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="97821EAA21981FD2" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="338942F1A88C8199" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="8D8A6AD588E0360F" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="A06DE9E74F53DFF1" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="C4675EFBD0290573" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="6BB6FB0D384F4B7E" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="9D4E8CF1574AB915" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="FA23DFF0B4CDE9E1" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="39D7F1CCCEC0092A" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="DB8987ED11CEAB6F" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="A891F3E6EF766595" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="4DC1B14E99F4778F" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="561618A05B2C0029" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="C21F469AAC81DF63" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="7155170A8747BF91" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2CE7256B54C1BBC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E50FE0379D9A0189" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="6DF7AF8867B399F3" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="A1E972F138A5CFD1" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="5BD54778B16E666E" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="3C001FA9457C0CE5" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="E28A43FCC2CBB5A2" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="91B0E95DF53ED1D4" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="17E3CC4D71BA8C3D" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="B074EAC9E7D2F7F5" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="5AAAC4EC69CF05F7" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="8506B98FADB18F94" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="496CFAE688D60C62" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="FC6D48773D7CB76D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="4310ED868B172EE3" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="48C5F527363DF74F" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="F71813D55AA79FBB" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CFBC7F6CE067EF9D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="457B15EAD023899B" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="959ECFD1CA9A6FA8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="94129185692EA4D1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="F4DA1C8599EE6418" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D9CDC48F8F72FE80" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1674099E770D1A3D" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A34ED77301FD6BF0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8F16A8D56101EB48" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CECB03A46D124E4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="FA4BE7205BF5BFC5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="1A0754FBE7E5AF44" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7C1B040E5FB996F1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8AEEF3D83CD772CE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AC59AD5A3ACF213A" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F61C2C4460ADD367" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ABF227F31D7447C2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EA9AACDD085E7288" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="15752690494B0638" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="13A1D64B0E71375" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="106DFBFC85B76478" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A554348B82D70DF3" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="1890EBC92453405D" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="A87F0F68036002BF" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="7E1B41939B202CC7" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8B2CAD9693C6A0AD" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D19564A7214A4576" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="970EB2316B164EB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="D63D670846A49AEA" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="668AE1BB8B22FAFB" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="84C6DB732A66DF82" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="13ABB082DE077046" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2E0E350E099C7F99" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="67B9D984856072BC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="DFF14BE71308461D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="29946679DB3E0E1D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="55D57212466F5B69" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B5232FB853DE3327" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F72108FD6B107832" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EF70EABF3F3DDEC8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F4C01C7D3FACC5A9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="6D2DBD64B0837390" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BD59B651CB745D70" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E879C0CB81DD8B8B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1F4C496CFF4449A8" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="484F64E2EC7E0AFB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7DDAA350FA2A403C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="52C0D5AE40B4E668" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="33F547B2428D2F1E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="69EC1DAE1B51D39D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="7FDC96D5FE169511" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="D77FA08A745D0351" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="157128FAC1E1BCDD" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="C982ACFA0C0B413" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6CAF50E972F39595" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="63182C0DD3926CE9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="14A4A864BF69F35E" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="64AE9B8BFB35AEF6" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="C6C5B6D5A80030FD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="81AF6042B8EA5F8A" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="7EA3047A88399303" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="6DBC7C9A730169B7" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1FCC57FFB84C4481" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DD7F813437722155" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="90743300B3F4F6C2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="C27B5CFEE9967219" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="947914A2E1BB4F00" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="E4CE548FF7EDC65A" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="24E03F6641A2B941" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2F7C525E3C63E363" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="10F4C0006F099463" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="334DD39B1315AAF9" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="1D2FE43416EE2559" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="6B6E82C911BD68EF" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="846FCD0511432E1F" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="8C947E8AAFDFE022" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="CD20ED7B1C59610" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="3B3509840AE100BB" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="A7F205A9D899BDC9" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="D2626E34F53019D3" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="CB7BB13A572DB9BA" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CFE8ADBF1845EB5B" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="EFBB5A7F22F77301" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="9360C744F8B4E945" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="7E437B68A87EC53F" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="2E955D7A2F9FAA82" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="80E41A6834E87C18" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="E27913F70B5BA977" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="DD851A3CB0BF92B1" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38FB39DF3E7A0DA1" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2C1396900F3A48A7" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="D4FF7B490C8AA984" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="92D7AC9805AE6FD9" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="B2CA97EE46A19E72" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="168046B2DDE85DA7" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="C37BDDCD8B62969D" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2E43ED7C28E409FD" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4A9D3FFDE96624C8" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="A250A231E02011DA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="17D405D8DCC9AA09" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="F0BC8EB885DE6E3A" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="3E092B25DC322B76" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B86D117B7B7E8DE5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4AFEE000941E0FC0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="7ED7A52B8F9A94A0" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="5FC5AB8B85A205F1" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="3705694C4FEC4DC1" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="33402DBBE29554D0" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="CDCB76FE0BA14626" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="1D28ED9CD51C7733" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="DED1D9B260FB1A3B" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E885DA656D0E49D8" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="A063F2292B4C6CFB" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="572ABE78C7658EAD" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="3B8E5422800418B9" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="33F38346A6A40608" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D085AF20FC354B03" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E58D8D9744BE6B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="27058755FAF4B91D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1074644CD1746847" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="314BA9BF3386581F" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D57240078F458C36" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="7A0BB17A67F43CFC" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A455843E47596045" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C487EF30F32CAAAA" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="CE2A47AD1853B29D" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="D22299069F04EBDB" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="7531921D811866A6" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5FDD7AE8FC58580" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="D027A7A0DA34F35" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="29A943CE0D893786" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A8A9CE34B9C939A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="AB1BBBB68DB866A7" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="2F74681E955BC7B5" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B300A9AA9314D0E7" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3C82059547E88B1A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="A199E4C41F1EBC5C" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="33DC937DD857C346" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="3D19FAABF8991E08" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="A0BC68C1BC47F0AB" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="613B0BBBEBCBDAE9" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="57EF5078AC2D91E6" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="624D420AE0A48C4B" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DD5749217D6EE530" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="103784FF55432CA4" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="E5BB9F1F19DBB4DD" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="99A25E208116293E" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="B35A24D8011D5F49" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E9047E8789391638" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4B3E513774B921DB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9C51F78CD77854B2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C9A331F982B3C6C9" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="437EFCFD8328DED0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="7842B5969D8845E4" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="9F181AD94180B1F2" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="DE4B3CD9143B394D" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="C26AA47646E4E0E6" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="FB7BEB8948BB7946" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="688D99B1CC2D511" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9C5BE4BB44C8CDB3" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="C33658BEA8E8DB66" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="7A06C6377DED9A6D" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="6E36D4DFF69DBD12" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="FE42E0C07709C07A" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="85677923EA2B1E42" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="C338ACD10AFBCB0B" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F9786AAE3F5D3CF3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DC54969F9043067D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="D52EC00D725D37B4" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9F643F6F2B36C5A4" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F5B061A1B2F96CBC" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="DB0B0CCEB24DA4E1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="73D3A789515C6867" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="95456C5F4B1B7370" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="C0021E09FAA632E0" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="2FAF931B75C591E3" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="7C94C9F15C181772" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="4EA3A0AA13C5231D" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="EBFA5EB1414AA5AF" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="AEA3289999B9FE4B" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="95578AF46CC4D46C" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2A644A067B3B1AB1" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="C57AAEFAF6D9B722" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="5F487D217A6A7CC4" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="B51383D89C346DDC" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="5A9BB8BFC4617B29" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="FFBD5552FFA9C1F6" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="49F570E7F3EA6076" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F95279AE0582E87" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="49785EB899B55B6" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="6E0A494E6F1576B2" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="5F6686243DE1FDCC" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="216C97E4BC546789" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="F3B650D1D49FDA62" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="C096238ED6927523" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="86872FD414855B32" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F666F55A8D63362D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="44B5B599EA553636" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="D16D3D567353527E" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="81C802218880DAC" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D992241744370146" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="29F4E7D3914AB21B" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="1593637D36D86638" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94F9521804B727D5" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="C94BC9DC06A41FA4" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="B430DC08DEC6F4F1" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5363ED89735AE6EB" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="41604C007224C6A2" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="36985807B15F5B13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3AB3E63FB23EF1C3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="26A620EE1CE2CD01" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="91339B941391F9FE" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A47E8DDFBDEE5DE4" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="6AF5E46C260A92D3" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="31C87A54F053FDB4" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="A6FE5CE9E88729BA" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="E44F2882CA83619F" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="CBABEE1D4BFE20E6" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="18FABC4D61DBE07E" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="89F80E75AD2A4CBE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="64EA5DDD74F0C49B" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="6A37B705176FB1E6" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="A3F2A17BAEDA7213" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="CE93204ECDA354EE" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="FECA1ECE4CA8184C" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="41A125963F23BBCC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B4130AE64D0BAC17" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="B4ACBCFB3B6A7D6E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="A277C4C8D703D045" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="8A115F7D3288779C" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="26029BF5F4F76CA1" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="D4E41DC30BB6F9CA" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="6500CE54EB6636AD" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="F015725D57DD603" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="82C75EFC69CA00E9" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="ED5334AC815107A" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="88FAB8B17CBD189C" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="35B66C009BEAEFA0" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="4124EA78EC1339E4" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="68BC8C074A2FA07E" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="58CFA40870A46918" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="9CD868F5E533A692" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="A55B3AA2B5598EC" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="82B716FD40650D39" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="54FF787085AC0307" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="5921826597A895C8" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F949AF5C9CBB712" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="1D543BDC57B1DF7D" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="33D1088557B51F5" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5767EDBC2047C45C" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AD698BADD7482DFC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="6C7798346EC76019" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="F8C651B4AE7E2101" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="85F81BF66E0629C1" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="55B3C7ED525EC8D4" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="FFABC4B244CAA48" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="58B38435D172FEA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="1F0768444C871A9" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="2193ADA2D7333A19" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31688C90EFC7E523" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="B21EAC640A756090" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1CB97BB3CB787235" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="7BB07B96ADF93007" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="B8BB21123066C3FA" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="AFD13E6319CDDD6D" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="ED2B12D6FA23A812" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="CC7E531A83526B5F" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="3CDF0CF9CD2F77E3" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D9BE74B1F7A04DD5" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8F0BDDC364AD3EA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B5223815D66F48D7" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="5224EC36FB5D06E9" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="A57229AE4CA3BF3E" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="9060920360765CE6" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="66710D03C994A8EA" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="D5381F372D0028E9" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="7F55CF166EFFB50E" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="29FEC2C734C57C2C" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E20A44EBCE8C519B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CD7C4A6946CCDE43" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="BA1B9731AE5C25D4" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="482080F8FB9FA453" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="86A2CC7AAF9FAA1C" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="5156D5DD41E4A4D7" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="60D9B9D7845F4AFD" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="698BC13F23E66F2C" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="EDAB9A316CB7765E" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="76D8FCAEDDEBC8F3" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="F2CB925F7B36DC61" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="38BE98C8F48028DA" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="A41FD610DEAA04B" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="CB482A99ADBB51BD" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="DB1AB777E12D51BF" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CCAF03EB43846D8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6AA2CB96315608A6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="BE42994014A39C1A" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7289DD69F60A3709" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9E690BB0B98CCDF6" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F27328A352380713" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BBD7107CEE7590CB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="89A923C660921E46" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="1D0ADE0C5D2FDA67" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D87A2F11473ACF1F" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="EBBEF07D052A77F6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="E58F0A3B4B2F7201" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="34AD33E6CD1E54D0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="71D897568F3AE3AB" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4DD972A3975ECE9F" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="88C0D493CB19707" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="27DCEE8835CCEED0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="D59D79BD121C76FE" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4A6B374FF0DB1442" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="DC8BD9870F139EAA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2E4D6E3ACB789FE9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="31B65820DC1147FC" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="33ABD172ED58A865" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="5BDB342E69D0DCAC" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="2023680049964555" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1E07F0B7BACA0759" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="B5F207EB0B9BBA2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="C473938C27F1293A" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="E982E12EDE17C006" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="597DA77A3A99A672" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="A53C606BFE03668A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="766983B6698E01D4" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="EB8B50A6E397C3CC" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="99B159326318902F" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="DFF9DBA781CA5E2" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F2111B6875F237" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="931AC9F94A9110F1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="9C1F28194C36773C" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="4C8D8F943DB18A7F" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="6E381A9645915258" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="AE3523EFE9037086" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="CB04880B13C16014" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="A9D182D2C5CBD034" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="D6F57E22E2A846CD" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="50E59E966F36AC2E" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="6034B4DDCA14AE57" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="FBADCD9A74DE70BF" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="9774B95468771E7F" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="88961DAF0C53101E" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D8F210B7F8E61ADF" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="92BED309228FE179" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="A8ED8CD9E79D35F3" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="1C878C60983B6CFF" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="67237EC0CE43A8E6" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2BE00055092CD5F3" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="D8C6BBCABB75E48E" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="C69CC906A3CB0392" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D6D69111F7EC910" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7F7A268181526D4" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="D71C8850E69FBB02" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="87E24B99EF243919" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="213CEE040DB3CB44" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="BD836B7589756392" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="B9C48BF809EC325D" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="9D416E41C742AF0D" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="5D231FC8CAC43D3" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="C2EFC2529F199F5" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="6D17FF81749E72B6" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="9C7076D16CC2028" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="1983E432854F9489" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="BF07E87FD9A67E97" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="A4178C9120A2E03D" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="47201F0E2FD6ACE3" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="EFBC2A17A8B10AFD" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="883E4E4D55EFC4D5" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="CB0A50C5F8F3DE54" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="B46158855208DE96" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="21A1464A1EA6C3FE" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF53035C6B4B5E49" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="4094BA80C16A3AF2" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2816D5B3DE5B5BA6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2224EDAC0C32C2F0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1C088A777F15E8E3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="F61722C62217BBB7" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="695CED2045D1163" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42F5A55DA6DBC0D1" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4CE0110BF70BD77E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="BFF1620A9AA649BE" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="87838A206B192931" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="461BAD67D72743A5" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6EA77EFBEC6E09A3" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="939A41F70C8C9FCF" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="62E99FB3AD130A3B" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="A180C32D429B9312" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="95688A899B55EBDB" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6E888C7CE3E4D612" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="DF8F70F0E0E1521" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="C804E24B26AEDD23" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1033AD6E33AF8197" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="13AE8645F5D4958C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C03FE1A061DD371B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="97FE08C65030723E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="DDCBEBB622389BFC" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="29F1BDE0F37BBBFE" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="E503108BC4669A27" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="70A7D6E5952893CA" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="71D4D4832E61A71D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="CD0979CBC17B8D5B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="FC8E0948153BE584" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="5729540EC310E680" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5C785932C4B51C58" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="20AF5360B5FC8F26" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="B7A9AC09B57BB689" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="B888747E2664145F" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="FA80B679599E83A3" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="C3CAB0F64FF12F30" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C3056E7600E2964" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E3DF8BAB176C3E93" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="5129F4D6AB92B0FC" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="EB4E1532F9E8553D" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="138D17FF0A91BC3B" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="84B49F06718661F6" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="79A9589ECF5360E4" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D68D690FB766FCDF" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5C778E589DBDD903" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="C1B2E30143A12CD1" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="19378EDCDDC4E066" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="56243261AAC41951" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="A6C18E8ACA3CA1A8" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="99B1BEDF469F0EC" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3ABC49455B29482A" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="5E46ACA3AFD34320" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4DB83893C8F223F4" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D21B9A9D4BAE2A8E" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="DBB6117E5724640C" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F0D629F04744B952" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="82BA8E5A5305D0ED" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="DF292AD427107B6B" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BCDDC60CF7E13C46" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ED6A58F62220F231" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="4052D294C5CF10E5" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BAA1AC350770AC8C" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="76C83FEA07251132" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="BE16B8BB52074D76" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="88B9ABA7A430F24E" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="B29B5330CAA72EC0" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="322B94E7B0445FB5" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9B8005E985391D8D" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="503D1500FB95142" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5C5EE8749CBADD1C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D877DD24D01143DA" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C0C031DC3563199" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8B07F178F2D86F0F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="B993E5B4B041DA59" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2CFC724692A0C585" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3D5B95093985A9F6" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6C1D9B10EFDD1501" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FD1D5B9DC7AFC00C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4297EB6BF0C053ED" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E8B9C0AA9F83000E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="90656838811069F6" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3939DEFE419B1101" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F78F41DF6615A67" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AF32DD2012FAE875" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EE0F5C530106AC3B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="906817258F08C8AA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4DFCBF6A06DB315C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="24522F61AAD014B4" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A10A944BB0A7EDC" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="AE61D5081931F255" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3F8B9BFB70BC4EE1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="740B52F14F1C7981" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="37112151D7186C91" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="24B3D1B39DE4C4F" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="41484988630E210B" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="42D5B2B346A989C" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="A0E0BA62E2974902" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="3EF4E984C1DFAEB3" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="69FF011CA21BBF58" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B7B596EDB1AE0EF" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="945CC1B5D8F3C1D1" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="63A4A260D2B02592" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="1C4CB2BE28B51B9A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="2CB721941AFDBAE5" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="7A1F36C688E603F3" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="C6CD7CE4E8BED1AE" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="EF6ED04218872195" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="CBAFAEB600377CD3" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FCF0CA13029F187B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8342D05D6952E5B8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6AB81F5935C43D2F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="9BDE0126B75860DF" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="E91F3E3CB0271478" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="BAC5B1CCD26E3F0A" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="D9A9E5A64A1412E2" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="F24C7EB2889C4BA1" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="B9549D63AE2D07EE" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="6F461C17C5A4E0F3" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="4761D03540E97321" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="B7EC8861067431" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="EE38059A98EC6B1F" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="BE7F7745969EACE0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="1C7BE72CD8E39B52" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A0E021FA36B333B6" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="35D6AEED1A1BD61E" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="55B781058EC52C0D" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="3BEE3BFF03562B05" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="FDDEBADC7B9D77E7" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="813E11CECCC56443" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="7ADFEDA58F34465" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="EF61BA607DE5C3D" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3BF73E855634B95" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9E7B36113A5F9E8" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="73F3C0411D654C7D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BB6C8BB29F4265FC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="DA0696D0D4D8A998" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="D897FEE9B64F32C6" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="3DB3EB28F079848A" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="52985C42FFBD0A5D" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="12854A9FC6039AC2" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="3F1C86AF3A8850F5" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7803E49F2A415169" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D6C2B381CFAAFD4B" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5BFC8302E6AF5AB4" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E6B6316197BB1B0F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="57AA61F4956D801B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="D55A7F34EBD51D87" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="6FCC0D008A072198" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="D8E4A6E0D3B3DE05" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="2F55B8A6252CF164" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="28B832D6E86B93FF" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="54399DC1D014E95" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="3B083C33921D2550" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="50F8CC42E6CD89F9" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="F488D4BE5E34E1CC" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="BC8698E18F4DA46B" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="84D1065FB94D5563" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A4B807E8D803EFD8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B19823ED56FF883A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="3E9C8FFA05F774B5" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A3DABF8E190496EE" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="14DA2BED4202B6DA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C80D2193CCAC306E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="DD1B50F8A9AC8B9A" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="84B51F50FF800601" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C91B1CF65D5CDFD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="324C865D18997DB0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="A0CCD2D5801BD831" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A5FF74FEF1A6841B" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="444171327814C49F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="437984A97B182112" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="34ED294A25A9B970" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="A7A2D50098031A86" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="372094D0BDAEB001" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="9451CD725C583FFB" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="AD20C1994755469B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="229F1A424D75B80C" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C0F57453FBA079F1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="B786C3D526CC89D2" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="748D5A838B5F000E" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="FFC1E3D6E918C8A8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="227139FD13359EE2" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="238EBDC31E68E780" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="1E2EE79045932C2F" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="16A7E503D43F69EA" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="D196CB83DFC4EC56" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="8053C4C6DFBDC819" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="8B5C62006731385" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="9B520C9549D47FF" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="6FD8FD72FD04C6B2" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48170E2002EF5B8A" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="19FECF7A81FA5E49" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="EC1168C8FB4C577A" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="14C60111F7922623" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="95BB4980A4961E09" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="AFB11473B0203B99" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="38FAAED22CD82FE8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="CC74244D1B44CE17" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6F56E6A8982C959" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="BBCEED6F8896B76C" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="D8AAE33E11282904" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F1F547DE9DD69911" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="5A4DE7E705B2A015" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="2A605C0B86903BF7" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="D09B36FB72A376CF" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="A82651784A49734D" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3FEC7D3D34A6A942" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="7B40C5A82C0F92C9" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="A88E2A5949118911" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C76BA978D5795EAF" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="684B77739B315647" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D2C6F1C3396D0685" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="6639BB538916390A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="1805F7DA5F38F0B5" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="BF050C30D6C91D63" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="110F38A830A41058" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8DD0A595648213E7" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B1A6014BC612393" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6904173CEDBAC905" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="CCBB53C9B6CA6E15" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A63F1D208568CCA2" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="E6AA2AF767A56722" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="CFDF61239CB0D165" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="91C6A6972DD24F67" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="C79D333D9B97180B" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="67BC0CCA43F24537" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9819CD5659FF1D1F" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E5102295E4D9E477" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5097CAA4E9175D0E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="8F55A9CC86D47230" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="811F91B7878E6469" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="2E217A6A41A1C487" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="9E88FDA0BE6A2E6C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="31FE1B37F2D2347A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="EF1EA0D8AD73E44B" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="DD806FDC3646EC2A" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="233C4A87F8A3816B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="95A158239CE7051E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="1D24B994294BFE6B" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="11D0D5BA62FCC5E4" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="8E346A32863C0615" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="C3498AAC2C941A4B" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="9073049BF611DA22" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="AC1512D579E60DC" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="AC224E2BF6AA102F" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="5C4AF25F9AE229CF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="27B21AF56DE85768" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="E10676B3CC161490" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="E9C4690369401CAB" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="3E222887A4EFCE8D" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="FC922B2D57ACE68F" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="5E5826206CB2E4C6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="16B51BCA9F5C6839" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="1C887DF5F5F37134" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="E65F62230971E7ED" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="C5558C2852E29D50" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="FA7EBF85A137DDE7" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="79EAFAB2ED5B7C86" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="8932FD98971177C9" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="E4E6119E62673A3F" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="79B1665898239001" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="6798617F614A979D" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="809495F0714C83F2" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="9C13DFC792E46F0C" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="449FD304AAE9AE8A" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="4C8B51915E6AA6FC" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="664369CE78A12A2D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="C925F90A29FAD3A8" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="9880C597389C36C7" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="E0ACB8CBC90332C7" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="A94F2A6601CB64DB" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="3FE9BE910D2117D8" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="4A70A09775F8F7C4" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="223E2FB9BBA91C1E" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="AFF64CBF214FC819" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="52CA709A947A85BC" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="C7A90AFE65A16A30" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="42291CCB65715F1D" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="6534305D002F454" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="F39E1B603D2DE145" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="2220F579519345F3" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="EA6A333E4F3F4820" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="63F37528BF8433" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="32D7BF37E7293DB5" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B2370E678D4F7558" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="3D8B5180B2BA5C2E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="F131FA3644BEF437" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="BECDEFF23D84C451" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="C95AB4FA47273CD3" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="A45936D88A273865" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="E685087415084B1B" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="3A13A7352AFF1A78" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="6B7EB585D9838185" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="62510C25FC9B6272" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="F422230C34563B5E" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="B048A307A3785E5E" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="DDB434833C762BC3" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2BA907A42F9B76CD" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="7AF52DCA06A9BECA" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="32B01228DFF4EE98" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EF1DB755ECB99D36" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F278C2E348DBE7CE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8F68E54B176F1BDE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="257F2631DE198B30" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="3F4B2FD7CFDE9700" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="1E9A0AB84079C4C7" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="BB6CD8C3EFF39FF" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="300CF5403433BFAB" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="5B86269C8F47DB24" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="509E611C24C62653" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A1D180ED0EAC6C6A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="7E42307709E81B81" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AEDA3FB3C9008861" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B7A4DDC34F4ECA26" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="777FCCB3BB67FA32" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D9B96F0FC4425523" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="810E648382A5FF38" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="83784725767DBA34" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8A5791680537792F" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DBEAFBF39A6EC245" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E83198C25F8C9688" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="8B91D8EC8BE7EB4E" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="73353311785F9692" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="BA678C5054B4C893" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B95C934274D7AEF" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E21F71DC208F4D24" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="288C760158C2B401" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="52711DECC624565F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="9BB28362F97D2BA1" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="99F51AA969816CF2" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="75F0E8571FF8294E" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="3FE17792C579340F" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="13D3A0F5E204C024" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F59CBDC6657C2833" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="DF7CAF2C90BF27C0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="A93B4BC64551B63C" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2DF7EEA1EB572DB0" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="526876B17CD14D2" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="95C8269FA2656337" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="6ED636357F905E88" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="27E61BCEDEBBF46A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="60B849ACCA9F3983" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA95D44384CB2360" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="38B603B0F2545151" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2FF41E949596BAB8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="EB3BD37A84CDFC7B" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="F8A4BFE019F4430D" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="2EAAD33B0641294F" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="FA2E7B44DE9D844B" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="7A279B87655E1254" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="BCDFB1096CB848DF" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="80F3733F7DFF23E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="956BC35B665A03B4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="7F980502781EC01" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="CA787E005AAD20E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B1E6AB4F721142CD" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="16078023E2ABC9E0" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="E9BA3A8A82816D90" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="42420653F586A236" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="8C0DAA6DFEF49008" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="42274141E269E68B" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="E53F4D416C3D3E2D" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="8BCB26D4D5044509" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="3B02E6C2574D85F7" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2EAB89B370C96262" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="99FCA605A619DDCD" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="425BDD89ED0DDBD" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="994C1077F9A4BF78" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="18D29AA71E7D1972" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="7A212DA1EDFFDD00" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="8C291FCE229883BA" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="D516EC144498DFC9" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="80FF7566D79E1DC3" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="5A3D2016885D7768" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="5E84B17F50BF6DB0" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="3A9AB36A537AC79F" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="9C1E6D105ABC0356" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="5B99EFC840127FCA" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="EDFE61B39F924A06" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="51060BDF8A3B498A" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="3A2261C67633A0AE" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="1CE06A6C45780F16" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="3E2A4E7244BA3338" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="61E1839273C140B1" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="CA24C40030843157" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="7F72BF831AF1B2E6" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6FE59059B46B20E3" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="577D7EF147BB4D9C" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="FF887CE3E2D7846E" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6EA53D98581CF232" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="E2D420017F87F531" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="12041AAEF8779B06" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="494507D8B596CFF" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="781540A0D0667EE2" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="867FAEE4D81508BC" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EF9CEB45FF45DAD9" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EE62B8569F8A82" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="DE3DE3A58924083" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6BCE58800BFC7B0C" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="BDC5636A0E746CF9" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C195F709A23551D5" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="A1EE12C2C223FBED" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="652D9EA7317D77BD" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="4B75E397E4270D92" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8F74F2DFC341D2A" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="1CA02FB8D04C347C" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="49D86E33CE914D32" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FB897741BD16AD6E" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E68AD3A8EDB7DC13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="26439B54E9F1FE42" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="689652F0405F398C" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="D964681D5A05889E" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="EE17B7330EC2C30F" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="C53341A1AA3ED77A" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="432205B0D40C7AD0" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="25CA1F867CBF3A8E" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="62C8490472AD188A" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="54DC46EA34557EEA" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="CA1F6EAD1E78608C" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="C3029B08B2260357" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="11F77C8A20A262FB" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="BDC65F33E3EC0A1A" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="82FDCF2F4A61D48" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="D5CB95AE1BFAC6EB" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C9B1F9A0111D70CA" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="2E45CF38BD1F6893" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="CAD2872BF4A67B45" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="F941AB87C5F7DA44" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="3F8263A1B92C09D1" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C522057794968D47" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="8448DF4AB66FDD00" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="3BE72345154F1D78" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="FD11CF7EA16C3225" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="B1B3903DD2C40610" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="596CA40EAB9732E9" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F88EBEF8977F3A9E" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="F34BEF557449720" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C4A4ABE3CC4B4892" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C56EA0072066F7F1" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="36B87C0BD8E95223" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="DE0947177E20A76E" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6F9BC0344487D954" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="36D2619DA6A1B0CD" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="8DDA68B4D4BE7349" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="25DFA9FF60CAC03D" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="5C784224FB40F457" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="7A38714B6FDE77BA" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E005920468C321AC" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="B770E39D38DE62A" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="DD6E288CACAA0C09" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8C793AAE32282874" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="317D50EA15DA598D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9DBCF20DAD2EACD9" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="A6300F9781165627" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CC676A0492E9929E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5110BC9F53DE9E0A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="802CE3574CCA7C96" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="544172AC4DBB4E39" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EA4B21E15EE6E614" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F4D852B41B860C82" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="F962F969AF36AC27" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DDFE0DE2C980E4DA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C72E27DE051F2B62" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="488AE6AB998290B3" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EB7B1A2728B9EEDA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CB0F5B06C08B808F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E4A0F3DEA12F02E2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2BAD17E10810F6EC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="D879DD045F35D9CA" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="54FEAD1D95E89383" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C108447D2D04B86C" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="73FA56C25C97EEA4" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="AC934F7595AB7128" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D31DA78E32A1CC51" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="8C26401F5E4BAC5B" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7B97B8C4E83D0755" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E6C6F0EAA966A4F6" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="BF249CA972ADD87B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F5E7127A701B6313" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="E7545E449F66BF98" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="644726164DF12E96" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B4351C7E345B94C4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E99EC8348842D988" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="32B147F1C7EE4EAB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BC7E79574D5FB1F9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E394276D86292A19" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="30C2793B1F9BFB40" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="77C27BA184FF7997" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="225F091DB527F70C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6FFDC82CA623567F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E850147C8EBF4EE3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="75AADF7733AFBEEA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9F4AB50492E99243" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="12E8480A0C0BAA98" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="AF0CD26E67D0FB1E" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="1356E92E24CC27E3" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9CBAC2506516BD3D" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="446DBB1942512D1B" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="51DFA1B1A6C70A77" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B05ADEA5F819BE4" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2194FFC03EF39A1A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="73970F2BBB76F6A1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="6464BAF73C5500F0" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="413C6AA5022C71E9" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F4803265893F0CF6" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="825BBA9326E3E6D2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BFAF88CB087C788A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A5FB01428629C12B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="14286FFB14FD90DE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="76FE429B6D7E5291" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="95B7987B0D8E39B5" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="46FDA607EF590961" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="442F5686F8DC9160" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9795076583E872C4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9F2F3AAFF4270FF2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="17C9270E52B64D56" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C483768D4CBE642C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="2B44D67C81E6B995" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="8017E3B9FA98650E" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="83EE06BBC9C8FFC7" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="C7303BFE198D9A87" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="3B8AB3B95F6A9DCA" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="break_in_state" class="Tunable_BreakInState" display="Break In State" muid="7CE99B7744A58017" description="The state for pushing the Sim into the house depending on the&#xA;active powers that it has." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="71C086C6BB62163A" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="50A0DC6F9C7EC6E7" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                    <TunableList name="affordances" class="TunableList" display="Affordances" muid="D85EF16DCA85DBD5" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                        <Tunable type="interaction" class="TunableReference" muid="71186372F1F8436B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="tags" class="TunableSet" display="Tags" muid="EBB2F1A6621C8A0D" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F16B7A08F6DB11AC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="405C1EFF360995EB" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="46DC7CDEAE867B2C" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="B7B07E951A5CBE98" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="906D471911EA6E08" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="4DEEEAD59798B31A" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EE8B1EC49B37AF3" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="3CC2ED638AE72B91" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="70091520C1C25584" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="CF38098A91A85F0E" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="898C73FD31FCF745" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="90B7EDF06E979279" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="B12822A1F7B7C98C" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="E7ABFB9138FD2F95" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="A542CEF9525C405C" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="FEB570CD9F69D43F" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="9CF3C51CFD14B5AF" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="FFDF878529D41423" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="DA09397C2557043F" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="8BD0E202A12C1874" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="F8229DCD47A461B" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="83CFDD7DA5A08FA3" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="A84D5555B3038559" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="E2D0CAA30A005A06" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="CAA903FFB4275B2D" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="8D0CFE88EE0AD119" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="5C6D158987638CCE" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="4FEE4CC523614214" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="6D8716EDD3C99134" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="99859F2647F0E7FC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3F8DD0E72473B929" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="912D6143DBC541C6" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="EF2590BAC26BADFB" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="C63B7025CA0175F" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="18A3C13781D581F6" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="54E964D379D0D7D2" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="82EB7C16FB0CDC6" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D4CF4B18120BEBB2" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="D6A1692DC21ECF1D" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="87495D7B5AC347AF" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="43DE2B46474EC73E" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="E679167069A4267" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="CEE9C782853D5288" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="641CC366CAE54682" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="677F509507A0E2FE" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="3C51E1B121AE102C" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E16C2FE7737C9FE7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B3B03F0AFC7AD9AA" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FB50CF2BD3C4149C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B46C4ABA7CC09DB5" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="7BB9722BF6E13F24" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="16C9734AEA35F29" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="48802417D7707902" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C4FD5FB993ED18AC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="69C1773F365A52" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3BD8ADA5BDC49799" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6FA210FB8A61422" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="174541EB252D4C4F" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="195FD8772B066FAD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1D21F467D3DF02C0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="25AACEBF2E9BC804" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1C9F0105C1BE98C5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="605824B8E84CB72D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F60B445C72F1BB5A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="9228612C63305062" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="B86309A2592DE59A" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="2088B6D487BC5E3E" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F971F100AA1557E4" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="199CCCAF81B10ADC" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="FCD9B14D9A3499D8" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="25F8F574D5CD6169" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="23036B5B43976180" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC7635B890D8A475" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4D43928E9C236DAF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="EC54E5AFD6D75C9E" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="D5E5A5BFCF913BEB" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9F3B523BCF1C23FB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CD55F6530F25B686" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4217D3E3DBF0E7CE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FA71A48456CAF2E4" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="1214E9CF49F68B25" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="474D858689C34631" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D0DCA6A5F4079CFC" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A7E1F2FF9B5EDD93" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="14EDC7912D653FCA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="253B45E93EEACB02" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3F95FBEE32065742" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="94BD6031BF869CC6" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E33DE3FEBEE4D50F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DA8D5ACE5D4EE081" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D43CCD0D761DB5A2" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="88336EBBF87450E6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="79F5686403AE0F0A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="26D72E9F37443978" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A4449252877913E4" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="A6058D4DB1A9DC7F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="DB4E07DD2E780716" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="F635A5F3F4E1A033" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="E197D107870F193" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="66FBD03063CF3B08" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AE09F69C1E8D6814" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="E8FC328BB41B8A3A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="F6C70ED2E21957CB" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="6812BA3A02C8B738" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F0AFDE66531EDB4D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="4165ADBC28CD9FDB" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="1D4B622A7BC03B3A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="4248B9F04F1EFB3F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D189486DB99323E" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="5E3464EC2C8F8172" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="86C5C2C49DD89EAF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="39CC836A570FB1C9" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="53A6B7A01AE131D6" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="98AADA18C4609D13" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="475FE6C6AD809C14" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EAFE7C4ED080A9A7" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DE68C4EA2B4A583E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="A21072FFFA1CD74A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C8CB2D7ED1237094" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="88F59CCD14CCA807" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="F0CEBBDEF5DFD480" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="76E6F2FE4AB56F5F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="8891D7E6D633547D" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="AF88885985F53C86" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="58C1B5F32B2568EA" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="E2BBCE61902473E8" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="53E27C6C9DED8F7B" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CA947882089F37CE" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="5AB62982A77617C5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="E7C97971E894FE42" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="ED037814F64DD6CE" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="E36B3F351EA5D8A2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="9F2DE6C67520FB6" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="1CFB1A2FB1C5D754" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="7E121F5C95FB8313" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D2C52D712CE0055" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2D33699310006095" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="CB0B6F4B6BE0150A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="520AC32A053474B4" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="EB35E2269E7C0640" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="5196C8838D25CA26" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EC2D777BF1C19CE8" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3BFC1B9A62FF183" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="83C92C2A09C7A28B" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="44B5E898FB85B5C6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="372908D1538551B" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="75AA0BDDFFA116AB" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="4DFF6977F14D33A0" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="70AFD87BEE7B004C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2D6A933E01113784" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="F95A413A79C5714F" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="5B1E118A4AF180E8" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="79C162877022C2E" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="756774EDB9842DE" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="FCB1B8F63DA17876" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="4840DE7FED0E1B94" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="57025DE60BB6DA30" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4EAAED1F2D0CB6A3" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="5349B3A301E9F1F0" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="1577F1C48AFF2861" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="22A93A8D3C9ABAF0" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="763E25E8A6203C3E" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D1EB3BAE0283BB65" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E585B90D0E6193B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7252A197948CA144" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1A45CFFA7A0F1605" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="53A3ED5DC3DD33AB" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="95C6A542606AD1B3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="EA44B787C15D0EBE" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="DBD9CC6E58219E03" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C6C86C237F772E4D" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="3B89DE55735F5C3C" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="5D06C518EF3DE313" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="16027B903C309736" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="77C846A8C7740CB0" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="48F9607BF93A43FD" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9089994116D1F1F7" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86D167E1CC6F173" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C5811AE1BA10623" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="B01C86449660A6D9" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2806B36355CECA6" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9D81D653977793C9" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="3E5F5AD9F54E0BF" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="DC6BA292CE6072B6" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="39F4E06ECC64F13B" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="A8306C5B6F72A4C2" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="8EA021CCEB902EDE" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="B0596B43B7611178" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="BE196262D912CB01" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3ACED2ED4C79CD77" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="4DD82270348DE3AA" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="ADEA8877010BD36C" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="5D3A6EC2DBD856" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="3AE73961C08B044B" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2F8F3DC4846BBE27" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="965D94A249E282B4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5EA174B667CC8397" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="421530B5FF4874FC" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2A4629114A2881C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="4FF6DBEB3ACB86D7" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="37010A1CFEC7980F" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="4EBB629A6963881" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="1A536065E06D2517" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="2B629C2900126464" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="7EFB28B8D5B8D8AC" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A883C9328FCB0654" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="99A833FA2A646DB3" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="6E063F4E71A778DB" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="A8CDB9AECAF6B376" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="890F08FD162BF971" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C98C3DEFC89DCD54" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="EF7095A2ADF9888C" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D00D00F8B52D2845" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BFA5F8F889904861" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="5C44733B8F259C1E" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3053D603290A6391" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B7006367DDB5E9FC" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E252A25233822CCA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="4D4F39EF42B2BC6" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="69421528FFF641D8" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="CB5D8DEC3B095D3B" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3DB04386274EFFDA" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="58A4B81074966DB7" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="E35A48B87532E862" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="8C6408F1E032A0E8" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="CFD83CE415194D28" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="6137472ABEC70C7" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4C6EDB2E9154C954" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="860BAA810D46A823" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="6FF84102AEF2DCF8" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="3B322758FE0F1270" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="FCDD1510791E4AD9" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="9BD7847D97075417" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="47E05A11836D7D87" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B54E14D922B0555" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="4FD7DEF2086D85D2" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="4DA81D43FF99C23B" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="5BB92EA1702E6B61" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="AB9304017FF7E16" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="EBB44628E9904524" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="C6E13E0AC50471FB" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="1FA9FE9702C1D009" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="928E565CF1945012" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D5BCD3850B31C9F4" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="1BCB6983B7B28D7E" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="69D83C7C0AFBE004" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5683EDCE80909A19" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5AB4067904EE0080" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="657FD0DFA55DE08B" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5410AD1B57AC2B1" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="5E98463A04ED6D1B" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="35E176F3C0465790" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="20BC2E89AF6C6897" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F22480757F71D2CE" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1186B77D655BF222" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D30D0C9D9A1D76DF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="7361FF9511E5DFBB" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="3E799E776303C644" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F814939FAD25678" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="6BF78CF03A56AE4E" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="EC9FDC80F8C32E6B" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="64DC46ADC2D93AAF" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="2591BD064DC6D979" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="53B8D6E1663C3BF2" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="D12B978E8C8E4866" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="713BD705C695FC63" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="80650B233C965017" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="432E7B9B3FDDA201" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="132E047AF8767546" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="E91703B2540454C0" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="AA18A8B135109E93" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="DCC13C34AF257B89" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="F108293F9B3E6627" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="C46B6DC8EE432E71" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="2650C86542E211B1" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="91577C8D950461D" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="521EF822554C5D19" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C1C290F92A48A82" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="74F80BBA7A2A458E" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="2869493D53131B30" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="451CD22946F60D5F" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="71F6BA9A58442E64" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="7156E2A6B20F5746" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="B97C0C1FFE98CE94" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="964BCE198633680C" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="269E1665C677E3FF" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="A3F415DE9B0CD504" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="B477E0825F7C09CE" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="9F9729B87D99FB71" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="226C1754B00724BB" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="8AB94BEF3CE8736E" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="74B6E8BACD8D0BC0" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="28AD48980C206499" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="41665B9D7715B2BF" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="9100A26A0D5AE1EF" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="311FF9207647363B" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="26FC6CB35F43F369" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F8BC3E81C2A5886F" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="99E49DAED05890C1" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="69F54012C254DC47" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C1F55151DA8A1C8D" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="FB9C82D83AFB704" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E20156AFBE31C4A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="548F347ED904699D" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="D3734DF82BC50379" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D4CCDA217748119D" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="8AF2E177F3C3D0C6" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8D301F62196CCB5E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="3AA07BF528F4D9DB" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="B8F949CB4A324E0D" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="94810D8B22A15B3B" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="5E43C25BB96419A1" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="67913722103699A9" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="9F48105A5292BECA" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C62B30E06F75A3B7" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="327EEEDF81761E9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="CEC45145D4C17CBB" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="2083D17BF0BEA853" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="A9804392B177C2C7" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="E2C8BE0B5DBE791D" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="DD56B42226244CA6" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="D3BB1BAF187DE8E2" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="F50CF1EA0679EC6C" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="88954224A69EDEEF" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="93A2211AA6D742BE" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B68789125D2457BB" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="D9FF700DB53A7B92" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6842A39A1CDBFDF" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="DF6B44354E7D261" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="A486EAD11EE3E679" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="96A9AEEF09040223" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="F06FBF541506D78E" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="CC24E7AC5BD0E0A1" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="142EAE046F29BC4D" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="B4CBA38C655C9174" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="6E162D6754B25152" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="97451E5F9CF00400" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="BAEFC4516E474F62" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="702FAC117327550A" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A2035791F3E1716F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CA916D3783CF7A45" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="CD4B70E8CB2654D7" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="46EC2176046AEBD2" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="2E7D0986422A9487" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A09818508B676E33" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3D7B1B330CDDF4FE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="F545BC29F30A6989" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="E9767658C7203D67" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5333CC33D81604AB" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="174079AE37EE27BA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="3876DE81A426418F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D28628ABF59BC2E8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="6263E153A8B228FB" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6CE24D30F3F565E" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="A663494C5DF8B5C6" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="66ADF008429409BC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="F47D0704E1DE8867" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC3271135402F624" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="E18999D678ADE0C8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="67501E9EA6CA63A5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="6B8AE7500C07E64A" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="9B8C493357FA83E1" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="169058B1DA961C6A" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="F99A50FD1C8F6F1B" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FBB34B8418224A4A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="189E8DFB176A882C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="BF3D9C7EA46C15FA" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="41F49E1666860CA3" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4D7001ECA95A83C2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="11212DFBF318DFDB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="3789348C01286856" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="E24A6BD84DDD6A2A" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="D4206BE0D921BCE7" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C12DA793C8EE67AB" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4DB17900386BA0FE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="1BDFFB05F1BABD76" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="2D624021B7F1F69F" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="B17B6D44E5AA5323" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="E55857A16DDA4B3B" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="52D0A838CE2DB37" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="DB3E057787589074" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="35181DC4F53DAED3" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="83B2CFCFFEB43EBF" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="1770B90086D0364C" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="DEEBAE7912516AB" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="28191E634427C5EA" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="C798AB340793575B" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="10EB6D2140F218D1" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2B21A22634DCDA0A" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="4894B54396BEEBB5" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="61A5D3203648A533" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="1F862850E7E26405" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="4768F0154B92C614" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="926438DBD78F2C20" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="C97A84A5798718B8" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="80247AAB269E167D" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1AAB924CBDC366F2" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A5B8D88C7AF51226" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="CF4644DA283863D8" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="24ECA79B619D55B9" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="291B781FA291A52C" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="741AFC33963047FD" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="71EE07FB0EB000C9" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="B09F3D1EFC7681AE" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="597109CDF0BE48ED" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="116243286B17753E" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="B8DF37D184C11AC" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="D3E663087D9706EA" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="2C52C25BE80BC1A0" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="243E892C08F07FE0" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="D709A5A1098C8561" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="F8228CDF4141825A" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="AEDB31E65328443A" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="69F96EEB86B57A99" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="FA5F182B1B031A4D" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="77DD94217135A6" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="FB022E19ADC33B22" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38B840FDA3F7F431" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="C5B5B99FE0BC6187" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="98A9AC78A18AD443" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F290B56D75F0BDA7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E41DD45B5D915C21" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="4BF81ED9FEF55241" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9CF15C62B896E790" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B4DA8DFA44B9DA5F" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="EDC49A4C93E6219A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="1FA451BBA62A9B3C" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="6B1A68445A9DDA6A" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="2358E7757285785" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="9FD7977B97DBA634" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="EB4A18744CE2437A" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="79825564A7EE7B9" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="6597545899784F5E" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="7DD8EE6B26B205F4" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="75DC97B4BB4399BE" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="20FEA47820285133" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="975A252018A2B871" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="52E6E643BF46B7A1" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="62CB255EBD061451" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1EF0C6F491A492B9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="B5B7B32A5FDF6387" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="8CFB80740711ED40" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="12745E0D2D4BE0D3" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="B223D6C69BB9D2E0" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="807082E303B38743" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="46741390B5D44D0F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3B0B2ED692C2A026" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="FABFC170C234424F" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="2E69C217CF481175" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="D74B6CCED29E7244" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="C854BE7FE90AED35" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="B4DB91062244E881" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="71694F63521FE0E4" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="EFF96162636AB874" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="2D55A97A71C7E91F" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="10233CB1CAFBE7A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="BE4FF6E32E4CE0E2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="EEEFEFD44F1FFFB0" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="8C3979D481256480" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="1E38746C04A1B9BB" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="3011EA4E718ED7B6" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="23FD5AA6895E643B" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="83CF00507A8F2D50" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7065B0E0AF8A4B0A" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="E0ACDDCD37167BDD" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="3F57B61731763FAD" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="A480ADECDE604463" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="2FCE67D6BDEF325F" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="43B443FEE090759A" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1A18506BAF0BD20" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="7BF5D29BD8112A77" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3135E7A7E6E764F1" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CF3CB83363EB4B48" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="71C15C041D03215A" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A62F7A43F2D21788" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3D79485969744324" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="2DA63EAE17146662" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="70CA57196EC16FB5" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E69A8EF5A17CCCCA" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="289D9B49D3840D32" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="58E89A6F6353BCA5" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4D5E95C9FA2611E8" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8FE51ECC6C8DF93E" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="4E59EAFBA886492D" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="2AC694218DBBCFB6" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="BE9FF0E678BB763F" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D69326BB76E0C19A" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="889A1C3A6D1A232A" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A796734BD9152F86" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="BE4F92B92117B0E2" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E730FB6FB40DF615" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F2E7042E5F6D4085" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="E0401CB372C509B4" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7B504FD75FBB1E92" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3105DD0955359316" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4E8D15A3611E301" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="38468DC5687D5AE5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8E6AC95F29ACF551" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3449980F673213B7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="8054FCDA5AC6BEA2" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5E8CF6BAA4FF8621" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="39335EA5F31961AC" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="60A3DC8656378A00" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="67A4C1E484923551" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F26998BEF2D5ADFC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="638597D69A0ADC02" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E7D5773AF5E317F4" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="98C59922B75E9D8F" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="9565B43266117B72" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CCB706A278D2B8D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D86DD324280CE5C" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6BCA5004EFD8446B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="A6FFF206FB657C21" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="A2F40496145B1255" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="25862D67B85DC7A6" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="6C4D33BFBE67B054" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="44694EA47C11C944" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="2A3308BBEDD6E909" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="449E5D8DA414D393" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3758D618350516A9" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D87BB600F663E425" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E3004C07610EB4EC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="88DBF77F6B43A286" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="41466370BBD69CC1" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="77D67FF2FC780CA7" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="3CF9C230C0658B7E" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="2E036F084589A12C" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AD1F1EA51C5E0907" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B29B432E1D3E9C8D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C6F0246D2FAE73B8" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="6312651D22EA785C" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="303176A1B1B17009" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="5A02C625543BF215" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="35309D4F7921AA83" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="F0020EBBFA619340" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="D4EF161044D8D00" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="5000B46E4F6DC18F" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="8CDB52E761BBE6DC" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="3A9F54EDBEE04F00" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="57EB28784841EA83" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="CCFADD20753A250A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="DF57132684482386" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="36164171DB3CF2A2" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B28351B79CD52356" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="4D19567957F7519F" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="73AEBFE9258F5028" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="F20CD4A093B3A004" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A5D53B2A8D37D4BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="FD5456B7B2A09840" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="F3AA8B218E8E7693" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="515913D7CAF27DE9" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D375FC21F281494E" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D8A7035327058881" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B455B786AAA061D1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="680AD989C162F923" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="3010EFBF7F392AB3" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="1133A7BD54F47C57" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="C5ED731FB956D646" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="9476A9778181B25C" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="E28E2977576923C4" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9DC57C34E35C4523" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="14A0F5585C5FEC61" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B2476FB3DC0A0FDF" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="958F40070DE5358B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F7FB1B22A609D94C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="C07672484DAE8892" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="40F6D317998C6597" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="DF4D4E67CDA0919E" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="4E29FEFB2D035C25" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="29430A25F9CD16F" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="7722D48E4F318D3C" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="93650F0EC006E347" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="919A5CDAA14ACE78" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="42783926A41932B4" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="B3EEE077E6FF9A00" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5A38FA6492399D4E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AA19BBD9D0626D4C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="2327594CB42191D0" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="D9E3154272F38AE5" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="DA8638631F51E4D8" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FB84134350B7289D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6D0C9895EB12E588" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="46893AC02445CDC5" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="3A4BFA6F13519582" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A9D8B0B5741A2953" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3EC206B22F225AFE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="51B4E2A24A72F3E6" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="7FE9F852235B9B1D" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="835CD6FE1FC1A5CC" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A7AEBD2EBEE288C9" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F4F42E88E171807C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="6CD3B0CC14869E82" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="43708EBA5B2AC5D1" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="239297572A14A4C3" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BB3AF49A7AEA8087" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="170206D96430D919" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2B0535FAF87A76B5" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="110BD720DF6E9A0B" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="3F963D2173BD82F3" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="3DEE91603879D154" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="F8728D73FF840D47" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="F899B0AD91314BA2" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="C73F40DABFE2BDE4" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="4579FEC01E2A45A0" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="15680B295458DF5F" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="F7E161026460E161" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="C1C90207335B105E" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="A2BE93C2F4CFF46F" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="2EAD9CE64EA8B52B" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BFAD282D6A5AB658" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="459869EF5DFD8DB4" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="E6C5AA4552ACD840" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B09059B090073CA3" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="6444A1CB36B6DE0C" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="40216851E7721971" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="8EAA7E3FBC01B71E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="40F7CEFB396C795" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="531A6461B83DC96D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="27AB539379BC8F23" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="676AF51E3606BC3" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8D6FF52F0A34DF" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="620BE8AB51A49B8D" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="EDE51E989967E9B6" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="52849A668D5531DC" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="7DE6A5ED1494E935" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6C5E14AAC4B09D6A" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="5CB8DBDBB7BCB340" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="637659AC55C4A747" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D8D09C10BCDAC40F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="78383821A69308F2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F188FF5137C1677" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="4CCD80AA59243662" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="43B7A0F9637E8112" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="A2C23E009B7B324" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="6A739B27AE77A" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DACC11B718FA19C4" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1DAA4B15EEDAB770" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="61B619CA1A8FDBB0" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="ED5ECC1F7630D949" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="76CE5FF56F1188EC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="D5A66373AA36D5B3" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="D31FE4B932047921" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="824FB2933382EC37" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="7CEDAEB148A53534" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="9E2384580230D43F" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D20E164474CFFEFD" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7FC7AF50F7E064D3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1B3FA837B9EA0F5D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="AB8324E52EAA3F07" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="48BFF4F5C444CB7C" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="9381C90906586057" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="1F93704E98A9F42C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B2CA608397A0677F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FC93242E08C6871A" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B346E7F96F41025C" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F37E933F31C68B8A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B633A4C11B69A444" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="ED1E8CE207311AA9" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="58D75A3921BDD04D" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="20361AC0CB2F47B6" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="B103DE6828AB2F8E" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="53E4ABA01DBF3DA8" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="3960E4DE50C25F7D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="47172E6211C340CA" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="67FC2C65CE5AEBBC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="8A8EF3B5EEDD301E" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="75BA3C200BAC9EE1" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="378D847EFBF60F8D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="15D4B1FA32B77AEB" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="777D8EF881187C78" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="710CFC23438F2B25" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="E517668D8E1B2002" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="6DD815A317F27BA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="EBA88487B26C5102" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="A0EA328BA57BE89F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="C8B385BB57932DED" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="913A71B1F5DC241B" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="FF8D60F50B7CDD51" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="84A4BB251DF8C6DC" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C1CFD836C3E2FE2A" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="38404C62EBE7F8B9" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="10F1B1B743F496B" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="64927ABCB6ADDD59" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="D0BFDBECC62E73AC" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="DC3AEDFB58ECCB0A" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="49DAAEAE31A78B60" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="A649DCAF95FBD760" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="4D2AA573E79F5FF1" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="63BF496088F15E14" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="DE3918A03511C8AB" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="D360E7326CF194BA" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="738CA428563D163F" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="992A9AB3870466E6" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="BEDA89D825E8D419" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="137D7AAC0F706CD8" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="7D0FC842DB21AED9" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="95319E8D99542C82" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="79F34DE3D505EFD0" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="55CF6029C9E9FA93" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="44707C5FCBD03562" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="A4EA149E3CDB0E0E" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="9B7E8EFEE51716E8" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="34062800CE5454AE" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C431C737CF06A0F1" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="DAA00A730DFE3658" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="56006534675B9591" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="DD08A8AC4E262B4C" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="C2EAF8663BDEF5D7" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="1D5A72656108A5B7" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="91F9681F4D7ED6EF" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="74A885671C4BE78B" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="E5F62196E349F518" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="FBE2E4BD7E522F05" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="FDAAEBCB81AF9F21" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="D94826BC58B68942" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="71110B8A68DBD193" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="D240983ADA8D05C7" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="545B3360D27B6A9A" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F59843AE4E0D6E70" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="396C66541BAFC611" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7AC7772CA88D9DD2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6571DAAD450CBFAB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="297E7130E526DA7A" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="6D9D547864B92CE3" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="52964C28596747D6" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="BA8F66659613D64B" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="EBAB5B684324FA80" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="439D85F9F0CC61C0" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="85D9E1D45A4E83B" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="25982A1849AC86CE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="A2ACB0C4C5F809AD" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C954AE87C2A30AF" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FC507FD14EA04FF0" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="C5FDA564E09FB9AD" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9F0A3B4F5D45DA03" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2481FFC9D88C35AB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E0C061F9EB1A4DB2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1E1E1F76D3EBB6CA" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1B18D513C441FABC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="87D94E1EF5865E6D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="6D7BF40CCF97E352" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="E523FAC797FCB661" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="4885D632AE516D06" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="45971FE7133E6201" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="52080CBFC0B23BC0" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CEC1689427E205AB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DB8311E503892B10" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="CCF077693C59D01A" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="666A5C3FFB82D62B" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="69631F959B2274B0" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="5ACF87C03913E45F" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86AEAA922CED350" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="1069DF26A72D6D81" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="468CFD25F0F91A38" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="EC4C316DB12729BE" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4090982CB6B1A4F9" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F7269CD4E0C22C47" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="5D224D08904715F7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="41DA191F373B9931" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="B4ECB1EFDAE5E33B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="F6DB6AFDB58240B5" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7B31A5F44D995C0" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="3F88994A6459C19A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D79C6410383CBA63" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="AE051E74F0B1BFED" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="4DD284EEB0C5EA32" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="3503E525A8554A12" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="2E182BCF52D77EF7" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="1EF44E8D9321BFD6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="D881A42B2EA6DE93" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1368F41A34E3B93" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3857722F90D033CC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="FB30F11C77E62DB0" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="9A8AE844EF182C62" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="EE66C17FA0026265" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="D6A6A1D3D5322A78" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="4AE1E4D5D9497593" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="E037574D9DE4219" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="A78B2EF8F344F9FF" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="197E7D0CEF73FCA" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7E9669826D1AC453" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="9E848CB020890612" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="29B59A3E3019B612" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A1D10AFB7B1182E7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4F41B15041687F7C" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8DB4618456AC049" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="85CAD03C90911C8E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E1C1FBA79DA45BD0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="C4C2A9F11B0AEE11" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="198108F552765D6B" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="FAEF3CB0CB6D88F5" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="AEB4E883E2A8C0AF" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="937D621B3F748838" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="2A7B1B6AD006B329" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="6BA432A8306BF993" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="EC9B348D1F9D8D7D" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="2EB4A2002BA73175" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="DA1C446ECDA38D9" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="913F4CC12948B6BA" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="B53676F3EB14BAAA" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="10CB16B6B8B73691" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="19FAF767D2AF434C" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="A1FE2C968A63CC0C" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="7FD812B57F97B4BA" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="3CB5BE4C1432A6E7" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="854960FDAD3B46C9" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="E9802FB63E218738" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="F46EA469D204FF01" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E6850ABF4A4373E1" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="F2A62EF5DF33F9AF" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="3A3FEE392A266D46" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE61101A1BDB7820" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="9C5A82EEC852E4ED" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="5B90A13C1860DE97" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="377CDE7AC03AB0C9" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B2784CB675629D35" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="7B1213CA7D169E03" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D66B1058E7B099DD" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="B7B5568C9A8A211E" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="AAAEA60F9EF7AD72" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="B859CBC150C2C51" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="4562C5906C48AB91" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="2B4B755218B58406" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C1FB23650BF71B22" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="F5361A0557FA4123" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="81954555C89369C0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A4B32BD30F210DD4" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8552ACA9F25DCC19" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7A157DD7B285B75B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="58D6A577BC1DE8D6" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="736B81FE590F31D5" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="6C244FC9C8AD6DE9" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="BF4F3A985A786F58" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="1A9251ACC7899642" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="3F77260E64B25175" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="FDE67F3D7F03091F" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="A995C93D69076234" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="333C18052566796F" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="3E9AC130A3A4C415" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="6CD6188F8CFBD9AC" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="DB5C43C8370FAE6E" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="41475BC033D06B78" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="14707D6118D57E1D" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9F333699E5530199" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="AE05BBFE01000ABD" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="EF9DA4FDCC56F88C" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="1AFD75837BA6B244" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="C6173BF82759209A" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9C70455BEC4BB40A" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="DE94EA19E4BC4B1A" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="2B60D30EC15C34E8" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="293CF07E2C4DFD38" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="8A0937DD4439A8FE" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3C2089B98856F51" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="567E97D51433C21F" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="9ACCC53E6D410465" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D50E84D5B27BBAE7" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2BAD283BB384DD7D" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="6B6D9917F172556F" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="84F6FEFAC417DFD1" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A3287F9DDFA2F7C" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="2BCF5D8203209F03" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="8D2ADD6EF4001B9E" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="1FA82A74ECC0B3B0" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="42AD28A6B838CB14" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="5D96478A685826FD" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="676B4BBAFA0139A4" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="C1DA577F9830C3E4" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="981F235D17962E58" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5E925753404856DE" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="DBA368DAAC8A522E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F4A6B3F9518A446B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="DC73377798B63D51" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1BF8F16CBB2E5E76" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="699942799631BE54" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B30EA30EDB30F5AE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D19C4AB721A16C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="33F36AC46BCA8177" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3CB97BA80D428194" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="2EE78FE809D975A3" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EB48B06DE7B5D97" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="10390FA5305CB838" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B558828D2D4B3606" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9DFB99FC925A76CA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="101569966ABBDDE4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5A89750279E4A73F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="57C3F295D764121B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="1CB190C247B12795" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="EFD8D1503C9FF563" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="47A407E64F82E74E" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="17FD6D34D713B7CD" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="D3ACE43738892A59" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="50673A73CEBE6EE7" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="2762242429FDBFD3" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="44EA3B53E29CA8FE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="298A94DE8B9DAD0E" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7F34FEB7B3DD48F4" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4BA7E3086936D499" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="D423AD70F2F7B14B" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9CC1C3D6ED779531" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2901F706EF82740C" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CA5DF8C007F5C2C8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7310F16CDCEDF033" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1E62481C63186228" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6373A8245D2632BA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="B8366C852189CFB8" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7C8D546AE334DEE8" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FD8DDBEB11B0738A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4A83ECE0228F8C2E" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D1294A5DED73A565" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="42D31F26B51A303F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="635F5A80B6392A76" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F07FDCDB80120BE9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="4B1EA0AAE6F3CCC3" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="BBE72C8D2A203EED" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D9D23445C5FE6E46" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="357C579D90C56630" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="76837FDBB84D792C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="AF081B8DB665A0AE" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="76CDB193F7D984F2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2E307DCDC094A421" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="8E8940B25D8CC8DB" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C533B6C522924238" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BE953B10A7E6594C" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DA5A066D8DF84A98" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="488E9EE54F789B35" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B3F307AEB130FB9A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="216481C53706CCC7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="34EBD31D3253452C" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C970FD56C8C5ACC5" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="90C8DE66AEF33DE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DEEC3E240AC523E0" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="194BA8EC04BDBECE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1AD6C4841BA742D4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1F85659C1A2DD279" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FB2F93E2AE2693A6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="CF33934EE73DA098" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="ECB46AA0D5C344D9" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="FF99435FAF52787D" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="57362A818FD0DA1A" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="A895B689A01BC617" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="leave_startled_state" class="Tunable_LeaveStartledState" display="Leave Startled State" muid="2BCD090FE03D6127" description="The state for forcing the the vampire to leave." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="10D0D55CFAD84F13" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="162D87A5E89CBA2" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                    <TunableList name="affordances" class="TunableList" display="Affordances" muid="D3166272D4F13E82" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                        <Tunable type="interaction" class="TunableReference" muid="D17BC8D17DBA364" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="tags" class="TunableSet" display="Tags" muid="BBB5A92C74440A0" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EF429937C744A0B3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="A7DAD8133AA4CA07" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="494B1CA9C8E47278" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="A73EA4F28D7E8DF7" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="E71CE32D875B9792" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="C30AFDD42D548DE" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D1FFCBB1292E00C" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="DF4CF36F94ABD111" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="EC6879CE237383E0" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="9B0A8984B0029275" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="AF72D48CE3A754E5" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="CB859EC286DE4849" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="3E90ECF4662C606C" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="1F5E00C1C515D04F" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="C3EC235EA09D1AD1" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="CC9311DA40686F6F" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="4967796FD4FA2E35" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="BED528C5165A4B4F" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="5D9C82D116063232" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="FE4977F6E973044B" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="94105BD19CCA9140" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="BB1A6A6010054591" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="D84BC1A505745CFB" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="D01DA0066CA541E4" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="3ED52129CCA703B0" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="C5B95D4F7E9E1AD" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="6D2FBD37D27AC133" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="AD8B0BD2E5053F71" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="75FBA4B374D8EB0D" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6B0A9E08C04AC77" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FF627771D8E527BB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="E57FA81AFD993E54" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="2605E0FB7654080D" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="435F1F2D448F9731" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="8AD39A56CFD1229F" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D489D35F035B76B" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="D1FE83F55B447F23" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1EDBDC8DB0717692" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="B05308C46302B21" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="9C8AC25DA88FF9F2" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="2B17193B061C6E67" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="7F30785BAE13502C" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="BA89831C5F48C26E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="A0702E48F3B1DEA7" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="D48011038DA04355" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="56C60036467056A4" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="16B023454D497D82" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="311BC71937FFD4A" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EBE02D57A096F264" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F6B12A4884B02095" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="145CD76C2FBB8D40" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="45513FDE42BD330E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7ACB2C3B14842038" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="67B1A73803B4EF22" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6517D668322BB1BC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F614D1DF2BD005A1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A7C8B937D55880B3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="8E8022DB1D72F07F" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9D5B33F4B433D899" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F04266D6341B28DD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="75F0BB1BFE3CA70E" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8C1E77C7FD0D3EBE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4562AF3347FF230C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="72B889FF33527BC7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D7C5FDF985811EB3" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="DBCF70E8FDFA49C9" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="3A0202F1468075A5" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F30AA1393FA2E6" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="CB36E1BDF3F4EDE5" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="1D905CBD05549F1D" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="F8B97BCD337578F4" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="61B9F08113961B46" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2D357DB145FFA4F5" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7B4D500A60F14B28" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="160861C0B9D5F05B" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="B4C57F791D62454B" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3F2D9787765E19F1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E54D959AC8065122" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D272EE6E3A5B1992" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CA4CF05A687FDE0C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="6E7A3A0127325E95" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FA4875B4C6FBCDA5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DFDBCEDCB57578B1" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="47AC8414800F0FD3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E5411A4B6B2824A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3FBF6D148AEB5FF7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="739DDA58AF176F4E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="1704527C609ADF42" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="89CBBA4AB6A7FBBB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3345F586FCC7B5E2" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5574AF817B2A5D1A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6E3A9CFE37CF369D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8F1588A4488BEE9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="ECB7A62BC172EE82" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="888CDF0057C30CAA" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="87FEF5CB127EA694" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="9F51A093D4F34D1C" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="4AE2664756F52D15" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="DE11044EBF9E35AB" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="E9C5564A8F0BDAB2" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="382B330D2852C06D" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="1B23E05E7660C955" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="ABBBF529A8926F73" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="9FABCD986B492911" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="98DDA9AA13149C8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="D7312EF15FF9DE38" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="32DC2CEDD74253DD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="9E1C7D6ED2871610" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A349F8EEFE722921" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D6A1CBF44CE39550" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="4CA0A64317C2D6F7" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="83C515A3273872B" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="FCEB7DF742F4C006" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="6C7B33B9A3D04F93" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="58FCCB57378298C0" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8A27872A45D2402" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="9EB2C341BD2AF926" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="D93006933D08EF6B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="545FC9E7ABF2D2F5" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="545D555275CE159A" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="EFDE47A5FC15689D" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="7E5CF59C456DCBD" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="BF03526CA9FC1B7E" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="1311BAEB44F29642" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="41E6420843D27F10" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="9164BBA8424C28CC" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="D9D589D2956D993B" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AAE4A1B4EA502536" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="D2871F1798ABF5F8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="778510B646846BE" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="AC02C41586B24369" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="2424E8BAD2E5978A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="36530CACC4A3C1C5" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="2231DC51B498B8D8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="3B7F001CAD16CAE3" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8BFF9CD671CE5698" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A4691FA3B1F69240" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C44227BD628A34C2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="AF0FD10F5FFC0902" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="9B3116DD92602778" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="9871CC6FDBB77CC0" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="FED754C10EA9711A" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F9C865DC65CC152" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="7132A5267713E849" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="126B69D53EA61144" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="1899D94783CA5A2C" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="3FD733DB04EB3763" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="58E086AF1B460693" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E52A6D66EAE534CA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DAD6211670D2969D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="EFA2DE018E70ED18" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="F9174303D434C0B4" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="FDC28EB31E95704D" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="4FA34C40511EC538" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="3891A51BACEAD0CB" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="3A469ABDC8DAEA17" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="88E0A9AED408D338" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5DCBF724285CED7C" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="784EECFC591018CE" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="E136E8C7D83A6484" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="599F7ECB57CB4D58" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="E28CF209AC0C776B" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E63E863C0AB01648" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DA4C2D4EAA623129" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CC68D9808F78EBF9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="63C50567E0012AD6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FA6944284550F68A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3CB6B0E8F38399AD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="3702FBD1D1962333" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="823A9CD4E8629D60" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="206390A6A2744A87" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="976D9518733E2F75" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="210228F0B0CD241" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="F6FDF9841776114E" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4DE05327374BF47A" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="17DE9F1AC99E7D8F" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A2E09F884BC9AC8D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="85BE840707AFB5AD" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A0C691535B5145BC" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="61BF8D0B749A3FE0" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="63CFC349BAE5C081" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="5E0969B7F3B59004" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="3D56C52B1D71C341" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="CF9A148DFFC8A101" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="83DD113CA80488EB" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="7E04F67DC91A252C" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="69EB13ABBC3FA7C2" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="2AA474FF036E9BA5" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="71404C8F524E5F11" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F014635CC9AD1062" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="936A820B1720B0F" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="53BAA0F40CDB626B" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="3B98071610F880F7" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="31A422E0F8E126C2" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9B6DF67C484C3021" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DEA61667BD1A0F79" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FF38C2890468A438" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2B0B9B77A00ED40E" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A4A7827CAF8EADD9" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="BEA06A765C85A30" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="D15E01B1B59E78D3" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="50FB9485518EFBDE" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="AD706A0B340BCBAF" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="3A4971844B26FB42" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3CD5D06B18670406" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9500155280B331C1" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="677141D05826766F" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4B2763AE70481899" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="6DCCF9D9D5EDF889" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="7E13B894C4F8E7CC" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="59A20E3BF2A34594" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="48D9A4F4BA1726A0" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="48D7CD6F43D8899F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B0C2598289BA522C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="5EBC2C961B56DD00" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D532D2F421842F9E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1E0DA488B329C34A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D5E7AEA24FD4CC73" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="A62D3C68968ABCA" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="DD60ADA50BA0AD46" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="C9F0613F5C4AC0C7" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="10C4A38ACF5B2CA9" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="66EEBFF5AF098D7A" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="ABA9653E37A28296" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="88F934CFF723C467" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="39DD151671670650" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="ECB1AADF148CD073" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6DDC85FE1A43C910" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="9D5D57A46E894912" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="16BEA7060E464F73" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="70848BA9DF936036" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="EC981046E62F27CC" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="A31CA9D2D8DAC1BB" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="309480F0144D140B" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3FC9BE793ED0479" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="4538A5643A21E39D" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="43132E8A411121BD" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="BA0F2497CED116DE" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="DD233FC19CBB1BE7" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="FE85C59C493C89C3" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="322D4B36DFEB790" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="F00FAC636565599B" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2A1D068EEB9C82FB" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A26EC9FA3BA7A965" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="546FB4E88F2AAFF9" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="B1C18A40DF7E993A" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA6047B80C62EF4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C4297E80D91B2D19" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="97C85782C0358C26" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4EAE362DB0B96D6" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="321430FAAF1E4FD8" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="970FEB0310895933" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="61EFDE4035CAC5E6" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="93AB5B3CD2AD589F" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B139C05E7231A74B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2DAB32FABDE09AE8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="92DA3D3CC04F561B" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="C9A833F73A1CAC9C" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B1C8323F6FA86FA" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="664DF850D82F21E5" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="A81EEFCA98DD0D19" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="A14635109B1B073E" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="2574CD30D77F479C" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="E9E205D86EEB82CF" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="213AA1476FB7A0AE" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="7FB4DA159F6AFDC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="1305C7872497D1E6" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="1EC184FCB9B9E7D7" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="FDA028C7A799D79F" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="D05565C981354B05" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="3010A0422A60B2EC" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="2DE77F36F3979B63" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="E563F40E80AFC980" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="4D495E978D9522C2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="67EEFE40536CDDC7" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="EA41C72B88F21137" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6C0D1D486B66B32F" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C400981582A3691F" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="E1627B6B3A6A73D7" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="53DD6D1AD24CAC17" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="48EAD91A6ABA349F" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="12735E580DC7990F" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="8C98D040F823AE19" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="DB12CE0CC3738640" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="FBD95A48AD3DB406" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="2F0BAC03FBB7D1F" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="B77D9656A9409AF6" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="B42E72A23421E8E5" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="BBF052B269D8506" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="55070870012D73A8" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="3DC984BED73371FE" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="C5155745A9DBF95D" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF9B1078FA0DE168" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="52081D4E780821A4" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="DD6CCF39EBB918C3" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="79FB978A2AFF4604" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4F41E50E1D08CCD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="8283D4004B4024DB" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="301B36235A75C3E9" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="ACD4D5602B591F1C" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9BD53AB3ED44AAD" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="96B423B3E351C130" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="97906F1E96655059" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="78B565D28DF3FA17" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="6870C98111DF6C0" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="501854C745F74696" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="66A7A4B226D9F9DB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F8B194F6D6634F7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="9D9353263C7D88D3" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="605C79F4ACF96CDF" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="930BF5EF43A754EA" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="9108731DFB3CC36" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="8B7E9DCA568570B0" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="9718D5BF06C34982" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EA1AF02AB5CDBBD9" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4E8E1421EDC4267E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="CCD53BCDFD4E4E0F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="46548E9CD16250B9" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="5AE536C61137B39B" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="4EA9DF4C1F868AF0" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="CA3ED3AAA663767F" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="926EA37D2B8B7983" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="E0E52142F1A49639" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="450C35F0FF5A72F8" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11E0A267A5BFC336" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A59785E48406EF08" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="2062F310F95BEA0E" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D54865F75E538AEC" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="D6D8C32275F9B919" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="2371A2FA4242C2C4" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C44883A5ABB61800" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="5506A5C5AE084C1F" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="138A5D7BAEB95720" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="15281DC5DB61B838" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="1480C7D04B1964A5" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="2B81C3160ED67FD9" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="6542C713401346A8" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="5EA5E4DA6928EA9E" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="C88B83A02234884A" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E2A6C880E1DAD8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9899CB9E3B9BA0D1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="9E3A08857F8EA4E6" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A883A3C463DCBB" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9C7C3B36A427F09E" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A57694AED46F55B0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D85A11996978DD8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="7DA63A9817F4E49C" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="B2637A9979F8B15C" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1A4FB165C015F871" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="7B931B6972480F54" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="5202CFBE082E9F3D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="234195ED1A442679" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="BF51ECC67A3A830F" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29DCDC4622767E4B" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="54459653A2FA986B" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="E7B99D7409739C80" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="4A58EBCD7706884B" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="285E6C63AA39BF6D" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="54A258843CCE0409" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="BF7FFD5D486C0B53" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="D5190E171E4E3030" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="B3F6B57B3167AF16" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="878517D9FB24ACB5" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="99F2F93218FD3552" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BD9C0523D49F2551" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E727ADC0738CCB82" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="9447ACC4D9FD8F04" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="23CE1B2473B3608C" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F484216E3E63DF6D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="66126D631B79779F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="801BFCC5919F50D" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="C9042196FA15144A" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="C6B31C24AFFCB72B" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="2BD786C4395022F1" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="256ECB37522443D3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="22C2124E2E6CB0EF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="BB844F43E29DDF33" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="B1BECE9BE01DFA91" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="75F4BDDF69BB921" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="5FEDE794618E7A50" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="196850C7D178E797" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="FD687B31B28FE187" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="534C44FE7CF8E6E6" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="83CCB926E0D82BD7" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="1035B97C05A3D22A" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="91EE866DF578FD0A" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="B5BAC3ADAA346697" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="22E3BF6350E6A868" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D6428E3AF5B38810" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="CF87CEDAEAF3844C" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="2984000DD1D4B7A1" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="A1C30CD472FC09EF" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="FD8E5329669BE35E" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="261305161ACF0B7A" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="EA78D38BD463EBE3" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="3763255CB86CB28" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4636BB52BECA018C" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8FDB9EFC2ACB4780" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="5381EB2127DD057F" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="576917322C306803" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="110CAC683A33DD0A" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="526677FFEAF7BED0" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="3B8A926DB9068D3A" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="6F33AD0BC3C05B76" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="38284DB2698CAA21" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="F24F6C482096530F" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="975E022DC9767CC4" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="AD13086373C7C3AC" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="41F93D8CDD9778E3" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="43595224F690DBD4" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="BE2F99E1ECA03A06" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="1692E5FEEC3BA668" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="4A7464B962E91F05" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="F363D10452E48B05" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="C76B578864FECE0A" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="6FAA533F5FC8D0B0" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="996721876176FBD9" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D89C3D65E7C998B2" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="1367AD1ADE776E0A" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="563C0A5B1A2A63F5" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AD5715AA5CB5E044" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C5990BA541D7473B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="FB1B4E1A3D000D29" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9B29974F4F0DFAE9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4D0722F558795D6" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5E30EEC63132C2B0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="F60C47476AF6C13B" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="CB086FC279D8C75D" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="892DF050FC7880F0" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="158A4FF66D3AAC2" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="B9AF46183BC40D1B" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="592D87D21DF37D57" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="7C939417D860ACF5" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="2A1C05FE8C223798" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="FF5E7090872D0DDE" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="19FFDBAEB706D456" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="FA98A9C6A55559EB" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5977F23EB9245173" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E5E0F618BD6F7AB3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3DFC829113569FC0" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="9EBD9AED89FB6BFA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="FD7073121609A8D7" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="5799E3488FE90149" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="FA1E7CCFBBFF7EDA" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="9A2F20BCA719BE51" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7CCE3BEB625BEC89" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="4076F457E333CE35" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="BB19CF22FA13E0AF" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="6D579A46E337DB3E" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="46CA3C9CD3E09C1" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="7A0C3D4F65A13D0C" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="4B4E5741E7FFE29A" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="3983685F5084216" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="B86E0A25FD2B6CFB" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="845A3AF9A0C97E68" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E79738A732A62B76" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="27B04B8A510348F9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="2971B5B534C978EE" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="8A743755736E4620" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="F959096B55D8711C" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="8D9659AFCEE2B71F" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2A2347E3F8F9EB3C" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="79153470AF043926" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F47D427C73E45DFE" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3F8955423C77E8E3" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="AE375863E901F33C" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="9B4F2988E90ACA0F" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="C39A1F0BB665586F" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2348D12E51602FBF" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2EC2AD13CC314A3A" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="D83180D0A9513779" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4EFD4D6AAB1E16DF" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="170BC12A7E2E0332" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="1B31CA5CEF9BA950" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AF6D8F003B63DA4C" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DB9F63D6E77A0B82" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="FE3C92642CC944F0" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7ECEEAED32113CA0" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4A2B47CA169D7876" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="A8EA138A6ABBFE5A" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="818AD4544C429CF7" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9E14450F77782F47" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B2EF5B9AA64AEBA5" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="691469BCD53A8717" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="2B6D64D7F656A8EC" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="978D8F57143D14AE" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="20FD77929EC3C63E" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="D1A3DDE8DC125F20" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5D18ACE3C1719CE8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E65E0BC780FD9349" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6B5DD0C93B5BA26D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9DB9768F2A3CCD45" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="DA7C3F1087B93E85" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2DD6BB761A86EC90" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5AE5164D5F4091D3" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="935E6C8B702D2C69" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8DFBF3C6A38A2646" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A4FF941C5B1068AC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="306989BD28475B1E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="7648118126734597" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="678CB79BE88CE7F4" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AC204266C7F0C55C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B834BEEEFE66E87F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="67BFF40C1366BA13" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39F4469D63698AA8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C14291C94543F341" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7996961365CC2CF1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="CCACEA97E98A6F28" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="797C60CF0EC078C2" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="889A77C35B212B13" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4507DFBD8D6C22F8" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C56E0B9F59B1EE5A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="43FCEA590D8119BA" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="BCF144641FBA686D" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="3F6B52FDC2ADF829" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="C375E153EB7ECE33" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="C48D8508A68D1D0C" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="1573669E889FF670" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D3A382E0480A155" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="FD2EED1141CEF4C4" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7DBD4B2C0D74362D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="30FCA316458DEDAD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="97D07B19D80BEEB1" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="DD8223D0A38AB06B" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="1A3257F41D5D0FD8" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="AAFED41574FCD99E" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="30FA274766D3FD7A" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="45B182B03505CAA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4AB251C5B8CE639C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7851F39B1D9340E1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="13A77B5AF876A92F" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="A9F5C80F0A60B28C" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="831DE0218771AD3E" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="BE176EFE7EC5E3D" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="BDB7EB2CA915110E" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="169722DB9DD8D5AD" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="F8882287DCE69CDC" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="82FF671DE59AF545" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="6E068FFC7440621B" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="1BF88F03F9CE4136" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="FCABDB9F1AC0E954" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="4F64CD9B7A488459" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B97DFE1C68B1C7A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C0A143049558300F" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="270D610A4BD833B3" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="7A14CD845BED6C1D" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="DB549000C7AB3795" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1CF49FD9605D1830" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="A31336FEF59676AA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="9D63EC7091369432" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7F3D808D68B5D684" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4141877F6068EC90" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="23B093204DD52476" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CEAC2AB017FA43F6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="30E013F32121ED7B" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="F89B5F66090579DB" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="5C54C27878209A7D" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="4006B72E102270EF" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="9D078F06DE4227" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="FA669534B659B971" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="194CC8B9A67F5B96" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="E640F6CA4EF8AC45" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B2BC7DD8CB72951C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BDA6C65BB7A92AD4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C29A605ADEE8909" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="C1DFE37D396BB00" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="F128D4C282813C19" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="E322FEEBCEA17374" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="2201C55B741CFC92" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="D8801C57028BE05E" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="4B5E7FB3E73ADC4A" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="5BA6A8607F8ACF9D" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="C56AD1F344050380" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="DD8AA8E109C9BF63" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="45662E4EEB7F31E5" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A2247E9C3FE1E90F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D4D7C4E999610C19" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9169B06B4433BFE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="2186CCD59E1AD16D" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="4EF66489F6F1FDCD" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4F9ECAA7BDCBE8BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3938841A28764D0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="D2F66B708712FE39" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="312CF4FD33E6EB7E" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F4EA6367FEF64F02" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2F0BDFB30ED2FE55" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="A402AD7E919B55" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="D74874A725E54432" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4F81F841C4D98F5C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE0F0E13575F01D9" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5DF66E08393B8404" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="5DC1F4D989772678" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="CD878DA42510CFAD" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="E8F3F03E6682DF7D" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="680B1B425C3862A9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AE0D02E1588DB3E" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B3A4AA79672AFE47" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="B682AF373666A940" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="8EEFC6DCE8D759E8" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="A1A704D0743AC22A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="A9207C47F3AC3894" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="5360D798AA86D390" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="BC603ADCCF6C8F55" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="648343FE75E870AE" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="35894D0925F567AD" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="CD3DBE3976232990" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="64E62C7AC7B4DB35" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="B1A16A53B69C44B3" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="94716EC177DB700C" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75CAA8045C965DAB" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="A5E35EF18D2101BF" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="E17750EBFA3227C6" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AC6C4898D78B8A39" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="EE419AD940FD88" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="DADB417D0530FDDF" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="2892C5B371EF6D6D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="4E3190D34EC11B56" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7C0AEC29213FFEFB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="4D6E8EA33DB3AE3B" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="50ECCC49E687DA30" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AAB65152FA754BBB" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="E8D78CD67362BB6C" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="A58CF0E6E3BC3A10" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="73DE8D7C6BA7B4C7" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="264F514A2A56EA64" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="44B3EC05B5F94322" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="A751D23D747C5429" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="5C82C04DA1CF2422" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5A619C970F8FE9ED" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E5B2DE8A1F401BCF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9857D09862E2FCAE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="489EC51347721E3E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="74F45FB6C0199151" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="A9E36AEDB6F9B99" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="A1867A1EDAF84FE1" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ABFE899C719BE1FC" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="41DEB7DED39B94F1" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F50F6AD56CBA13A5" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F9773D8209599B79" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D19AC583B5230010" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="8C7621310CDAC79B" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="5CA31704F5479501" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="9EF68DDFB762537E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="1DBF4B06F39AA26E" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="C5C3691AE58A4393" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8B6E0CB5D4ADCCCB" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="30754406F5AC287D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EE653FFCB5159CCE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="4DCD0E8EB4D64B64" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="2D47A5EEF7C9C2E8" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="94730456C42A712D" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="2463AB1798DC585C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AEF27D1012FF5C05" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DBCE4BD2DC17FF7D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1DEB7E690756E56A" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="14CF6FC86D63D491" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EDDC56356F8D1384" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="18742CBE242FE7DE" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="8F45522999BEF848" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="1295FCCB4A53B98A" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="18ECEFE397806167" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="E53E70C99FBC3A3" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="6F38CB613F334045" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="D9B3F2ADC81BF1A7" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="B3A061DE89CB19D6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="F2F1DC43B0232506" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="B654F3F5E29AF831" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="9F368657542A9B41" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="BA0B3DEB1BF1FD0A" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="4CD06070F9259052" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="9E2F4491239183B6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="57E8B2D47F437B5B" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="D24ED1991B29DAA4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="31174B49CA906B01" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="80007B4EDF0AF7F7" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="1DEA02CD3906E6C6" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="D9BFA611023067C6" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="DE795D38F01133C0" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="68BDA6DCB20D9A80" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA4EA61941AA053C" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="520F139389DD41D7" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="9F3AEA0DB66C87B2" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C7E2A803A85E928D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="14CD58D3C8C9DDB5" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="BA258379443A4F82" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="C70CF35CAB1A6CF4" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="5A2F6FCB7EF5438C" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="B4EB87F11BD9259A" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="D2DC4365797BBFE2" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="E2325AF76E9A611B" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="66B30A2579BC2690" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="3590B8F26640949D" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="EA8167C6CB2C87D9" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="575F86BE62FC66E3" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18B197EB94E6E9C9" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="B1604822542BD78" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="4BA7072F2752902F" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="CB6B6836353FE980" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="62A51B65DF2E3C4E" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="2DBB7CE262CD4AD0" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="A39584EB6D856A40" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="2E04A2C8E3F9F964" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="736ACF9FB77B7235" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DDE9499D8AB332D1" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="1E1FEFE355EB0023" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="84987FF7210522D1" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="588E8DF04B6EEE7" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="35465EA92F3679EB" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="79863B211850646D" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="9F239F9167AD49AD" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="A4202A29FB73A13F" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="74548E61B4DD3795" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="AF55E3D9854CF42D" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="6F48286D0C98319A" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="258F1B7ABFD31CC7" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="67C7AEADBAECBE0A" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="9003C33A3C1CC71D" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="10F834B5B1F915B3" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="8152740F3CA3099C" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A41E48D386475210" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A82451F054EF4F7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="375B5E7E3E91E39D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="82B3417F2B3A589" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="FA12BF415F5EFB67" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="14FCCA1C0C88B972" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="36C60EF034F62959" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="C2D3A66273EF42E2" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="F3070441795CE3D8" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="CD8E7FFD161C6CB5" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9A0E7EB8C33E1960" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="A9956C7ED4360229" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A3CD8BEBE5C36695" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EDB6E90348A5746F" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="FF194725E37D9BD6" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="32820FB74835215F" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8A07B5508E3A0C44" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A1AFD9EDEAEB113E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="91C13FCC24229D0C" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2944A69E0203E50A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C820A4EA5C7EF2B2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="BEEDC5A7450644F1" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="CEF60F6EB4506695" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="83CE86BF3B7B1983" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2305724D4FD1B80E" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F6E4FD23F0A91C64" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8D5CD2A2D195715C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AE8B38E748B69AC6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="C8FF77A245E6B192" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE03A5034ED62397" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="74DC3BE909461D07" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="A6347E1A5F6EEC32" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F9FBB3EE6EFB702D" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="9A6D4C57D3EBC164" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="33B15599B11E809A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="6D0A71C6FB6FE0AE" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EF3663032F84FA07" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="6179E42EDCD32FB5" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="8CBC576318F387C1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="23E49985E5060C7E" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="E187B0E23EFBB10E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="D9D8F98F22C11081" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="74E9459CDFC1BACA" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="D0113DC332EDC213" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="78300A42D5E3F73B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="4F613048CBCC66BC" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="3AC2F9652B42DA8F" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="7E087B7E0D40A93A" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="A700A3FC3BB6A012" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="6D8A4BCFA1F36424" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="7A04E6183C6B13D4" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A6EFF0BEE04785B5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9DEB5CFD11AD0996" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="F47CDBC0CF754DB" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="CF5435AED39D43A2" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="29D72FEDFF8C600E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="A397D24551456C1D" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="CB5A61430E2064D7" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="A1D1330BA54AA15C" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="94A89F3F7B78B59E" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="DFE20E99173EAAEB" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="74229FC15AAC3863" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="9304BF8C8EE1CBEB" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="EA1C7CEA91D07F4E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="428CAE345C30C27D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="F06FFB1D2349B577" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="E33553B7BCB3C758" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3E2C4C1FA3635808" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C0E21C64774EB648" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="79F1C97573272148" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="653345FFF94D66B4" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="DC57E1145E509C0F" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="FA18D6E2CA07F571" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="9453616AA0F60ED3" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="DEE1FD70F329F7E4" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="8F1029271B3F64CC" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="643452534C7DBF37" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="6580F7B8450BA6CF" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="8E8660DB4D6E099B" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="8316668428AF1DBD" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="F5215A64ED8B33A5" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="A3770EFEEDDD8846" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="EF7DDBE8C38F94AE" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="D3D243D95C155938" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="E86C8E52DAB511AC" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="6D8DF199213A0477" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="220D2BE3C8BE7AED" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="FD0EBC5BA7A2B890" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="43602312460F5997" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B8BC7B75DEE0E921" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="2F482DD00C75391D" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="7FA7361127288F0A" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1E48D685369F7AE8" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="CD4A5154AC35006" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="1FF3696F4F82437C" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C4702AF15FD07F1" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="38FBA2AECBAE94AC" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="3D052BD60E8BAF2F" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7ABD28480A3D0295" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="6B4EA520EA6D4BA9" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F71DFA47741AE2C5" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="AED79955F44E7789" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="F541995C1B9C902C" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="C3482E1A1405D768" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="361C6DBA653832B6" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="5F908D3FAFA920A2" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="BB69A0947E590D32" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D18C69934B87B8A" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="75464CBB412416B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E0F5E3385BF0C630" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="70666C3F8CBD38BF" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="2271CDB0FD5D4400" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="1EFD5B2298D00BFC" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="5A34DCB87C58FF02" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="38D1A7C1D6BBD2F6" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="CABB3547D42D93A3" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="23977765CB72B764" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="793EF744114FD9AF" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="86E77E12EF13CB3C" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="B3260BD2A1EBBD5A" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="D86565A4EA355B19" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="37E5A13C629C51F5" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="A7363E450596E8A3" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="A7437918315E35B4" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FE0FF8D5B94344AE" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="AD94B0C74A3F7B60" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="45CB6DE65B70DDFD" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="800D8DEF532030A5" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="A2ACE610B998199F" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FE67AD03AFC8DB82" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="AC9F35C80B5014AF" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="5C5EA51F0DDD7206" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="5D4CCF66199F0601" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="9A3FA1F7AC190C83" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AA6188F4A786B46F" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A5A365C1F11F6CF1" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="1892EB70C0B8174F" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EC83FDDC2FB6F98F" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="73A2C5867FF52584" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="DB562CCE0875E526" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="59AAFFB3F042094" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B08E10967F265357" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="68759DACDFA98939" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="2AF135A76461D220" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="66BBCA20130BAD1E" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="B43D7D7884CE4073" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="676042B4A03313E1" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E7F6BF54E2F105F6" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="4187FE958FACD2AD" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D9953DF0857E720C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="76E53C9C57F3D23F" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="153AF0A3DE27466B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F7EF420305D4C59B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="AF078E284B8A0EA6" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="65B04483B8F5060" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="68FB4D6A69BFECC4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="21CD855D056BD378" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39B779089BCA0AFA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="165235DF6E13EACA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A25EF0B69DA1A285" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="2FFDC4B63FC5EF09" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D3AC546C6C58EDAB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="86653E6353D6C221" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5BC0AD082CBB3C59" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D1CC892D395E2C59" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7BB53DACCE94B8D3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B26CABEF68066F8A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C3DEABEB5C279647" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="DFCF6AD847D26801" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="6B560BCDD521D8B0" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="258E67C9DB9279E2" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D3F64CD6E5166C9A" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="9BAD00908E8B66DF" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29477A2FBDA3814A" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="5545FA13D6DE7E59" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A88380335DBBAFDE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="30FF5E0C6EDC8CFD" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="272C829CB8190763" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="ACD197EE1CA78E90" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="60534DCC59D30598" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C47CA704383ABC2F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F76B173B3E249B88" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="57370AE0C28D6070" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E9D362A34A9BABA3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A5F1244F9C7AD69D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7EF82DCEFE950A22" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="3F5AA704ADC24E07" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EC6720C5B7B53557" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7ABD669C9C34DC97" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="94BE38B644C1C9DE" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EF17DA12AD57914" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BB3896D3041B4F1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B59D1D067582458F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4282F94878BCE2BB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="AC812262A52F414F" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="714654D882893162" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="548107FD6E3D1139" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="5435407BFF3DD44F" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="58F226EB9AC70BA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5748434FFD9339A5" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A1B1BF729F51603F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="28BC6D034F63DF1F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="6047779BD67C96CF" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8ECA657BC6E0D4A5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BF8CF65803665F5D" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="63CA9C98497F11DF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B9E477B11256003F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2FBF9E8837D3D091" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BE1C584A5FB24C13" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="8C2A5C9DA8717B40" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9D22399AB0B4DE08" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A5E6E61DCDF469CB" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="57558BE04E52BDAD" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="28E925741A0C30C7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C4B9F3049906464B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="100CDD41BEB81901" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BF3D535D11D55CCF" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="84F24E4B84988D6E" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="20ED31CAF88819B9" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="6CE994F53332A384" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="290A037CDE8CCE49" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="8F7BD85FC99EB870" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <Tunable type="situation_job" name="situation_job" class="TunableReference" display="Situation Job" muid="259A0409CE668EA0" description="A reference to the SituationJob used for the Sim performing the&#xA;vampire nighttime situation." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SituationJob" />
        </TunableTuple>

        <Deleted name="venue_invitation_message" muid="542F9BE590D2BC4D" />

        <Deleted name="venue_situation_player_job" muid="DBC0F199A711FE2" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="66F58EF04B750EC5" />
        </ActionList>
    </VersionHistory>
</TuningRoot>