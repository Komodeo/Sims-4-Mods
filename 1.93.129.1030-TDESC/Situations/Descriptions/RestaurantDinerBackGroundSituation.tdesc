<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="RestaurantDinerBackGroundSituation" module="restaurants.restaurant_diner_situation" muid="57B3430A91E40DC5" description="The situation to control dining group. It will control the state of the&#xA;whole group like arrival, order, etc." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="A86203D0BE7B9DBC" />

        <Deleted name="_cost" muid="263F761C54B0DF82" />

        <TunableVariant type="None" name="_diner_arrival_state" class="OptionalTunable" default="disabled" display="Diner Arrival State" muid="F869AB3BA9ABC356" description="If enabled then this will place all sims in the arrival state to &#xA;begin with. If not then the arrival state will be skipped and" Deprecated="False" filter="0" group="State">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6A391FD797117675" />
            <TunableTuple name="enabled" class="Tunable_DinerArrivalState" display="Enabled" muid="22CA3BF34E1B0FA3" description="The state when a dining group first arrives the lot. They will wait&#xA;to be hosted, or claim a table directly. The state will transit to&#xA;order state when a table is claimed." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="36CEA6D6DE3063EC" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
                <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="68A4244B5F343800" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="1572F2C982571147" Deprecated="False" filter="0" group="General">
                        <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="DA6B3ACFA760711D" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="7C41AE4109EA950A" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
                <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="B19E99705A5D7D59" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA8CD4E6238D1C12" />
                    <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="6B8F5021495E9E50" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="triggers" class="TunableList" display="Triggers" muid="1C9E6D17B4425B76" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="83805BE8F528B353" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="B2D80758EE3DDC16" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="4A8B9A8CB90BF929" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="D353C086DD62C919" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="AD0BBF533F896CB0" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                    <Tunable type="action" class="TunableReference" muid="6D7D65AEF61ECA54" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="514A99DE9E0FFD62" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="C71015553E6A18EB" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="337751A223FC2D63" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="duration" muid="703F354C54588AFA" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="72D90AEF9C7CB288" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="470EEEE9D9AA2195" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="BBD5205CFF918944" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="2EFB444D3642162D" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="148ADCA0BC9ECEBD" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="E75D358796F87641" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="86FBF8A903A381A9" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="CF7C7E48BBE599B" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="4086BE48FCDEC904" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="2758DD76E369FC59" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92E2AD0EEE8F4D85" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9B128F58BFDBE534" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="3D3FB5A7E5250BA4" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="9731D6678AE906C4" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="72701B0380A9E8D6" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="77B7E49B1067414D" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D1BB96A729ADDA25" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="5C50B5761B6D6CE6" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E139677BE78EC18" />
                                                <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="7BF89F0093B5579F" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="68296C67E34BACD2" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="BF2155CDDFAE848E" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                            <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="49D7B9D0318D1E73" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="187D6CC96F4F9CAB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="B9C144E2020D4F83" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="E88987C3BEC8C1A9" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="20F9B4F1B6FAC10" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7B1728098F670F53" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="720282645AB07339" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A501E1C04E7B4B65" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="928D9E5531B5CFB7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="7CADBF746C7EC03B" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="751EEDD95FA47C2F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8A61158D2B359CA5" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9A8BB23827A0E7D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="50F1828F87275428" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FA3A78A64F616B7F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="499B6F0531B8CE4E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C748D7EBC32377B5" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4E14C8D4482F1667" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="223EEA56A6D28426" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1EFD2C1CD906732A" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BB6A80EF4AF7512D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="95698A43827B9289" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A98E03D56907C5F8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="84417F9D07933966" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="3C038B8E608AFC7A" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="808B2F56574B70BD" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3836AE412B28CEDC" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="8C25DE36125E01EB" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="F13E6F2AB5292308" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="31AE8FC124FC53A7" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BA512D62F12415CB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6455DEF309CC4ABE" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="952D367421203E79" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="BB17B859FB1D09A3" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="14E73ABD8EB46DDE" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BF3E8FDFD07BCE5E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7AFADE7E9FBA2274" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="866463D99B850208" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="596BBB2E38335F5A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="48A9E6847CD2B3A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E733455961BA10C4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FF1E9B08F26BDB89" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E855B1D98E58B38A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="83ABA90FB5E5007B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B9A0952F5B5EC347" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="18C466A40460D938" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="3B5F4DFC463BB097" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7AABB90ADB60180" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EE9D16CBBC5FA4C0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AC0F291FE0FE6CBA" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="72522EBC24B4BF12" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1224CCB649C813E7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8E005DA6CCCE32CF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1E62ABE84A526035" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="C4ECB9B74BED0455" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="BFBACBEC1ABE1C3B" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="4C42ED278F3B9224" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="E5EC76BD84D211BD" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="973A00D85B14D863" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="60012EE900C3D918" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="6CAC3B6C3FC63B46" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="D3DE4DDE82EDBF27" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="A3A6C00F82B92E20" />
                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="718C257D9D1F05C0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableVariant>
                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="8CCFB5A85E04D4CD" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="C8A6E8F153D0FD78" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="F95C8B671AC6701D" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5DEC154D139988E" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BEB1485345390FEB" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F580DF78FF5562DF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A405E4A93BBAD825" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="E621D74F7A18F855" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="D3B041C6CB4FC289" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EB8B8C33E6626537" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39F8B3BEAD1443C0" />
                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="B5C18B392E96EDBA" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="28C8A87C42B63321" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="D0224AFB7A7B1CBA" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="F6470BCC1B09B880" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="125EEE03CCA957B4" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="2560860AB385F506" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="9DA35466747EA41" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="5080A3881CD1575E" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="ACA92F9AE067941E" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="791166A7F6A02825" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="CC301D9B3B963850" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CFDCD96AA69515B2" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="91B792009176EC67" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="1B531842BC00DB6" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="2996467E18CF6F4E" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="2CBAB8466F24FE3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="38C956DC5265380E" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="134F95B4093EF7A0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B802DAADB1079998" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="59F526F28180B835" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="332A1EE65D14AF78" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="80A86B43AD2CA1AF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="1988954F904AC28D" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="7AFBED59AE944943" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="CF9EF82E069DEB2A" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="F7471FEB8E37D48F" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="289C332C73857D20" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2AC8822E5B797547" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="77A55CBD75FABB71" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="7651166B43A12FE" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="930E5C924AABFF07" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="C876E09153057866" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6421EA12B7ADD8FA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="187755E28EAC00DC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="83B3D0EF3B23DF59" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="9A864327E9373089" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="483B65F913743BFC" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="81D92E7F711F5BD5" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="8D28D65FB8728E78" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="FE01A511B2D41A37" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="2A305CC2564F661D" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4E076FCC0818C919" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                            <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="CEE0350D53E32BE2" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="511E09EE5DCF915" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="careers" class="TunableSet" display="Careers" muid="91679F3E2165602D" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="7D061CB23F9CDDB3" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="795CEAD5656AEA10" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A8E10D9A6B130B49" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D2AAAFA8A583ACE5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="993BBFB7CFDC788F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A575321AC63CD523" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F862BAB43BDCEE29" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="480DDD0550B8D7CF" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A5661C42DE859649" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C7E077ED18DC80E7" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="1A08A5AAE1621716" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="EE8E6D190495CBBA" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="8842889407B7062A" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84F017D7830B0903" />
                                                        <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="C550D8C1E66E4328" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F0E4D7B32D0E8604" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="884B3397C5D981A2" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A351E3314CA7144" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="30F0CF3DDF05DD4A" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B8FF224AF6BFF7C2" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9B423020443FC9C8" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="5B1CA27E9D76AEDB" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="4BD878AE77A79E78" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="1F36A71EC4B785AD" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="648C579AD523101C" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="6A494BC2405081E7" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="4EFD6D80B7477A99" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="77D6FFB5E02F0E2A" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="827BCD4925D4AE9A" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="1FF8CFBE06334EE7" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="4D92868CC259631F" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="19C341CC6DF36BE3" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="D373DA8F3FCFA66E" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5140EA5DB6091F8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="575E525E705CE23F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4D8AF3C0EBAE112C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F01A7215D5BF1CC" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FE8605EA47A60C40" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="8E144E06B7B7CC13" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="F3F9FED3564BFEF6" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any" class="TunableExistance" display="Any" muid="71A574D17BDF470A" />
                                                        <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="5353F4430E309820" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="F8066C1A6B109E82" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="977CFF4E4367D2B4" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="607E0BF741528BC4" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="7B2D47A5AB779438" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D8BECA529D5FFD94" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="DC87EEB712F1AB3A" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="581D2575DB684A30" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="970839F7B0E98F9F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="F361D607E1A49D78" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B88299894A5B714C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3FB3F92F700C7A79" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="8442B13390067020" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1986DD591ACA76AF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="40907DA27D197A2A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="541CAA5D93653D29" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="2534FB9120C0B044" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E16CD82C462208D0" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="F4B97D989555CC2D" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="6D434846BB8CF69C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="491019FBC1AFE9A3" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="A24983527946E5F9" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="BFC19BA78E062478" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="8179BD6B4A3ED602" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="4547D67ADFF7AF78" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="22089896DA7830A6" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="AC18016F45A1B1BC" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="9C83EE4CC9CA8731" />
                                                    <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="AF14B5946C5F9D25" />
                                                    <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="D9393D5330483567" />
                                                    <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="90DB6A2866FFE606" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="B56CD572D91C2C3C" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BD28B6045D765BCF" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="931A718BFB5BCB42" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Leader" class="TunableExistance" display="Leader" muid="A3CCDC1D6A6A2B87" />
                                                    <Tunable name="Member" class="TunableExistance" display="Member" muid="29D04EC0F27253C6" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="D3E0394F26347BC0" />
                                                    <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="B0827C241974EEC5" />
                                                    <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="262ABB02CA955D4C" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="B789412CB08FEC2C" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B422311D57BC968A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7F19756C0A3622" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="EA787F25671B4ABE" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="599A0923ED08E583" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F8A914BC92C13826" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BF51BEFBE9CFB11A" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="ABAE6360049B279C" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8E5E3FD7B5860468" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="3B45EF36A8D3DE49" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="E20918BD4A7A23DC" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42B4F88F9F7448CC" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="BDC49B54D1670FE8" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7D4F90B814F8403E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="312DA42A0666072C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="5A4637B0AF9B7AF0" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="6936F49F734EFDFE" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A315E45DA1592410" />
                                                <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="BD50C7E47632063" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="A2CB110B95EAB96C" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="93E11948DCEA952E" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="F516E2CCB32E38E8" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="6B996906A444931F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="80D08461B4A98F59" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="4089EFA7D37FD581" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="2F2FFC68284E45AC" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="5735476BE0466A4C" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="A58C52B93DACA0EF" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="4E72064B8828B1E1" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="EBECDFC22A9549D4" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="8AB376EDEDB1F8BF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="2F1251186FA1E911" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="1132C1F1D107A47E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="A1FDD7BBF0E6F68C" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="930A8416F817AC8C" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51D583D9D759CB44" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="B98FB8B41D1D0696" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="231C9BD0376C67EE" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="7A947E4A0E11761E" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="9C1CBCD6FBCE0F06" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="858F65D00506BAEB" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="3A400F99146B18B0" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="98564EE8EC792C64" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="7DE0091E554D1FBE" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="ED9F27DE22C96DEC" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="4A0C5A319FDE9B55" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="575C97655D80A3CF" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="8C0378B9DA5E78BB" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="4041F831875908ED" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="DC34F183AB1A7B51" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="B6032D227AA67C2F" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6D791B68433526C" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="7C3CA277F8C14DB8" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="8742B7137AE76A31" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="55447533EE711839" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="29B15DFB7996B01D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="845AFEEA57256B7B" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="6FF714007C92911C" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="93E892DB969D0E0B" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5064BE14ECEC60FC" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="5440DF0292121C5D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AB5A20B92ECABC82" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="666FBD1E801CAD17" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="5F58D7F50035D8C1" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B922553CC557ACD0" />
                                                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="CB822961785091E2" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FAD9EE5E14A07A25" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="720F7EA0A933E80" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="8B7A0EEA59C2FD54" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="B54B67BAF067C5A5" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="663BE1642BB52007" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="45F218F1E25B6CF8" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="2E6BFBF60FCD6FD6" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A0C072B165326895" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8AF8C51201DF465D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F0BAB11B4AAF18C6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="83C227436EE24A04" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="2048C04FBA164D65" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="64E4D178200BAA06" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="5C521A7B372F2011" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="1E827BEE28427EE" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="D2C7B8F8B129152C" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="8B7DDF3AA8FFD41B" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7D89AA13F502AD4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="12BABABD4F229FBD" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="7E7AC40119226DF8" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34072B33B643619E" />
                                                <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="8595CF25E78C4472" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="7F97700316DEDCB9" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D22B9F7DDBC81BA3" />
                                                <TunableList name="enabled" class="TunableList" display="Enabled" muid="A10133CEC61222A8" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="drama_node" class="TunableReference" muid="C52E40E13D15B9A7" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                </TunableList>
                                            </TunableVariant>
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D4D6DF8638C0CD55" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="D58C0EE3C0972D51" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="C65C4B70E5B83CE4" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="49287C1FB2EED321" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="D09802C3A421B2B9" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="29564B5A199F8DC3" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DD9E470F8CCC962C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A7E07695ADCBA243" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="1A36BC6DF45012CC" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="238568A439E6F5E7" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3B9A46FE7FF387C6" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C62C96FE10DD08E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EA1BF3F76F35301F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="A92827FAD6329135" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="E96D2B766346C80E" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A4BE0E483CAFCF1A" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="B65850B5CC038F10" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="C22D5704F36CA387" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="E6B5F4D390F3FB4F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="3E9A6877917F30D7" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E6D5AF24756D6728" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="5C8F7B2CC39D8D7D" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="buff" class="TunableReference" muid="B9759FF7EAF7856F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="6CE360F374C9F292" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8DE6882884F20FA" />
                                                <TunableList name="enabled" class="TunableTags" display="Enabled" muid="2E4416ACFC78C044" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="9217E7A30214BD9F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="2305B94A66BCD399" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="626A6BA8AC1CBFA5" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="3B692476516E9346" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="6F95A847FB305030" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7554E6DC01C05C2D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="7AC6AF400F5E0D5F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="count" class="TunableTuple" display="Count" muid="A6DB2DEB2B25B4B9" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C4BC921E2127CDAB" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="14CFCC15AA314C86" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="144798BDC2F30D35" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="D86F86D04FA10AC9" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="ED7E817B1F5FFF3A" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="84C036E1FD1B9B43" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="D8A5E8A3494150B1" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8CA6365CA7A5EC90" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="490651151A405372" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="C6A437E311ACDBEA" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="37A6585F0880FCD7" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="44EF4FE1DDD62922" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="48FF345C7D60890" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                            <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="7AF77F8648C62663" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                        </TunableTuple>
                                                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="A29B0E73C2BAE58B" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="8EB63FC80CA18177" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="D4DF5A8964E9FDA5" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="1B18119F06A00EB3" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2109E984742B607" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="41BBED864C871C6F" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="AF6816775C2B97B2" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="5455AAE6B6CB8090" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="85B9D1143FA9B92" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="2FC93ACECD32251E" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="AFD0863403E80A07" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="C6EADB03AE089C45" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D0BFE7607B61AC4A" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="89F3A04D56DBEAF6" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="7D5FE5850A25E51A" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A673F436412FB6B5" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6573E33B67F6E877" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="EDFA2142F0977DDC" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="40A72B5643E11409" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B09F67258A13103D" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="E497B8354093F7AF" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="CE0F9B4D6F52749D" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="146E21E462B08B" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="504DD52F017039E5" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="99FC9D4ABD1BBB16" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="FF07274704DE2497" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="F3BF432180E205FA" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="33A4ED60E5AE4F71" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="883B8B4211125CBE" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="88631657E940CD31" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="CEBD5A168C972301" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="61811164D3E15E27" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="C53C6B9E27663118" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="C4BF2034C509546B" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="A99B55271D8C38F1" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="2770EC2083E45912" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FCBDE3930335CB92" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="92C717FC077C2882" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="16ECB22F2E174A25" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9FEDEBF67D81E6D9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9C0EDF8B7021BC2F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="3E259B70815ACA45" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BEB437BAB48E2C2C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EA37C26F528F4CE" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6C5E1F82E9F6D830" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="B2AEB1BFA06AEB45" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="C53B380133DC1B9A" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="360FB0111F50574C" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3C041A3EAA130EB0" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="5F2022B946C6FE17" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="C87CDF4D9FCB42D5" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="FE5F6AA0F3EBD16C" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="175DC51F9812D25F" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="40E7A793EB4F1B68" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="64F5B549B19A8D62" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="DD1B69A7298EB10F" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B31BA0AE700E8F6F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="21354893160BEF6D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F6BE4773F83430EF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="975C36062267A8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="36616BA15AE5BFC3" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="84D4B5C53E5E56E" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="250DE8549C560AA3" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D1B3A97C27CD9B92" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BA8152FB502D52A3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="63F8E63158104DFE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="5A1B01F4CC5BC90B" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="25E591B43E13AC52" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="6734E3736E1BD8AE" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="93FE8457E0BEDABB" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="BC39CB78B630CF35" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="AAFF1F01CD971E13" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="AE4F58383CAA1C5E" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="57FFD00BB1714F06" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C22A3E0AA8C73430" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="427391742642B754" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="F44E92ECEF634001" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="DA20CA974F92035E" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="B57A7086E2B2B3FB" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="80C9761DF0C1ECCE" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1AE40E84ED4818CF" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="E8CB16D0C29BEAA3" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="719A991FFAC59EEF" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="DAEBD0C2001D3663" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="874EC7EFF6959036" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="CA2D8AB5836333D5" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="99F0F236430821E0" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="77632DABB938050B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F83EA25C5BA2F938" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="B11BBD096584EC1F" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="39D27CB91299B527" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="232936F4C0FA3582" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="184A8B330AA14163" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B376C3CD0ABC96CD" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AC35FB5AFE4FFBA4" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="7B6EB9EBF83BE31D" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8B45BB3292A84F9E" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6B384E61AB2ECEEF" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="809051C9F8930BCF" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="44B693354011F2DD" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1BF8C69C9F5D50FC" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="38C0111A001FD6D8" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="47AE621B7BDD3AF3" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="8A8D190112471B8F" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="8A18F78E7D2E60FA" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AE6FE661BBDD56C9" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="F8C82BA2803671C3" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BE5C4523E203F787" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2C001BDC2A8FC8A6" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3AC31748305BAF30" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7EBB8FEE88E0A6F1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="50974200DC712499" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F654D361E0F0B811" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B82E85AC5657C0F2" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A0AF1BEF251E71CC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E0C1794848597C9B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8B57773C3B48C652" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="790A99E24173FE9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="2B53E63C011B07A2" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1D701D77A6E8C1A8" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F08E8342867A1B39" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8D5E09638C9A6F57" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1E05941B970261A5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="145977BBB5FAC97A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BB5A7F4579630C7C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FC4D040FAF255FE1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="753A99A458ACA119" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="33BC5794362FC545" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4ADBF96563E27D03" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C5F16B61AC0B9BDD" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FB96D98F71033D3A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="95DD2F79F3B4472" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="77B8FFD3CA59D33D" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="29F9CD0F3B51C739" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="3EC6EF88EBD1DC9A" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="2368AA98905D392B" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="1ED8B24F6D2A36BB" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5722A274491BE350" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="EA9C8D4EFA7DE879" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7607C0065F2F2596" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="75172CE6616EA060" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="6BD7A039D5E9FAD8" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="EB48D45EEB01E61E" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="234539E471AE6C50" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="59ED447836B70BA" />
                                                <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="9B4AAE8FD53B7371" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C0075A49EB95C6AA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B3C0DFE6E4DF470B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6B707B96B6AD461C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="F0B2F1E908136890" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="3807192F726934D2" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="C695029E718E98EB" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="95E2F8DB48DCEA68" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="981AB9C00B1B3BFB" />
                                                <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="64B34D29B5308AAB" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="B2BACC80C20EAA5B" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="92A0F054C719DA93" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="5BA8F75A3A7E3A0A" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="4BF97B235CC74B72" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="961094BEF8114FBA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="D948D2DD3CC6496C" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="87DB6018FF7FEFCE" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D071FC5F8C2EACB4" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="50E4CC8A8AD5E954" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="9D9ACFB8CD4AB00E" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="8BBA5B7383305EC0" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7E6215D93C493F29" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="E2BA82EBBB32882D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="FBFD4965A2839E29" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CADE120D3567D32E" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D15C63BE0B592B4B" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DBD64D40D120ACA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="59B4136DBC659E69" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="C132A299A34991FD" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="70AD9911D4A13492" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="test_events" class="TunableList" display="Test Events" muid="EB4B5A97785B704C" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="CF6BC8CFD0535E66" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="2CC14D17DCC06B13" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="AAFAC877F8B9A2C6" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4E61453C3C82EDB2" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EFE5633EBE563C33" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B325FFB1365CD59A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A2F3D261DFF78FD1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A1EFBBA13C838EDC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="599FF57BC0140002" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="A5FCA6274B3AB0D8" />
                                                        <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="97DDE5D3D671A253" />
                                                        <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="E532E483F663D5E2" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="CF8EBB5C50633B2B" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="B20C3BE78F5FC0D9" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="6B94EF72AC80EA20" />
                                                <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="7DDF0E8E28CFE0C6" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="6436035179BFD5C0" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="6A5B667CA0790969" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E36E8FFDCFD03D45" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8511A3828C3FBE78" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="BAA843DACC14EAD0" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="891405BE34FD7324" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="FC1385E7FB91D79" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D0D793DCFE1DE9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A756590539D8DFC3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="48DF963B8AE3480" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="AD8B0A70B2DFE495" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2ECBEDABC2618F16" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1B021C698F743105" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="7852B7278782863B" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="C9CCA559126B111F" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="AF4583356A55D9C5" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="602F80B1AF83BC28" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2906477D3A87C5F1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="B503F9A65D2E607" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="FD9C29AFBD7DF70F" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="C80EDEAA43943C45" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="579D4B4053427F7A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F184FECDCB83E23D" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D1046211F791BF46" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="AC50F8B77B7F21E1" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                            <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="2462DA0B4F6C483A" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="away_action" class="TunableReference" muid="A13E80803551C6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="EFF3055BDCC522C4" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="F5BAD71334308DFC" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="2A5A471AF94EFD6C" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="snippet" class="TunableReference" muid="FAC4C46BA4F8FD95" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                            </TunableList>
                                            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="C0EB738FB01122CF" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="interaction" class="TunableReference" muid="C6D3272FE4E7FE9D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="9B0B195D75A40A33" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="40E4E27859F70" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="987F8540BDD8968B" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="91557F7D7227A88C" />
                                                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="9712CFF644EA86C5" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="5A3D514798A462E7" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FEE3A2AD29CDE19A" />
                                                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="B0F9F0FAF87E48EB" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="6719B175DE86E8D8" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="F0CA60C1C2A16E72" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="1A61C9B6BE134481" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5E611E6101CA5E53" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="2882E36D4C72E385" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="966F50D2924DFDC0" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72E8D27F49623CBE" />
                                                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="1E83A9EBB38C0F85" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="CD5A0180C7A7DB2B" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="BC03C9605F0E64D8" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="C663BE654C2FAA8C" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3FA2F0281446FEF9" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="5E7380AB251DADC8" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="92E5DB10A6BCCA96" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FF2DF98C6D1464E4" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="786DBDA0F91293A9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="84C7C552D01DC7EE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="4251030AD63CBDE7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="DD4718F75A9B6B47" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="C48ED16786832FC8" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="37B47C77A2BEC18" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C783BEA5C0034CCC" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F2E251EC3A2D5284" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F145EFFFB42D6828" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6D26555692917348" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="890EF8902A2AEB7E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="AA2EC48F1C29C4F3" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="C7F4B1B065962744" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="D19E047A6B5C18E6" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="40A18063C7A40FE7" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="4EF0040003F702BA" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9FE3A45459266F02" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B5E5E00137CB5C97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="45A87C2545BF233C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="2136F7469EB037B2" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="91FD6A10F11D7BED" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E2EB6E8D1F5F2C76" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="5612FA8D48DC3FDA" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BC345936318DB09C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="434964B0F30AC3C4" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1D54CA8092D3F611" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="855757BF0F87DB2A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="86662DC498DB5E70" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="5DD459F64B8933A4" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="46F2854AA745F3CF" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="3B51DDAA89D21FB8" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="F7639959805959CB" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="ECC74832B99B731B" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="CAC6B8FE87EB5BC8" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="2EAD7EB8229E9D77" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="513FCF21E0455555" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="4295AEE06002DE29" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="7F0F0A28B83AF1FD" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="91EEFD576414C6F5" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="5F5992591773E945" Deprecated="False" filter="0" group="General">
                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="CFB984D3C584F3D8" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="B12574FF2F6B2D3C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="3AABD01285E4F9AA" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="relbit" class="TunableReference" muid="5D11AAADF13D20B5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="6C53A34BD077E915" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="D893D2F6E939F296" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="1260760283B862B9" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="31E92266B41EC0F5" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="57E3B79427A8F433" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="E6F85CA9F304E9E" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3DFA63079F965E6" />
                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="B08AFFA20B2DCA53" />
                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="3144BCE7FC51992E" />
                                            </TunableVariant>
                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1BD3229D127934C4" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                        </TunableTuple>
                                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="50D65B25FB0C6744" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                            <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="E1046EF63B8404AE" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="AB69E9FF93F4B49C" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="B91A0F0D32F81B16" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="4DA9DDB770EA093D" />
                                                <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="9AF4422401916B9A" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="9EF100D33AE89E9" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="66CEE5B6087AA695" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="8CBB8D5039BED059" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="E69014D6464EF266" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="8C8BE3A2DF8E8D2E" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CCDC9C2FBE833BDD" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="C5FE19D9BF2E5697" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="A156E774F657ADAB" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="2220E9F55D6E045F" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="FF5A4241DFDAA659" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="AEE80F40EBBDB488" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="A116E81363D1EFD9" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="4DB45741E57A0117" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="54C4B831353013" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="80CE4E6B862734DC" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="552C128008CEF4A0" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="A5D6959CD61C97E8" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="2FEAD9C5482F8437" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="C34FD81F4EA1D482" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="6C04C7CDC9CEEF35" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="A338076F3A03F069" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="B30332494719D833" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="3C39F1EC74A98DD2" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="1AF29CD999F35083" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="AC245956F5EBBCF4" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F50D3B182FE46632" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="8E828B35ECCF12E5" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="A118AB6F4BCE4D0" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                                <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="F3910A5B18809AE0" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="43454BC21870305E" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="224EBBAADB2F384" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="84A216DC02136283" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3C6ECF8522E23F88" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="69275180EE50B8C7" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="7C7FD55027600253" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="9E1A943677C0E4FB" />
                                                <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="5B29FFB7CD351B84" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="CD2708661CDBAE23" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="CDC1DE3324AB6562" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="80238A4EE065A93F" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="59F06382177482B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="9A0A6C226B838B8E" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D1180467C05CA975" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A50B00258BFC691C" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="BA9381E8E08889B8" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7ADB2C14008C441" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B8E43B2B51AA6A26" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8593808FED1B088F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="11176080EAB360D4" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F33823B22C9547BF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="210DEC68DB306BA9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="1E38977EBF4DF375" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="948C629ED260FCCE" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="26FED8EEA9788B13" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="99ADB0372C2AF479" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3EA8D5B1818A39F4" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB336E3A8D88FADF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1DA33023EE80BB34" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="1DB249D8B2A4120B" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7D2058EA6F95D51" />
                                                <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="2466BD03E166EF0A" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="DE42C96595FBD91E" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2D0E58D8E31D12DA" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="FAC544687DAABC90" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="93F75255FDFCFCB4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="EC171F1C06520C42" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C2B738F24300392" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="4849EFF00228D58D" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="situation" class="TunableReference" muid="B3E68C84BE75813" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="4EE7E4987596BA9C" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="79EB600B8F396EF4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="2CF620FFEA15AB9E" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DFAE0E3C3E69F15F" />
                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="89103D02A140CFCA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="34BA950B252E7D8E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="BA68B2AE983EA03E" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="491812466676C9DA" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B077307FC470C5F7" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="A763A04805B576F9" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="F770E3D43B78B341" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="B9EBE40D02DC560F" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6519DCC06644390B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C983CCE5F7B891FA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="8412F049F4C136ED" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="BEFDA3AEC7180E44" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="33180C09FE1CE031" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="B86A39FFD0511616" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="72C9FB7C90A654F2" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="AA849CA6579A2954" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="7B5D4C3F65FECA37" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="24A963C07CDC121B" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="5D6B16E9746906F2" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="BF493954B8379FDB" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="F491688ED6953D8A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="490B80B1F920F988" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B5CFB8DA014C58C5" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8AF205B3CEDD767C" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8771070905D9D8BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="45558A2E58D76A95" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="DCFD326A5BE69924" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="10B4AE786D182AAC" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="8B5C6A759C583070" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="EB5CD864E8D60B33" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="8521DBC6A131DDC" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="BF296FFB2B844CEF" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="7D2403BA65FEBF10" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="E3580415F470D491" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="91573A34604613E0" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="4C90268361465A66" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="6A58B165441A1ADC" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="70F2E1C2C8051349" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="trait" class="TunableReference" muid="A88D5528F546DD2A" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="D670C57DDADFCFD5" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="BF892ABBE26154B0" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="4616A6F7121D8C54" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="FD523F3F10CE32FF" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2A004ABE247F14F5" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="A4B206C81FBA984E" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="82EA44228F0A06BB" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="51D2C8346E48DA14" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="C9728BBDBB502232" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="28919B0058ABC216" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E5A2FAB8F765559" />
                                                        <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="E425CAD9EF5E1348" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="1295C2FE455ECCC2" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E2A56759C0045C3D" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="98C19B0024662291" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="D799C49A2233740F" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5835C00EF2C5FA1B" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="AA2E1AC81A97A8D" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="BF6D5966AAD1C92E" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="E4E57B8F0A134E62" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="EE02AF68DEBDD1DD" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="7CA54A706ED9D23E" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="71D355A7E5244038" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="1DE2B4CEB8B5A04F" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="BEBAE115D78AA73B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="20D9322EE8C7D666" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EF77D3E6E41C4176" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BA76079471FDD434" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="3508A461CEE97AAA" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="199DD4561717DFA7" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="47FC62730432E83C" />
                                                <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="6A2FB54D11CC1131" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="2FB23E07ABF2D20C" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="81CFEC7BA566D87" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="1228725D7FB1C526" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="1163F5791BCC43B7" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="E62EB2FBF64D91CF" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="9D68A78CDF16BBFA" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="26EC1A6606E83312" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="2C206EA7C900F96" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="7CAE50A045379EDB" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="F142A725CFA308E6" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B0E5B598E7929A63" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="8D11D9C85FBFF86A" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="D2DD3C672B402F49" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="EA73B9D0AC955AB6" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="3A9CC923B4A50B8A" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="334BE54BE318650E" />
                                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="F1E3037130E260DC" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="3012D8AEB2913AA6" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="BA8B4FAE0CE6477B" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="DCB75FA2E1F7EDD0" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9EF1B72AB534F0C3" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="687921BDE0E6F9D0" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="1D8C299DB75D7EBA" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A764BEB4B9F3D6CA" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FF609E23E8A57FBC" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B06AC6DA2A3F4449" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="D3D455839D9AF56F" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6A8A052D79BAA41" />
                                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="37155F15FDD93A02" description="                    " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="9570E364A2F54F37" />
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="3A35CA5872AD35DE" />
                                                        <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="80972400944E6F33" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="91532C4DEF6FD928" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3DE89147A5EF8375" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="37CE01BC517B4F67" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A665B37BD4D5358F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8E4A911521F6881E" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="878FB303C3C3FFC1" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E76CAF70EBDFAB93" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="C7DA0254D71A5575" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A81B29D1C149EAD2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CC65A1FA521D6662" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C0B1C2CCB707FF7A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E23C58DDA1016C9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D8869920CF7DFF16" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5A8174DB5AC9F214" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="4A08DA3657E94201" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CA650FFD170F30CD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2A9CDC0B45EF3CE8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="55A81D5BE45BCEBE" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="32B79DDF3EFD4424" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4FB7B208B364255C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A539569A7A7D96A4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="69AA3BC738EF9989" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="venue" class="TunableReference" muid="6A506499821ED26D" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="A6264817FE819CEB" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="87529ED92B4046E8" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="609F8FDCF00F8DFB" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="7E207AB2D2D57D25" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BD7B6D01441C9001" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E2D8C5CECD9DCC83" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8DA4099DAC00D953" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="35B200B50CC68F52" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="753DE64FAC691142" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3BCD2E245A64B96B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="3354F338F6D146E1" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CEC4F018DAA3E979" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="960DA119F091B55D" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DC5B69E9A26A4C0E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EBCF8A424572AE30" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FB1EC61CD1AFB228" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5CBD1D9468BDD7A4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="81D82C67803DBD2F" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D512B74D7D4B2A0C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="33D01B63FB46F95C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="75EE5871E19D120F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9DFA9F76F7CBE95E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="937AAE4B9D2F9688" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E070665E9B027884" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="9A2511D6A9BEE3D8" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="worlddescription" class="TunableReference" muid="4048D1CDB45236F1" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="79565DF8B1F3CCBD" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4AC01DAF4A85E07A" />
                                                    <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="660B07DAD74612C8" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5126B5CB961795B8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7F7A1FA1DBAF0711" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FD79F2E1763CAB56" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="DCD82B2395F94682" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="52E811B8C41E6BA2" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A8B212CCF59D9974" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3DCAF3F6A55037AE" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="449734C2EC7DBCC9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2D54DCEF2EC811C6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4A0A5724316FEE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="73AB9F6108EC6CCE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="ED4E10BDC5C058F5" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A7A10B56E437E442" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C7547610960DFA0A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B07A9687216DC32C" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A333315F965D4775" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6885DF86C2D04879" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="60C4A3FDAEA93458" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2A69493725BB03E1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="zone_modifier" class="TunableReference" muid="6846658673823F84" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="75FE86FFB77AFC76" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="7C02C38927314F26" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="7CB306AEAA0B334E" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="87F2F0F55E9C3043" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </TunableVariant>

        <TunableTuple name="_diner_eat_state" class="Tunable_DinerEatState" display="Diner Eat State" muid="F529CDB3F2ABB015" description="The state that all the dining group Sims are eating the food." Deprecated="False" filter="0" group="State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="DB79720DEE8CE92C" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="F51D433DF6BC54B8" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="34D575E36E9A77F3" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="77BA75E6B2D8799B" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="95AEDACE2E5624A7" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="15159D89A697593" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E836B8291E02425A" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="5BB9E5D04DACD3F3" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="97DE1D0399EEFEFC" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="DC7692CCE66305A5" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="1292AF80A0EB3742" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="DC039D53C2342181" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="6B8DDE89EC9B66AD" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="D48281917E8AE044" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="16394C8B7C60F73F" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="8AB217BD8FAAC901" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="8BA8698E5E26ED40" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="E7D76D25CBD339CF" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="BD3779B8C87D4F6D" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="E95499B8AFCD52B4" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="F0624D6608BDC3C8" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="34EE76613A0BB098" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="42EDC596813D4B87" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="747D20E0463CD710" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="DEE64999FB63D34" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="A17BD085E802CFB2" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="B8AC59C430628F1C" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="CF0CF10A0C50AB4A" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="8EA7314807ED32AF" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F0A0A26AF131F9EB" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B43A076B1F6B582E" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="4236A0338C5F8C68" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="D149CB44F84B47FC" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="29215A3BB4279F38" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="63D72EE2E26FF925" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="922F6505147AA42C" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="EAFDCFCF632E18D1" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9267EED299C07C36" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="6A1822F206214B0A" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="7E83B02DE6D86125" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="53360296998C41B" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="30D5AA863F94ECCC" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="EDC4A5F92671517D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="C9AEAA2FC2E4CF7B" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="EAADA314FD3AD7DA" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="3AA4A07E6A975636" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E66E3A0093FF2EA4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B8C9391BB9D2C8EC" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2E6161AB057C7D1B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="922A22A9959B5A22" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="9E6D0CBAE0E08F74" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="56BD0D4DCADFBC5C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F1EC5B4F1829EB41" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3CBD628E6CE02671" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FE561290843A7599" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BC82AFB9365DC6BA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C514B03B714DF082" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="E92474513C69DA37" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="B0E5BD38E73808E1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="514DB4D66B7A5DE1" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="355D05C077BD1A6A" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="49074A631D0E5C0A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="175A5728EF25778F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C5D4105E544BC4CF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FBFEA3F3B5E03456" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="3DCF812391B76805" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="7150BEAD9D70C76A" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2DCDCD49AAE6A444" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="43887DDE6C2B5DF9" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="633F80677BAF9A3E" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E9735586E494A44F" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F7C4A1153B4E11DB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7F800C4499029C2" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="603DCE0DB1161C33" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="2DC83B392C9C7FB0" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="1D524B67827080A7" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D49F941038D9B28F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5946E581A8C590C" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="600B0A8D2F29AF00" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="10EC30832B3D785C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6C2F3F9A0F53C8FD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5F1E2148ABF16A8E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9E8C390CE631276" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8A18A6908E49932" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="80275D7FD3D965C7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A19D6796AA2885E7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="EE9CC57C9F412564" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="FCC13DAF45C3CA65" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E12426FFCFD023A9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="70EC42702BA28102" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3A39B86A71BE6016" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8E9EDA3CEEB9AF27" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39ABAA4930B52286" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="46F839213229567A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3C21AC6BF47589AE" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="B46F34D714378A50" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="1124F3BD77823457" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="A94DC4D3FBBA7446" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="8AB1CE3264892AF9" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="98484671B6B22159" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="528BC4E8F88EC5D0" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="E6AF79FDFC9D3430" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="87A237B4665DEC57" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="3729EA50E008C229" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="5B6F22DE631396B0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="A3FB490432FBBFD4" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="95268E1989500924" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="BC647F6567F70BF8" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5376C44E97A2CC1A" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FFD6820D9C8687C4" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="5E39588CCC0C3E90" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="5C201699B0E53AF2" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="EEA3B52CD00B11DF" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="D9B37680992B6CE9" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="9AEBAC390D796E1C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F3E7DBD72C0E1C9" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EE9C6FA046FC500E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E2A7B253018E0E94" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="404C6A4A252C2FF" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="744A2DEBA708DE89" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="243BA42B1F179E85" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="5F8ADE5866E73BD7" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="68A2C00C9B7C3CFB" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="59B7635F98D37BBD" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="69DD45106028048C" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="6EDC780E23260A6C" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="3989D26828E52CDF" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8D74DD7C72E5A791" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="DFB4622C9FC1E897" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="A11C8E008D6B9C58" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="D009B07E1D6A9D48" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F9C0F9355C305D00" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="FC7E819D6F6A383B" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="95E4BA72063C6683" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D08BA721E77DFAC4" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="187606CE80EA3FA" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="73D9F73325E0246A" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="5D836B132D621845" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="EFF4849D35EB6E8F" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="5142606B3AC04A24" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="14EA95A77EEA741A" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="E54F7B3686DDEE06" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="35DE09F84037C127" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="6BD5F87C70F4B767" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="73EB139B2DE69125" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="14317DCC0BE7C383" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="F3CA74C2AB6FC092" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="6220EB4D114E9FF4" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5F59D5EFEF7E4948" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="387540D4DC6F156F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="242D138B8C118FB6" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="6F94D92D03EE085C" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="9F387A93E543BEC8" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="F1CCEC2AC89AC4AD" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="CAE2CA7476DD9D18" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="C417EB3D30CE6A93" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="951ADD0CC0684454" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="68AC817FDE660664" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="AC73DE327F94686C" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="9EA0D9C1E8919E12" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="6F06836B7ED3853E" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="F355E8ED345F9B64" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B366223BBDBC8C77" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="456DE91A3286BCD4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7E7C37BBD19653C2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4E525090953C164A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AAA9924573435CD8" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="907A18B9AA9F91D3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="C69B783A43283320" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D7725B40C64F0AFD" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="ECDF732555D3621F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="3F82EEE6FD46CCD7" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="182E3C194CFC11CB" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="C6D6E08A693FA991" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AD81A6B4528E2A0" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="E55F22E4EA5E619A" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D96F775700C92D54" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8DF82D06DCE706DF" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C58C89A8E9C6AD95" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="C5291C29F7F53AC1" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="41E8E87E725DC1C9" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="48AAF4753E56AED7" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="B92572080E41DDF2" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="52330100C64197F" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="BFB605047A891773" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="457834D428CE700E" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="7775F1614C8E2FCC" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="E225E762813BCCD" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="121B4897E4574F1C" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7BC3877BF0624A3D" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="564A1DE2B99462DE" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="623051BDC23B3CA5" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="B9D4EF1941C1A2FB" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="579A4BAC6F70CE05" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A1A4F73E5A30F1FC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2AC7291D43035DC8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BEF75FFD68A54DBB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EA0EA0EE4C33A5C1" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E96B9E64203F70B3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="714DC9C78E6E69A7" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="E7CDC840F45BE7EE" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="56667B07CE84D658" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="B8760107CBF67E67" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="90530A3F284158A2" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="91E98A2738883870" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="54C987207E3724A4" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="6D8AEC58EDAB146D" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="F1B95474178EAFBA" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="1F395B64F81AF5E" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="CAB6EFE063FC0DA8" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4FD821188EB1080" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="A61E4F56E0360C87" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EAB8D4F4C06F5605" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="28A180B6C6521700" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="6AFC05EB2E341C7B" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9423BEF08F8A39F9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C34CE3EFA3BB3B8D" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E162829B768702FB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="F44CE6CD81AB5F5" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="510895D8DDA7D6E4" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="A26E14FF4A3EC798" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="966611F1817C63EE" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="1CE1157C1E28B199" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="7569057962093617" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="573CBB250CF1D5CB" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="CB66C96EE26B0467" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="6C122D5C516250FD" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A5FBDBA8375AA895" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="CBBDA3769D7545DB" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="2B74A6CE52490CB2" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="5F3F8D9598E4DA1C" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="7F968F98C97E5366" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="EFE0BADD6755A18C" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="5E2506E872899D01" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8C5A897E16CB44A" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="3D41089E2ADBBB6B" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="1F48C24832BF3C66" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="54403BCBE9C88306" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="DFCC4C090793DF7B" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="BC882A976F2425DD" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="A33C131C395063DB" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="DC9F42EA809725D3" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F501C226BD1C28F9" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2E0D298552BDEBA" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="D467E0B305F2965C" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="462017158C5CE0FB" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8641586BEAD7CDA6" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A0C0E3ACF77AF02B" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="F35E453BC31FB246" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="668957F717D0EFA9" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="49BE0FEB0D081F72" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="F44967CD245665A" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3040E014D1485475" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="97001561BC984105" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D8FA291D91FE78CF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1EF82073567F78DD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="2ABF2DECE35D89BD" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="31668A8E95AF0CB6" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81466FDBC9329961" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="D853E5C67554702C" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="238DFEF8A2150863" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="8DDCC7678E89280" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="99F590C4281DD1C1" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="4F4F57CB84B0C59F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="CEF466CB37F482B5" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="CF742508F19516BA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="C9D93922A60A38CF" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="23F4EC340A25178A" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="FBC5CAF79D6AC937" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="F086DB7B8356FAEE" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="C23B769C6BDA0D1" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="63D3A6DA7769ECEF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="AC800D9C9305AF27" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="357E5276CE2AF12D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="361515369B5AD26E" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="30EDCAD9DBD1629" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ACA334B2872C2C5D" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="6E17DA561D92072B" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="9F05DA68466ACE31" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="22C96403D4C515F2" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="F7F361D2EAC9D533" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="A76003B3ED4FE423" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="DD38FFF0E36E4205" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="BB17A38C887BE463" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="B0A144349D5F2A24" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="220EB2442CE99069" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="2F939AFCB1CF7938" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="E209AAD998188D37" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="BBEB60C5651B35AE" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="14EA4721662AC0FB" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="AC0BFABBE25E7C56" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="A901140926406935" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="365C243D96D875F9" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="110C27D45D637397" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="ACF8CEDAD9DE33A0" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="81CAF8BD40E39CC" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A9109D5FD2160736" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="2E7B9EA334EEFBFF" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="5A0EEEBFBD71F2A0" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="5925F5E693EA333D" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42D0041E0B91247C" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="75799FAD8F70B75F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8D7E1E96055FC98D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="629C62F488D59D1C" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="ED9F47FE75BC5DCB" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A96BA624208DB598" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="545CEE5AD52BBB3F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FDF63BA48485DBC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="A3AB2FC2AC19236E" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="2609FC6B9BE114F6" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="495FDC10CCD50076" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="986D08CDEE534428" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="49E4844865E9874A" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="17A3BBF4609FBC8A" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E50A1E0B67AD1440" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6F3BB84D2232FD0F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DE0DB0D8BBB50785" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="77214EBC046575A" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="F457247401DC47F5" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="6FEFF78EE9B8A21B" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="CB423E4D28350E81" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="CFCDAC27808FEE05" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="184D29E1DAA6F5B7" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="FA2299086FD12A1D" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1E47A5126EB85500" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6FDBD7F433B5055E" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="2485A61301832113" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="778815A46CE0DA16" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="F4F53BBDD9F93" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="795DE489E540E4E2" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8C9152401F68635D" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="93879E301F13A8A8" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="B5A714796369192B" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F4587500864A78B3" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="C3F403E92C18BFB2" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="6D5F8F10D3DAF95A" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="B74655088C45FE58" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="C88A9683A9B302D8" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="52E2A8E10AEB3812" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="69C128D76EA259CB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5AD1BE66758EAC09" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="17F18146347B3B16" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="955843533618EBB9" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="EE5737F7B53C9DD3" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B7251A8BEE0D144F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="834F02CCD8793A06" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="1597DBB1B6DACF9D" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="9BB53E40341DAF05" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="58B58F298CE48BA3" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="6F786FDFB703E014" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="A83268655B6FFD94" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4BEAF92F49C77310" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="BD52C5C5FCC2226B" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2603C79EAFA747E8" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="84506246DB044F9D" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="A3A7DD97120682FC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="78706C4AD6B248A7" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5EA4B42F20C8F240" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="5A2F4CAB5F369FAC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="B6702EB0D5E49821" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="A8C8D39EE206CB13" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="D8589A9CEFD85105" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="B57907F77798F3B8" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="39C80539E19FDF0B" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="31B12FBBEF909562" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="2680966725404690" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="B7FD4DF3C3EFC823" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="B1440A03A4671ACA" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F684E48FE958B411" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="ED52D1DB9976CE44" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="1678A8A804BEF842" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="62700466D52635DB" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="AA852AAC5E93161E" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="E77853C03B302EAB" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BA665FC8AE3ABAC9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="5EE5109185EB6F3C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="78B5AD1A340FD722" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="56D5460F77994479" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="36F7DECB4D6B55F7" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="2BFD65C9DC73333" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="5B3F27FF73881761" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="D1F0F1059F324AA3" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="6E5378A82EF690A6" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="5283C84CB9A2958D" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="8EFC2E727BEE14F0" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="C76E7ADCB3211E5E" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="18453CA718F8D26" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="907185F65C511722" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="EC87015EB2D747B1" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="74C6FB48A981AB54" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="4352B46E603D1142" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="52B63487606B0860" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="BC986F1D1DA2A085" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2193187E28D6FE6C" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="689434B99A912D3B" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="FA32B16789BE06D" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3564026A06B96E5F" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="67A57E5083DDBAB" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="A1A8E360B98F9BC1" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="C0D3CD0F00DBEA1B" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84430994B3E1BD50" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="8DEAA64790BBEA53" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="3F092088449BFD40" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="FBEFB958A56442D9" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="AE78A15313E2C764" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="66518DA511BD34B9" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="FF4476033C5D27CD" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="E71A8F5C49D48DF0" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="4ED605EAFD900EDC" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="46F2A034BEBE7C89" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="B37AD31085D77930" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="1DB370393794506" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="53104A8CF3E96841" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="803F91C6732779A0" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="F361ACF08BB1FE8D" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="DADB52E48F7D9EE2" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="FD0C9B8C00558DBF" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="581B95CD3CBFA2B8" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="31598271FE25D95" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3AF5E2F41AD76D95" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EDE8A2BEFEAB0DA4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1795FC5560948E5F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="936B571BC6EB3B8E" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3D06067A6E353B12" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7895E2BBE262E59" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FF05CBA47C8EC3BE" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="3E5FE604A30EEFB7" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="6EAE5F54F464BEA9" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="B22FBA17EB52BD40" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="C025DB608CADAADE" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="C74AAAB495DBD160" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="98730AE97A0F8718" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="6902F48FA46D9436" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="6D4B4FE71A709AA0" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="CB38BE85B76700C9" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="8CA4ACBDE676F25A" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="46293675232D2499" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EBA6DFB2D1D47B75" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5BDD88FB97D963F5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="49A86141C4EB8D82" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="4301C97F3F7CF1B2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="36ED3F59E3A0FC30" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="F6649136F015A39F" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="485433A2DF7AAA67" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2224F58FAF397D88" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="51686E31CDB8596C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="18C55B27F806CBD1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="D67D42182C94337A" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="55D47D37DD1D9436" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="A6E46535EC39F6B0" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="B36FF8501E0FA932" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="FEB9F07A4CCB7B8E" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="687563D930C7D7D1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="EB56C8A0AD69E387" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="3A06DC96C87212C9" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="411003DEFC79DE70" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="5BBBB91A88D0D09A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="3DA0E967B2A646D1" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="8F0BC3F8C35D3F73" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="171E35CA74F84677" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="7C90FB30A8E63DF7" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1A556A0FC4775758" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8C007B94C829C9B4" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3EA2291D7A493895" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="367724AE56DF34F" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="D82171E93D127F2F" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="AB065F0760812379" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="8637E8A619DBDA8D" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CEFF346763361C28" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D3B614CD29AAED60" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="96406A84F4CFBFF5" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BA2D337D8603EED4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="144A565E8D71BAE7" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="A436E1E94D95F2A7" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D8EEB1527C5E121D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B5E83964BFFF67C2" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="F1DCA29E6DF79849" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C825CE6173AC61A5" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="27D925D9DD6690EB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="25975903EA2B5D8D" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E5EA4692E23F9967" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7FFA502A4D49BBDA" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D88DFA52282825DF" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B47DB2B611E4A6B5" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="EFB7C902FA8AAD49" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="BE7419981CE2FDFB" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B46BC3F022C25BDF" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="45D31DF0E427787" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="96689A316F4323B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3B16358FF71B846F" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A7BEF43FB99AF7D1" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4C89DF96989F4180" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="1F7308451085819" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ED540831C13A2565" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9640348306376880" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6C5A7D63C7D0E03F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E8BC0535D6C049EA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DE4195C638381740" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D922D2265B0538FE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="722067F91EB06353" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9AAD2F1E02FFFBE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="688F7C1F9BE69C78" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FBF11FE798CB01EB" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EF289342635DECC5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A670E22C7200054D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D7C3AF0E07E33BB4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D333D5EB6166A0B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="3B15CBE61D93F54C" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="7A5A8BC6FA485BE4" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1C5388FEFEB9548" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="128E568DC108DACF" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="88269EBD59EA7876" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="EBA591D0FB20C229" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="82B8F39F3DF5925E" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="D621A6A20DF7E44C" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="4E75B136B3C75081" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="9E90B07AFE55F80D" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="FC38486BDB34B11B" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3068C952B9024A26" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="667BAC041A731FBB" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5623DFCE918F5C00" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="2083AC98B8AEBABA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="B42F0AC12B6F9BCC" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="5631438F1E21D6C9" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="263C3D5805BB50F9" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="EC7D46F2DDDD0BDC" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="77E02977B533E25D" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C11117E1E7FE6CF8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BE7E1ABD6DF2EF93" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D8E5080EC9653253" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="27E504C4F03DE531" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="72F4644C4F42B114" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="3708DC06F4666766" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="C54D0F18D1AD9483" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="798C0C15F5A943DA" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="63A3CE3CE45804C4" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="1C6BE724D0049AC6" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="696D1482DEE021CF" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="F222B6912736BC05" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="28A40596A8786CE8" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="8271974E9DCF3D6F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="9167C7054721A1F" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8CB799D6D06EB4CE" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2B85C2A9AC7383E3" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="3EEDCFC68C826C35" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="A06CA931DB4C6131" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="2EEB8E344AD1C588" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6972B1C6AC5A405" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="BF29D3B780646699" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="7AFE2ED926625CA7" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8336C023920727D" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AB7580558FA2DBD1" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="84142F75915F5646" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="70AACE095276CF64" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="7F6D6E5240704911" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="564EE5FC2E00AF7C" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="E8E15FAD473CEE10" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="5A1B94850814AFE8" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="D4A375A95019055D" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="F2875A26F843F150" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C6654C73112EAB43" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="ABDB9194C45A549" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="40DFF3586CB4B4BB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="658A3934A565490F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C5272725A68AE080" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="F3D7530605254DAD" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="FC5C1E9F9718ED9F" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="7A671FB355A20A00" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="D17A9BEB085C6890" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="4F1A6AD5155AA457" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="42307D5FF033C465" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="AEF2D7340833AAE1" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="694E200350F83864" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="64E3795055F61C2B" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="4CF1487CBA8C9631" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2C087EC29D026F10" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="CC3F16E5A6843F73" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="EF34768E76A38623" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="53D2B6FFD1DCE24" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EDA191FE5A6573A7" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2633838AED0BCC50" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A902FA88B81DF145" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="A0C5CD25C5D404E9" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="F55C84609B9B9206" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AE976E4181C2E331" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7212D99E299A966F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="802CC8C734E979CD" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="F245F276059F6450" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="440B34119664DB51" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2DB20C281EA83D35" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F645579AD391905C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="EB882141125A9BF1" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="34E3EB0038AEE0AA" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="FCAE6B47CC1BDD41" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6A0CCA2C45F91A6B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3EC299AADA95FE20" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9A4F7EC56DE0801E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="C3D933D18FCBCB06" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="3CACA633FA939BE" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="814387580234C9E1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="927A1B1494110A" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="1F9CBF5C268DA976" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="11789FBD143411F" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="B2843A8BC9D2724" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="A3E1577A01880436" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="63D714C5AD33FF40" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="CFBAEA657FCBC6D1" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="D652CA1AD72C0071" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="8C7367E1004FBEA4" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="161E1F0E5E8DDB83" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="E013101BDCCB92ED" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="5121371C291D114A" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B9C6E04B445CB4C2" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="869986F2584D2AA5" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="7604D18CE183A1F7" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="545AF92B8E632BA9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="381B57210196CB21" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D94DE74090CD0F34" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="FBA48964F6725689" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="53ED3C9DFD5DFFC6" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="984FC850D576865F" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="9D97078487881663" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="B6E7389F746CAF5B" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="E6B44CA04AA7FA06" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="2EA494AE6330846B" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="BD2588D59ABE551A" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="2F89F61C7FF3A9D6" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="38ECE5E6119AF99E" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AFEB13A05A08CD12" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6D94C86077DF8287" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="4E91FA260585D365" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="8237518C5F5019E1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="205EBE687B93D917" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="59BA1C62F8EF1EF5" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="D4CE99C1A7B260D5" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF2B3AAA14AC6EA5" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="E00CFF5082685C9F" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5F2DAB6D5C8C8134" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7C7B2E44AB2275B4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3F120D5E415F05CB" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="73B73B45744D35F3" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="D77E07DD932582E8" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="370BBBD98DDFF5E7" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="84831E9FB2D0E6C" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="3E0364F9AF55DAD3" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="BD93FFA159054F52" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FCB6D99F43EF4A1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DF2C01C0DF8D5EA6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="1EE201C027BC1E39" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="7A5C4BC8B4F36D73" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="B14510B4C44322B4" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="3D4A3583B613C8FE" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="277F24719AFAA262" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FDED58BDED1451AE" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1D62B7AC4FF67329" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39AB02B8B3629CAB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="66B9CA55C42707B5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="63D95FE6C2A8CDE4" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="3AA3E7A505061803" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="EBB748AF9218908B" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="85204D33E1BA1098" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="E81F1409FE0B473A" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="B2A977B66A42D768" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="640CA99CF3101BEC" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="102658D269379E1B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="6C029F8E26301BD9" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="923C54542C8E6766" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="8E2E3DA0151EB8C0" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="63E2EF933295EAF4" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="7246323A5950A5CC" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5B8672C1896353E6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B87A83AD979E335D" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="23223B7B636A49A0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="DA844014346DB1C2" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="7531CCF4A4397483" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="C141F7EABEFD2DFA" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="CA75C9D8FD5C923D" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="8B3264DD2E0AA6E1" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="D221C57B5F53ABE2" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9926CD5A904E7740" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="1F04A29B721A259A" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="4D1357C8D3F87D24" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="66ABE797A3C9A64D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="3EC35F1C56234396" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="F0BB5418C0A10685" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="A7D165CAF41A5D7A" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="C1378D77825DACEA" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="BE116E8F604C7597" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="7148996C2D3E415F" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="F698864A9493FE72" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="ECE2704F230E00BE" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="9581BE3402EDE235" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="58C28982AF2D97CC" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="86DC4ED2A9E53F43" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FAB1D7A2101B70AA" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="CD86FBD4B4022BF6" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="B0185ABA158DA5A4" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="5D6CC36B2ADE9D57" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="DAC8F5E90DA1CDFE" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="D310507D2291A361" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="6B194B1DE9E557D2" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="590B780AD0B50323" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="D761E64575836AB7" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B7D3E0C282001FE8" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="6E7E43841ADCFAA2" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="8AEDFF8803C0B701" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="C8F8139EA2FCCFFF" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="4DB25B9CB78C3915" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="257EDA91159ABB3C" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="96F8B04A63766341" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="442952845DFDE9A6" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="FDD58F7A94B2BB6E" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F8D8E6555F5F7911" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="7923748D91A6EABD" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="34005FB35AF5C9C1" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="E5180C89D947749D" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="D630972A2A1EE2EB" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="BAFB5A3DB1AAD156" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="C3FAD367D36F3235" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="DBE71B19B85491A" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="45474E9923CAC14A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="72827454FDFB220D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="EE0AB7EFC7DAD242" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="7228B40AB0AE154E" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="F92464460A272701" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="591A1D932E36BBF" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="C787D00AB5F200" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="686FF7FACED5F57A" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="D1545BE0348D52FC" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="264D4D65B7FEB25E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="B2FFCE085A26BD1D" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5EF76041B1491EE3" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="14E5754895C2B84F" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="692CC4CDBAA825BC" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A359EE905147756C" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3C0D1454B6E04D4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="67255C4804D9D0D1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7AED257DDFAF003" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DCF853B5F5CD5638" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A7AC747ED042C652" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="CDD59C9E7F1315B1" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="34D06C34BA43D578" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="7990D89ADFF58C9F" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="290F9F30711B7063" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="68258A66E30D244F" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7DB7F1FF5E2B6ECF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="34E3B3F612574DDA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="C51605BA5A581C34" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1260C70E710FB2B" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="3956E4E1D9124C76" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="4E98181D4EF98847" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A3A2C19BC9195BC" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="1BEC83FD0C936728" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="48D7916353B21672" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="D74A0F861201AEDC" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A2345A0373ACF058" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F81E78F18D14251F" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="E8B5FB74F55468A6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="8DEFC3491EDE49BF" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="AF59211B8D25DF83" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="F011E9809FA95567" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B1FCB0EBF42A45D5" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F5A5957DF9B55F2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="772C9BE84A9AF41F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="ABAFD0903457DC57" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="D028618C381591B2" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="69C6883528272D8A" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="8CC53D3790ACA1F9" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="10B836472063AE8B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="B21C4568491E1683" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AC5CBF6056B60235" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8F3AE4A1A8702AD4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="31A28D3B0F2F5BED" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="CFD71F413313490E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="28E088A1CC18462B" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="1E3F0CB23F8C3D4D" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="6A079DEB277AC671" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="3235F0F55CD6F667" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="AFA2DB96CD82E405" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="BB22806A4899E12E" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="BB4869C921A0BD55" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="2798F6D8CE6BCCAD" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="AA9D6AFBF09B3D1" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="796819606A489666" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="99A618C317ECFE4" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="90CD00A4D28F769C" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="63CF1EC38F6C4D4B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DF8A3554245FF7E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="905841105972790E" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="8FB8F49E2CEDAD37" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="85A8A5F66861165" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="1169C119693E3D6D" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="C0DACA1C880B94B7" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="E98DF59153E33063" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="BEA483B0880A5B40" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="7C08B46F99BC352D" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="8BEAB688AB7C5897" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="E8BA882DACC1D9ED" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="83FE844BF4E75161" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="E1D128EE8E547B06" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="4B91224188C9A5E7" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="766881CCBCFC217C" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="29455D759D0FB6A5" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="1387A43AD4C816F5" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="A5B4DFF32E005B54" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CAF870B1693C2319" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="1DB9914F76854700" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="232490F182D43EE7" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DA1EBB9D69695B3C" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="708171C2948E8E53" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="440F8574324937F6" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F97B110C76525F9D" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="F3AAE64E45776250" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="DFC41A9341BBE3A3" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB27F8C847F44756" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="943F81A88D40A52A" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="9EF795A1A8CD9DFB" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="96074C9435DFB510" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="D4A06179DC45DC23" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D506BF0A7CE1B554" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="C77D4FB25E4EFC0F" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="F178F277E82AF807" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="B5EDD0193AC94E4E" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E5835063E12EB544" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="9CED19B0E61EBCA" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="D1653B6170C67A78" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FB827C8893252673" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C2FA64B6F04208DC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DC3FD0FF272FB500" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="2D43205DE7CB7167" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="A1FD830CF4E359F9" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="ED6807980551FB6E" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="DD767714755CB2D0" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="E402005FBA3B676" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="CD9EC9724F35C569" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="878A65A869A1B661" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="C2852C36C0A28C73" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="8F602503BF9CBEE8" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="269002CF6334BF85" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="5B2E99602C0AAA27" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="6203FEB4B19048A6" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="23F4DDF954304352" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="ABAFCFAFF154916B" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3BCBE066CFF1CBD1" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="E975DD5C2621B540" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="A9DABB3582224E8F" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="176D8FD676B6C443" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="77BA77BD43D0AA04" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B52C6175AAE51226" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="A0E0F5A7FC21A6CE" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="FA09137ED1380DE5" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="BC5A1851D32A9797" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="3FCA0C8F5E8C9437" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FC4B41B4A813AFC3" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="131C8601C36B6374" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="849F3070B860F001" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3CD4D55458C76A55" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="43C87CEED00856D2" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="A1396B78A19E12C3" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="6BC641E394D15429" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AB886874FD2CB0E" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="BB2683C353515ED" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="FCF293012DF119EB" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="D604B8E981865866" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="2EEA7E49AE82770" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="1FD37B5898008A3C" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5CA33CF01190C3F" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="70E1096028033A5E" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="60CF85FA76709539" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8209C4808738CB4A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="BAF25F7F35244F91" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8A6374089C7E017F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="BA80C5DE2169DF43" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BF0CBC3ADB9FC475" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BF2DCA596D1522CD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D6774FE263C8DAB4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="98C8D9F026B46B4C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="734BAA783DFF70B4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3B414A50187AA0D1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="D71756E188227473" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="290EF7BCFBAC3457" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="12E6A764900EE10E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1AB86627679F48A0" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="10A6F9E5120B85EB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="537ADE6C312645FD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E9BBF67209C42E3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="20CFF6046C107BBD" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="1BDC2A221BF45B12" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="95E4B16F35753E1F" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2E71C3AD4D06FEC9" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2494AF309CAC77C9" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="12E303F343EC83D2" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="46E4000B6427CF45" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="8C3470B019A251C3" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1E77C125C8B4CE0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="97A79CF9A99EA99A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8B514BA01323887F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D61130608D1B64DE" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="71D40FDCFBEAAB66" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="455455EC51920EEF" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EE6B80B51DF7A457" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A3D432F37CC85119" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7201AAFF9778AC30" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="286138EADF87CE05" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="52FCDD874CD0606F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="58CA4969BFDEB803" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3E40E756D09A95EA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ADD8415F6ADBBD2B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8BFA182A5CF7E22F" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3A63D7234705DD0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F05DA6F5DB9BCBE0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="924E963975B25330" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F5CF4C6514F59662" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="DCE7EA5490278667" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="114CBCE7ACE3585E" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9F8D143724DADE39" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="660B7AF9CEAC59F" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2BCD5BCD914F55DF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6AFCB5A620C53A09" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6F7C73A32F0F9DC7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8F8BB3514187CED7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="FD3DFF4EED930E5A" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7BE41388A1740A48" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F95DF8016EB023BA" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3AF47D5E2C9EEB3C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2A25E4C6F28EF3AF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5514DF8B1090CEBE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C5473316A9816999" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="B2C1F40C7DA28729" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="175784A154942AC8" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="98BE31D43DEF0826" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B3748C21A1DE4A51" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="87855391799E6488" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EFB23C0C042721EF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="640B464F9034252D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3086B13274C5E666" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="D9E57C86E338BCCF" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="5C422BAD27DB98A3" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="C12AF206E0A2FA2D" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="ACA296FA8083A16C" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="59EFC79D92A0B10D" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableTuple name="_diner_leave_state" class="Tunable_DinerLeaveState" display="Diner Leave State" muid="945D9E47D804A1F2" description="The state handles the pay bill process or they finished eating and&#xA;decides to leave." Deprecated="False" filter="0" group="State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="16F8EBC8E2706B6B" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="B9412C2C38714F11" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="80EEE1CBB2603C2E" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="F802F353522F57F9" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="6B6D0ACAEA4440D5" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="A2AAA2907D933A7E" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D3B93C56D018FAE" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="95FC326E11B49C62" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="5CDAC386E7231907" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="2DDD0B617BE885C1" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="39BC33822AE71B2C" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="F68FFDF390F103B5" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="608628510A30F504" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="F6F0D349217EC71E" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="38BD7910A7F95C24" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="C11A6BF8618E900F" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="ED038880191DD9C6" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="42CD2DDFD5D23A29" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="A544FCA5B3B1F955" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="69649B7BDC07629B" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="5A893B1CFD6A9EDA" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="9EB586FF91DFFC40" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="4F6A4DE52E3C7C37" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="8F831C947868B2C5" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="3AC24A3489EE96F6" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="4F19CCBE4C8EF831" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="3161D16DE35BF218" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="6A8D6C6947B44655" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="8A375FDD58D08A9E" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86A8616D7E14EB4F" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="716CA58CB18BED32" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="7C68DCE7CB25563" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="2C3A69A3A51DFF8B" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="121896567D28FE58" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="CD12FE00752582D" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7AE65DCE277DE180" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="A4DA2BB295D058AA" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="10C8D3D6DE8814D1" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="ABF5196E7D03895" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="CFC787E88BF0724D" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="24FFACDF6756BFEB" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="357948DD11379A07" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="E2B1A7878AB41B8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="A2F58420018E9FAD" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="C80C2045080D33CF" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="A867D94F01ECC87F" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9E0F4CD55BC39F42" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="92E068BFC8396C6B" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7AC5D53C4133C6D8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E500C57F174C6411" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="41C3E5B8351DEAC5" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3B3E401C2EEF0CD6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F58FAA139AB005FE" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B939DD384CB9CD4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="23310FFCCD86AEBA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B8FDAD418775DD55" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="550C4A6A5C90A561" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="B04F20E478B672B2" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A1147D843413CD02" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="280EE64F57682C57" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="401D2342F01DB35D" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="844189D0816C160B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E62F845061DC5398" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5D5665C6E0DE4CC4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="30E76FAC010464A5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="DF4BE50DD03D85FD" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="2703BDD52C66E53C" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="4A69B5BDB56BFCC2" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="A5DF3D48D21192C7" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="46A7446458298CD1" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="FAAB455CA8766D47" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3C9DA4907486419E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="62D268ABAAE3FB0D" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8AEB8293282FCF20" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="F23776F519894923" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="42096BC3A024B4DE" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3DAD6BF60D0073E6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3460EB82F26DC454" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8AE3DD1B777B5B82" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="573EFFF01BFCBAE3" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="282441FFFE099AB3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="93B465A35EFAE37E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5BBCCDFF03B063BD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="490CFE915564F73D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FE19D146D4227A4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4EA8F374D082C8DE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="14636F8FC9D8224D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="EB0CA52DFA072629" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="46A873B2A684A2CB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2311D5A3491BAA9A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FD48F443436F1BD8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A8AADDAFEA313EBB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5945891211A9D44F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A8700B831C6D0D76" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="51322A90027F4E03" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="8E3C953D6FAE833C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="6C517F60E8AD9BB9" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="A07D4498466925E" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="11C3D5690F322105" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="E36040950598F528" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A8A3395D9D6A6ED9" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="3801F24F05F7B5C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="93F2E17EC5447354" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="37E8ACE4153E59E1" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="AF54B383106FB5BB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="41E67706C74852E2" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="6C76B395549DBCD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="1D5273C03F9258D0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BBAECEE00D087CA8" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2BC46E3E124444CB" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E95F51DB0772AE41" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="AA8882CFA58BC9A3" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="ECD2247CDB6E81F9" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="5533ADE92985D34A" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="272ACC66A470FB5C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9CEA9D7602BACE4" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8FB084E1D64F0998" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="D69A590819D49A93" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="17A4E5EBA18BEA1E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="FFB6AD73DDB524AF" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="2CD2EFCB4943DACF" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="61CE1E6794ED3DB5" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="A754B908D25175EC" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="4E164E1217FF1C1B" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="79382A1B3C112074" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="D0FA4471977B7199" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="89CB5017A5655BB3" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B3CB94C6E7FF00C8" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="B46CCD2BEB511316" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="B261DC7F751100E2" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="347ABF7BD133D6F9" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="145199E04B515DB6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="721975F98B865BA4" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="5DE7D4718ED42AF4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="19CB06D8CC811EC2" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="83ACA6113EDDF16B" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EA9E065DDBE2C587" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1EC9CE787E32C13E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="C26FEF121DA2E75F" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="E9CE2FDEE8A2EE03" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="7B9E6A10F1FB115" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="450E3DBF9A01B5D4" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9575F076639474FE" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FEBD3DDAA9932986" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="80C1AE9FE51B8987" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="9A2C4246F6645A1A" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="5B0392D551CAD506" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="F80190F510DBFEBD" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EAFABB5CA5A8FDC0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2CA2A47F2694B21F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="B6D78EE70AA26711" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="F894A53E03973A0" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="6E6180DF67DEADA0" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="8AE9C499A5AC065D" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="6B11EB02FC91824A" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="ED41BEE76B8C4A0C" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="7B1F29E319AFEC33" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="17B82470BB7453DF" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="A051C28476C4059E" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="3C5854D2EAEBCEAD" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="1E0A98E64359138B" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="E8341EEA87B5E310" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4FB8A3C4619C1610" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E991D59AA9238869" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B56D199D4E89F880" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A2B9703B0548D3E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="52F40C2BBD1D80D8" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A6FAFBF952E458B2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="A4B9025E60449838" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="22086D7D2D64BA2D" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F0A42F09DAAD4D00" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="6D35B6C45208F4B" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="EA4688A6E072D9BE" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="5D7EF71DA6AF674" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C9A1A387095793B" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="61468EBE83AE947B" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D06314BCA09CB34D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="76888A4E974E3328" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D7341012FC456166" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="78058A9C9E5A298" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="90D6361B9DE13F66" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9416720FEBD00493" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="39BA74F98AF8AB10" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="42CBDF5E78DB0243" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="4535CF27021442C7" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="C1E598C7E27795A3" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="609FC118221D11C5" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="63F7AD51DAB49D46" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="7356278917017E67" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B4C1CB28C70CC73" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="7D6BF6C5AE1750FA" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="C84B2DD9C9FED455" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="47F3E2BE26A04B58" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="AD40C12BD8445C35" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7532D03764CFF7EA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7DBF8342404E22E4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B025E2E13091579A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D73AAF8999A3B7FB" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4F937A4F15562DB0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="40A071765D5A3B29" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="26FC24578AC288A7" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="FA5DF441F17BDFB0" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="F1AE28F5A4495FB4" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="CD5200973621783F" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2CBF02BDB1F98D4C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4289C45200DD1086" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="CF927A5160B2396A" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AD29FFB7BA49C0C6" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="DEB109749D8D5262" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3A5BEE9E760DEF33" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="332DF6D0F07A4E5" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="28385253762B8185" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5BA33C47D5E4801E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1C552B263A126396" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="8A4940F1942E1FA5" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1E6CEB18E31EE8F3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="71A16941682F9034" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2BECCC76A262AF63" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="7EEA64EC1785F422" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A63268C3E0A10EA5" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="3787C2B8C9446EFF" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="98E9118156E1065D" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="768583C3834CC5CA" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="1D7183C18BF093C4" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="CE9C4B109EC42DBC" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="390BE2D4FE57E7FD" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="C6C517B19D9C308A" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E46511E60FFBE293" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="2C641FED98D4E82E" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="2E5867AF3ED53948" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="36CD43E47D186FC9" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="6C876150BA852E06" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="811CD7AA9B93D903" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="66FD27A72ED1B7DF" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CEA2E43D235BE832" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="47F478B8BCF7B6F2" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="3C473CA62D9B058F" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="2C7F7B39D88503B4" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="D92E49E82F92D94B" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="5C80538635421809" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="85B96BB9CB9C2CD8" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="604EAA2ADBF75F5C" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C85F27227CFA4F03" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="63BDBB7DBC8CF91E" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="16C370893885FC06" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="B27134F7FB13E828" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C71BBEF0A3865A9" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="27475E77BE11B69A" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="31DE48FF9D9D307F" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE999575C394D44E" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="F23DFFCDD82D30BF" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="B7F17A57FF4F22D3" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39F95294FD873030" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="53C320051FBA60BB" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2CD436A400C70F76" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="43DA20F2957DF620" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="50734EB2756B25DF" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="59D432D11ED184BC" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E643E33A1EABB8D2" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="B33A596DE794C097" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="97E03B0F75034BF" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="E66239DDCBB0E705" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="48068FCBE41D7F7" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="DE82AB4B910DE861" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A9B9A9451CFE7C9D" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="E3481FB791F13252" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="4E56E43F2B177CD7" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="ACF572B5394E97A0" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="C5152809441C46D2" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="E28E843FCEF9DBA" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="88EB6A6B8514AC9C" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="CE076DD5E5BAF134" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="9FFDF52531E8471E" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="3A36B6451122FC29" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="43C002B95EB13158" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="DD3141716E79331B" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A17BC78AE53533C" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="B44748B85CE98F88" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="F5E02AEC7DC7A0A1" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="A21377CFC21FC328" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="F731FE9DED5BD6E8" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="AD83829AAA44A743" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="194469126D4DF463" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="3C0BB2D8C960DD3D" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="6003DC0C95C2F9AA" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="DFD535CCECB53B17" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="B0C881373ADBC14F" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="83B8359A8655D7D8" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="D4C061EC66FD10DF" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="1A8A75184BF51C6A" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="3EB72E833C09D6E9" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="1F050459407DC1CF" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8725FE3EDC2A0FA4" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="7B9FB9B523F7581C" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="9273A590B291348D" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D2625E47C3FE36A5" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="63FF3630A4C53170" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="4D30431882C6DCF8" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="33666A6DFAF6F667" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="2CDC1C35A278C64E" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4931A4D735BBE5D8" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="1A7568E56A75A38D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49375A10DA8CEAA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5771F85C1F50CE61" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="F275817DF72A53A" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1EE83D9D95A24DEB" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="8346CD9406AF613D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B0CEAF982F9E2FA8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="A7306EBA3381D16E" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="8CBB7A48BA4C8EA7" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="A8DC5ADD190B4083" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="6594CAFA7739EB50" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="22CD7F15CA1DA75" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="19803A050C57DDCE" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5A452D015F3E5212" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9CCDE32402E298DA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="4FD14EB3B22FBEF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="D30390ED4B6763B8" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="5FD605F94DF897BE" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="4481034DCE9842B1" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="68E099F28375EB85" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="C8DF797FE19444F2" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="FB84EC6C57089FD5" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="DC1CE56404736EA9" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75DE73CCD4509875" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DA91C5A5D7E64F31" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="14388970122A4721" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8452A9A488E332C0" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="1D89935C67C0F828" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="6A7423872EDB491D" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2E9C2EE0465D221" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="8D0E5180F8E46242" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="9ECDFBB7B116397F" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="68DBB4497EBEDA66" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="141B1950FAA547EC" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="1EA6FFACB2282EB9" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="1070D6DFF364A540" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="73C8042E02218648" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="2A38C9011E7804CF" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="58C4F1077060386A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="412EDC1F1E69B575" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="D9FBF671C75E00A5" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3C80BA8397A30F98" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D1848F1EF2E06E5A" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="20E8D9461E7BCED4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2C989EFEA6B83A62" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="51D7B1482642D1D4" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="3BC88DDB419787F0" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="69905BFE528FB0F2" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="8BEB6F075D51A9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="53720F8284B3DC89" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="66445A4E84262FF2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="88EAED011FD6CBDB" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F9B92C66309C83CC" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F7D3FD995A58B397" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="FA24DE985C149638" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="FDE011E42C121653" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4CAEE1465CC950FF" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="69C1176DCDE9A07B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="A6C6C8276A767862" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="E74063987599BFDC" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="5518511A960C4047" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="A103486B51ED7673" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="AC41F348A587CB84" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1E006D92ECCBABFB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3F79C03E70BB8612" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="5191AB38A45FCC2E" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="B847B54D8C8B212B" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E8937117EB7B9A6E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="20F4DF61AE044D67" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="A79FBB96626EBDEC" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="3AE4B664DD650A92" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="17AD743AF7B30802" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="4522A57C153FF318" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BDAD073F5F022122" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="6DA9D9C8EA5D202F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="82E2D61C0E47AFAC" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="227527018782F85E" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="9668D24D2F155B35" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="68D36D57B31A2D8D" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="436905A86245565F" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="D2AC5EF1BDEDDF98" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="24572B89C9741DFA" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="F67BEB9A93E8AFC9" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="9B1A9421877C0777" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="C00CAABCE5B26D6F" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="4755E59F4FB7823F" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="F919B255006191D0" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="C1B71D24A8181C4F" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="75BAB2F219EE346C" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="2B32EA1C7D210D79" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F93C208D98DD948A" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="5E7EB3D23AAEBF9F" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F918DE27155C824" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="F9FF08EA6EDBA948" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="B4B25B7887486829" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CD98207ADC37E75A" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="17F3ADCD8588E615" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="1FB1A65820FE3287" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="69198F9C67DC9054" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5DA2B9535535E0E" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="AA760E95316246E5" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="E9F395F7DD057F3" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="6A69F7044E2F7842" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="EC49FCC545255501" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="A8F2C8C6ADDDE19" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="12272E15FC35D6F1" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="840B957464A9F46D" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="A0FEF086BCDCABBD" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="BE8E1A49A6357D77" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="96CCC8E5D4EA5450" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="2CCF5FBF0140A4B4" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="970EF4FAECD2F353" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="AD54EC44DFCE9C7A" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="F2F9F2EF96709020" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="53274008974F5A22" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="C5B062FF5B290493" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9D73E19A432CFEA1" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="648C7DBB8AB4E1BB" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B439AB4792D1C298" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D5D0C64AA9C95D49" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A5276CA240B43C5C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="847112789A5C3EF4" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FC300F7F13CF74B6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6A09ECD64C54625E" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="933B800BB8E13968" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="F7F6B0A380F4CF3A" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="7794B95ADAFC2F44" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="8563CD6892DF8BD7" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="23948F6D6F166904" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="BA26843F8FB7919D" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="21A24D54840A889D" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="9EF4069830601522" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="59CF81B022929B6E" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="AB92901EC691004C" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="28C8FD7C9A19044F" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="362651A43039F48C" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5AA293CCFD920A48" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C5BE77E468E30100" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="CBAC66497D8647AF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="5C020ABE23D097A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="D424313814ACD7A1" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="F1C88308D430B809" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="422AB264056FC103" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C1F156017C10821F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D813B863D03EC584" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FC916DD224B6E75C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="52A63B0B21376457" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="14B357DFDB33D52F" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="449E533BE7FD936D" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="E556D90268E0FA45" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="3863DE313D5F6555" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="8D2C437D8AD4469F" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="A27183CABF842A8" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="11CB7148F4BF814C" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF88E070CE834B0B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="809015F54DE6CF4E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="62483BE3CCA4EEE" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="9D25B21C057249BF" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="E534E696B9605BF7" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="A9A5EAAB9CBC11BD" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6ED14FCFBF3C95E9" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8D26BF1F5F76ECB4" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6255CBE77C41D7A1" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="A8AF1DFBE3FB1B96" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="E7E2C6FF1ECE6C9F" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="21FC7F764A90A2EF" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="555C99E2CFA65D6A" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4B1E68FF27FB6DCE" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7E53711F4F81EF2C" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="F37F8851169656DF" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="85686A6C7524E17" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B023A8C479CE91AD" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="ADE255F24DF75D67" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="73FFF6F070334F2F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EBE274657F7AA50C" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="BFD13C3BDF11D11A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="454F15AB4EACFE82" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="417B77672FA76E0F" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="478FF21D7B725F35" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B44140C2E211051A" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="15473EE0AB58F3DD" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D9042444660F19E8" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="525A3A51342FFCA0" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="1AC6222460451066" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="E16614AA8A011123" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AE095A7F0D8D4A08" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="C19B3A36A77D1407" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BF99FA602D349A98" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A3EE85FBA175BF89" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7D120FAF3B7A476F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="635CC3AD020A4DDA" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="88A8F964B66EC538" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1A16B3A4256FADF8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2C8D3B36C1A9C558" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B46B6A13BBEB965C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="533979D0BB424283" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EBE8B7302EE25DE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5293FA0BDBCDF901" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F671B5674DF1F29F" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F482AAA319F3B2B4" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D1209C8579A8E565" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="997B38C5669C527" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="536CB82A9562C96B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="289CF7E5276F6163" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="60937D01D00CDA6B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E91C55BFF1DB2855" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A081A45AF386AEBA" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="43B3B24CADF9A033" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="68E789560A52BCBC" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E43F1AF416BA1541" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B7FF933613F0627F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="FEDE57E61FB45615" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="DEADCCF98AED9D47" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="AF145B964935441F" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="391419B68D25F5B5" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="C7E79F4A9FA58D57" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="26541FAAF34D887C" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AED05E49C0C097B1" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4371A26BC28FDA14" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="85D9C567F1FFB5F7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DDFAFE6E097CA5B8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="A750ACDF4BA8E038" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="130CB6FC27656AF9" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="A9FF318EEB4EA68D" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="DAF35D8E36AB1D72" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="8E0B3B20F9F70DE8" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2939B7E67E0F95B0" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1A186CE42D06C079" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="115FA23663D2CB2D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="E88F3C6F8CC5015B" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="6F03A77185D1E4E" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="3991E6B492B9FFDD" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="C1632E16D6693997" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="C45E502D3F91A6E8" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="CE6705B3368F158D" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="DFB62E853D76E2D6" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="1EECF6BF5501CAE9" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="F55DA50A4CFC55C6" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="43F9B44449D81DAC" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="334C785580DB628D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="1C3C4A45BE74BC12" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC0B5935CF835104" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9618F94310C2D5F3" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="E5EEDEC55C32AFC" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="C0877BD076A05707" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="595112B88654C75D" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="998E0FD16E039250" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="1C5734AC2A826C33" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="3D8E6D58C0571ADE" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B447D69DA5FAA09E" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E74108A795DCA6C1" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6057D9BA03D6FE62" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4015BCE47FF063B5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="7D13ACA57C6CFD71" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="B158766FBB1ACAC5" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="39676A862EE28AF9" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="218101FCE9D11637" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="7BD7AAC9806D28BF" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="7349B038CEF487E9" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B23AC96B6FC22B" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DC1A5CE95DFD00BF" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="541D094FDC19785C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2C1BFF29F61DB63D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4367E138DD331481" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="94B970D8EA7ACA64" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="FF48AA7E62D04554" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="559E20AF5E307811" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="C9FCBAF75383D8C5" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="6CD4F7D6EA62167F" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="415103D5657935EB" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="E5EF8A42EF62163C" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="322C7817CF020796" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="8065889E93D43B75" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="E068FEE9FD53E300" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B5F07B6A3092BE0D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="43A2926B4C73D759" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F22ABDBED4210231" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="594EA4781FC0B197" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="5E6208BEB7110AD8" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B4B15F9633BECBAF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1DE05A18C48C9C71" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="48E73B1073E30F6B" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="CA54EDA4B55ABDA9" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="46207414F8341A53" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7AB445E0EA78ECFF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="ACD96A4583B7DBAE" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="867C72477321025E" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5A10130C77F0DF82" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11C250BB96707757" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B5F124942E43CDD3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="F9A30F23D8FE436" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="A295F8328E1DC722" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="7452C8934E2509E0" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="95A19FA1966D437A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C25F64DE97ADFAB6" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2E22A1F621027AEA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="83786B89EC6BB274" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="37239C7F2602ED00" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="5A3F669B743A9263" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="F815694705D8B288" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="CF53CBDA3BBA1A1A" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="12B8758D8D07C811" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="F8D6EED2DA305451" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="7698F55371D90E5F" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="9613D35B3DD2349A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="C46FB198C571A7F1" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="B53346C8FF00DF57" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="F6F840F32717EECB" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D1B20DF78679AA00" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="94829A4D12D250F5" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="A9C55123F4248EE2" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DF9D5059FA74399E" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="8F465E80CF9A4B26" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="B568A7A288FBB38C" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="93523261C98FC168" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="59BF012DD169FCE5" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="ECE3006A831B17E8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="1560CD9A17645FD1" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="90AF79BA5D55C4A7" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4CF83B23E5A8E312" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="1E5DD01C9C217D0F" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="5CAB8CCA46F76968" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="56B3D567A4C90C06" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="CEC38021D9BCB8E6" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1EC05CAB16A2A13F" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="F43FF37CD471E046" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="405B28AEE41CB344" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="46C1BEA67A39A95E" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="398E31DAC779E2D2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="1E730419579941C6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="E5D3E24D28753E5D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="7C9191B78F753999" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="5721D93F24B104E8" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="913C35F1F293FFBF" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="56F9424FF0B2FE" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B92074BCB97DCD06" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="9ECDED024ACDAFD5" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2E869D3DEDA4E1FA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8640381A710AED20" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="5703DDCB4CAEA332" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="CAA9E993C5F90B33" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="4E1AA48829DD5FA" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="A720CBEF6A576F1E" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="5A9E17407420663B" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7ADF236C161EC886" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C52ECDA5740C8558" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B34E5FCF93D71C4C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="AD1E851E33B5636C" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="DC51205A1493273E" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="2C677522BE705737" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="CC6936DDADC285FD" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DC4850C7D9B78ABB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4D33312F295419DF" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="E96AE450E40D78F4" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2168511B0FBB3BE2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="97534D87377A32D1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="6981C290820FBDDD" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="BD39711963C3CC9C" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="20B5E45C0E2BD586" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="BCADC8B482DC955" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="466D247FC7ACDFA7" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="BEFAD9527BA01C95" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="DD06611705840EDB" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="B0AE8EE61B6363F2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="BD2BDA354611285C" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="54C6CD371CC6CC1" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="E28AC7EAB691BA75" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="42EC5AE2840DB6A9" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="E38465DB478BE44F" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="F780D8912040650F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="10507AB2C9BE2FFD" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="A6506FA95E3C54E0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="BE12D7396ABDE277" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="443363C254126E0" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="40063820ACCD716F" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="80AE7D731A91C296" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="1596330A60CD70EB" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="9115300BC371F56D" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="108E61DBFAA9F0E5" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="BD8089169F890165" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="E8F180FD93A5EB9E" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="D666F0073CD5E73C" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="73EFEF66B3706A25" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="3CA4667969914A7C" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="5E460CFEB4DD93EE" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="3401C8ACC080F880" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="D4191090CDC31677" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="367E5C289C35CB7C" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="C76F0B4A01440F6A" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="36EADE1A3EA17209" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="74A6B2663B280EBF" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="982638756C5B13AA" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="4AEF11613D15D1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B77B34BCA184FB01" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="A31E166182D1755F" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="BDC4D152DBDA94C0" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="FD56626B91B4D835" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="D04361A878598FA3" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="794562B96AC22C0F" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="C7FD012AD1D73AFD" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="C84CDFB8EC82D337" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="E10D68875F5883F3" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="10025B594096EC03" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="771C57540F10B101" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="A6E0DBCB62A821CB" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="1FD51CFEE7FBFBD6" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="B016F16C0BD491F2" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="3DF0D11E269B0D66" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="C7F62F45448A722" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="48B8835729A982B5" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="3C39EE51E5BA18F5" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="E14FDAB60D957E46" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="87B922088D4B9068" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="925F413FF81838FD" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="828E3BF9B8E0FF90" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="C4761A3BE7E6F074" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="B077CECDD173EA95" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="5B2D3E0FAD6F7AE2" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="846467CF5F83C729" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D36D75D15211D17" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8D2A588EDA3696DB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="B378FF78FF25BD55" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="4CA54F6BEF371267" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="CD21E345104A5B38" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="E38BD3B67CCD34FF" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="BF3E01A2154EE017" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="8C728103FFD63423" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="34124BD25EC9511D" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AD17AC845114944" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="7CD3BC882CEC8D23" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="25859A02EB69E158" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B2F6B36816761103" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="E3655825322353BE" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1007262E667EEA69" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9688AE0D0783AEBE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9C7A442D86664776" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="368BAC42A37D23CC" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B84B17FEE449C377" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="59F21ABE5B84CAB1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="FE0C74AA3C2323B2" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="22E37C72DB69EFEE" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="3E97A3D5EE49F077" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5363A84E22FB058E" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7358B0775D11C1F5" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E86214E010D44DB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7C8DD751116D8B4E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="441A9AB594D5C38B" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1261D2A4BBE143BF" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="90996A5E32E619F0" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="61E668D9FDA4114" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D23D98F990C4A28" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="895803BCD020CB9" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="26A7FE36F0D45A46" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="5B2DB81022A3E9EC" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B05B60640BC084A3" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="3DD68D49BAA22669" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="F24BB1E8D6E5D74A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="C1B65C15229EACD" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="989999A22875E075" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="ABA902EEC40839C" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C6212DABA9AF36F" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="69FBB99A417D777D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="24665B113F043717" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="BE174D220F6127C9" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="4F2E120CC640FB5A" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="1C8C22AD64DE1A8F" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="71DBA0D9093830FB" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="DFDDAFD1D9550F20" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="42683ABBFC34B949" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F08AA132E6FE200D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9E556140796D8580" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="96218F61B59F04C2" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="59E8C2B688AB0136" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="D8CC7F511FC0EB7B" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="F05E15EB8F2429A0" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="8A87414E9C8ED874" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="2CF6E2C8C2A15BE1" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="9FF5CB9A100EB25A" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="5047CDFB3F819DAA" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="902AA0C1099227E5" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="4136CEFE0CFEF8F4" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="5770AEC67217F2DB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E38B938CD9131ED2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C05AC430745648E2" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="2E2A21C036A4A42C" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FD37186ADB184009" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="826440CFC78969EC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="C644CEB0B61D821F" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="8D6CDE71B69E64D7" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="5DF087C83A0390B3" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="C7B148404ECD6334" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="18E49AB49222D8EC" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="754710BF7F5F4407" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="67FA2997CC7448C" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="D84912FCAE46BDE6" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="3D39FB0930D8ACF8" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="74BACDC5030E08A" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="C459A4BDC93E6876" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="CC8062B73C07FD7E" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="4A32BFCB059EDDE8" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="1AF3C673358A6707" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="5A12F6E522340F33" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="51395F7F16B79AE3" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="BC707DE2BF3562C2" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3501C1DD79A24454" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="E04FDF73D769926E" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="F0EDDC1A6CE01EE6" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A454FF1975D56FD8" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="4359430F05F36CBB" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="4CAEEA0068ED845C" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="297376B20571783" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="B723AFA37283D577" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="55656C34545D05DB" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3298ED11A482AD49" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5AD4A317A37A60B5" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="AE6C5C6CB8088ECF" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5BCFCCA5D02720EA" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="75535B0F518D6D92" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3B148D002D8C25CD" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="CEB332D7528133F2" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="9122141D17B6D378" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="E0F8C028A0FB8425" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="392256540F6F3880" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="D3225F65D8045582" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="C93BF862D6343990" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="263553066C6F1E1" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6DBF173654A59EBD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A89BE3336D84060E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="BE02289E370C3392" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="F416965A2F59059D" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="C7C5E1ACE8DCB6CE" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="F03A1FEF1E3813EF" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="250D6F6B08E27C05" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="6F03F82834D80F1E" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="19429E5EF5CA0191" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="52F46D8CD08ACF9B" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="86AAC3ADAF7557E1" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="6B9C3248469E054" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="7E0BB12466593CCA" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="C55C822006469DC8" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="274F1ECA15BE2A38" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="DC50CD3556594862" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="75288B284B2981A1" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="AFFE9468EF69DBF1" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="F0E5091FB711BC14" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="431AEC7AA6729DEB" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="3BBFC98D9409EF52" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5B33DBFA31995A22" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="66E6D3DA82E0D5CE" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="4A4D058B9FD9391E" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="7600C6B8C7F965BE" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="CC1427B82950042D" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6EFE64F00AF5E9DB" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CA1D86A0162D1823" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="230ADC515CC128C8" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="282671F42A47978C" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A282D8CB5848FCAC" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="DC258D7598E4F0E9" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="C8D595B3BC080172" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C3F31D0CE648288" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="C69799FF1B20791B" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="A5D9876418CAE5CD" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="30CA003C6663E240" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="C820AA30AD772DB5" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="FB0CC854277EA492" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FF904FD9FBD9D6C2" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="5B74E2ACBC612206" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1F66B5D2A7DC6374" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B84662CD2EC3F05A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="248C610DE7981137" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="955DDC57D961CB5C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="C690028DF7DBF7DC" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DE615B9F6093B050" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="54967FFCDC2DD1BD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AAB87CDC0A4A23DF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F00D7168E475E888" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C5B6DC9EAA1E0C42" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="87FAE3DE32F977B1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="BDBA35F60951655E" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="621F656B43755E56" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1EEB8C49727CF308" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A58922B06E9A4F0A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F5E3FA48550950C4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="27880A14BEC51E4B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9A4587DD2BCCC8B7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="92918C9D44ADBC07" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="CA990F8ABDC3BEAB" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="19FC07BB1CA294FC" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="42B33F88A38E033D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="486941A99F1E09AD" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="3881F43086B24495" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A2A23A1B0EEB22BF" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="60848E421930E28E" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="89594A1CCD6D3F75" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A0B27449055BE155" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C29AC500B5AEEBDD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AA99C59A13CAF85E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="35F6DCE6B3151DF2" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FFF3C6C8EA55B722" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8B51F8A40BD61810" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="627EEA8412B5C9C3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B430F6C53C0453EF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="230716923C06FF20" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F64130A4FF59F8A0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="CC0ED58215C14168" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DEBC2CABA67A25A9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="91A16DCC60DDA3BF" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E6CEBA38D04EBAED" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="60BBD0564F8F504E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8D6ECB2544656C9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8ED91DC3A3E4E0BE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B53774024FC3EDE6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="663271BC7A281FE6" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="9868EA745EE94B23" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A294850C7C0734DC" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="4D4B21BED6687EAC" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CE7AE933A426CA2F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5DC5F2AC9EE6EAA1" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A15E86DDC3926CC3" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="18327A7B327CF510" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="FEF624B8D9D68782" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E67BF7BBDEC4F6A3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="41F9E7E776991530" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8B9F3F360E16CB01" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CA035BA7AF68F2B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="287745BD2DDB5FE5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BC6BCE9F8718167C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="C467BA5E19B89213" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2E51ECEB378DF4DD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AFC02DBB1A69CE8D" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1AED3DAE151476E0" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9CA9064942FF986A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BEEFDC8CFE6AEE3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D98D304F0D28675A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2D840F567631C580" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="3634B34CA32102FE" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="D143514538AB04F5" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="3E141726898A54D3" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="3269432759AE1721" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="A245D21F77BC4235" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableTuple name="_diner_order_state" class="Tunable_DinerOrderState" display="Diner Order State" muid="FB8D347863F7B31B" description="The state for the dining group to order food. They can either sit&#xA;at the table and order food from waiter, or wait in line to order&#xA;food. The state will switch to eat state when the table order is&#xA;delivered, or last sim in the group finished their order and get&#xA;the food from the chef station." Deprecated="False" filter="0" group="State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="8D0B103B75B75815" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="65EA91715BDCF856" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="1CB0603A1FF11A8A" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="632A719E61C65565" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="C0979F4C0498677B" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="2BF118A69AB2A08B" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B32B3BD8924EE60" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="36537583ED3E30CF" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="810452FB57779D47" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="4D1817EC1D139E2E" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="10CE70EFE153A521" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="A9DF96597AF179F3" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="15C6599643A8352F" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="5C262A849B37BB11" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="9B77B4BACCAEEFE0" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="19F23C1378F8DD7C" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="FE4331122E3C64EE" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="8B5A37B48DBDD091" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="A836159A1B4CE845" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="9D0281E36D42125A" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="B7597FAA2504FDC8" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="17AE5D1A2CCA1778" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="9C7F02FEEE704D24" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="6F54F8358422FA4B" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="8A88E87716EFEC14" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="6CCF101A4E7CD827" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="8786BE7FA2F7271E" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="F00B74A517185A59" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="D7607863BCE07E56" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A0FB7F5EDDDD7F1" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="34746727B2C33559" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="F31395F4D05ACF34" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="7A97377264AB1008" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="D65BBD98AD7BEAD1" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="EDCEC761064127D7" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="39755B01FD522D19" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="D3D75013535E79AD" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B4DEC17AD8BF25D" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="7DE534EB8CEC28B" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="3CCDEC5B724DDAE1" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="7787F3A71F1DFE99" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="26427094E28F1BC9" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="D6C28E9ABAD96A8B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="7F3F7C5A8C41923C" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="D98942EB16B854E5" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="5459233C601D1A9" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="328423DA2F4FC06B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="24AE5497FC38FB5A" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C6DC9A7E5BF6E837" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="75AA2197C8642460" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="C4B4AEE7FA5AF168" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D8386BF072661A7" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="350DB1429A17B742" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="87FF44D3027A7CC9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D7602C43061735DC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B138D2C56908ED90" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="52432C1272B66BAB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="193DDE2BD06C5ACA" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="979EDAA56029E729" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2BE0130F7E95ED7A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2067D79025111056" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BC46D1D0BDBD552" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6A2900E10D7C4FD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4C6B1A4783D3DA2D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B97A47C5783CEB5B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="B85CC234DFB51B67" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="5DF65EFE17F1A7FA" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="77E527AFAC7194EA" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="58DA14337CFF9726" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="BF31FE14D58E8CB7" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="594196301B504056" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="AE7CA95067441A9A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3AE80FCF51370CB" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D6611DF37DEEF317" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="F379BA5388BA5D38" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="43743771AC9EE0AC" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="23645F81419FF65D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="196A9A25DF9E5E25" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="BEAB166109B1604A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B4BD419EB99D0D1A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="DB84B7C297CF81B4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CC17B503AA4E90AA" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C90854DD5985770E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B4A634724E152665" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DAF31DA54B5D9FE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="17F47B8FBFE1C6B9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D9CB5375C7AAED80" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="3180FED6BB58E454" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="21C45865B96A799A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C9D2F7615560DCAF" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C9E5294203A1A5DF" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BB6FBCA2CB6C5FEE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="62C434E36DF78661" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="28F0208D0D926E6C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2320E8ED1F405F10" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6F721732BAB7AC29" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="5A2E550FE8BD6C7B" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="6FB57ACE7E44445E" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="4D9AD43AD02D71E3" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="876DCF4B26E2C2B9" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="45B5DFAEF0E16609" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="D356BC58BDDC67B7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="2EB390F9B29CFA59" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="BE69002ECBF61851" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="E61DE19BFBFECEBF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="B761410655E5511C" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="F407415726E2D59A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="33BD4A9079CE52D7" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="12F039E9F22E15DF" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BC91FDAB3035674A" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="457EC23A805D815F" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="90EB58F396A8D809" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="DDC117CB6B4A10DA" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="E929E5E6935EA628" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EA1C0BCF58D10D43" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="503BB36772080E09" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D178EDDE8BBDEE93" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C6F59BD3CE535517" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="2CBE8DE0A42E8720" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="18603D3F2CBCB542" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="F90BDD1648482F1B" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="DB3019DA0FB5D0E4" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="29978A8EE952AC05" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="4FA6603528E3653F" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="E933CC92D05B4511" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="5B849B447D9DD456" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="3BC263F5CB781F6E" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C97CC834CECE712F" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="F1DD77D04B4BAA18" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="67C5369206E1E506" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="C1B9D72943094140" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="7F3702FC0669C6FC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="A77135625FCC82D3" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="557F72BF0A01FD44" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D91B1847C54D6E46" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8AB7725E37104668" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="C3DC9ED2AD9DEAC8" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="DB7EFAC332295F95" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="C5393B9BE7EF4D74" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="86F725E550C97ABD" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="D8AB02991A306832" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B1CBFA920DF848BC" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2FE3153B0A7000F" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4667FA648B3EEEBE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="F0DE90AAAED9C3D4" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C870761858E4FF2E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="2282A0650F645384" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="9876999689AC26A3" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2BF5D03D3158CC1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="582D1E8C89470E30" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="4FD2E5EC80F66313" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="5026E4AB2AFBA145" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="31497CFC1CBFDBC" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="572A2E2D2D4E5CE9" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="4C04AA795B904366" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="97AF4498191E6C3" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="1943BE86A55678DE" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5549FB62DD3B036F" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="A8E77CA005FDD286" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="3ADD827E685B1636" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="353FF169FD1FD9C9" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="5A164D4EE3E33D18" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2C9DBC328804795F" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="327B93AE431B2DC5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C03C77A2496DB103" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C373437BABB801F3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E2148342A9DFE673" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3050E0D11C29A4" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="13266015CD690621" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A993175D65B829B7" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="D78EE7D03A5B6B39" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="4E919ED5A837D345" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="2F131646B82C977B" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="E05B73AECB4EB0B0" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51A79DD43C677CA3" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="901450EEB825542A" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9BEDABBDCF0DB879" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F4A3EBF1B28D0B1" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6CC83E34889371A1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="486E7D9689EF819E" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D5C8EB11FDC9297D" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3B7B429FA9B79A01" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="7F6A2FA0F9732C7" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="DE2EFCD113D6BFF2" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="434A623D56223AE" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="F9F02BB864DD6AF0" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="ADC81998FC7F0914" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="7D9EA4BAB51B767" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="A0F283BD9064A3D6" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D39C1ABB77FC1BA7" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="DDD6518AD3A361D3" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="B9063196FA66D23E" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="37A2BCB0F1599520" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="64A04FB7602622F" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="97C03DE5BA25ED00" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B6915848181BE8F2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8C5DFACACF6FE013" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EFC32950118BF171" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2030C6EBBDAD0D55" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="9BB7808A75FA94" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="1B316247799C844D" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="4CD57995F816383" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="52FA782A4C9D082F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="89A0C91E19C35D65" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3D1DE6F87C76C87B" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="5B5905F033D3AEFC" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="86A3CE13E48163E8" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="14525B8BE4F57CC0" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="E3831289CECE6E35" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B9509328F03DA3DC" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4E1E71FE6D554491" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="7F13A050EFDCE6C6" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CBED1F2DCB289D67" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1C01F0F166AAE730" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="C8ECC452775FF733" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4740A30D56AA5B08" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9CE45732FDBC99C" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="AD3218BB84231A17" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="4EF1C70C6CC07F05" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="91B79C7C169A7A77" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="15BCF19A4EEBC79B" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="7D3BA606BF8F34AF" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="38215E29111B0B31" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="7BB1961FF9A0BDDA" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="EA612AB0F796F073" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="1BAC4D33E62602AE" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="2DCFC2ECD2455E13" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="71FB47776A243FC9" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="2113814FEF866693" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="7992796BBD29CB9F" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="404F8C18A86DB42F" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="BD85C87AF9E20930" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="6686894ADEBA59D3" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="4A91D905CB90C531" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CAE58CB95FB7F34E" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="B555A6B80784384B" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="9545421A1A33283B" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="E35760967B952B6B" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="40B70A8B346E0E6F" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="46A1454B5D90FD34" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="5EB64936081134EC" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="3AEB2270BC1995B6" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6F82722AC4ED0EDC" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2A2F82EBE00A3B23" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="D62FCFCECF5DBA2D" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="529DE5DF80F58F3C" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7605AAA745B0924B" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="470397316CC99B4B" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="7A17D9DF9F94C292" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C11CE6A6801E7C2E" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="669B43D7E2EF5F1A" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="E90F561D18D4E8C0" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DA508247DA05F826" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7C93039A79BDBC6C" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D7C69E745BD08984" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C239840ACB69763C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="36454AD77FB07AAE" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="24B55AC4209FF27" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1E74E1300CD2D3EA" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="BD10E0E7EECD88DB" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="F131030781A30BDE" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="5C4C11614959F206" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="F4FA7BCBF69C6C94" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="3F31BD4C62DDD7D5" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="7E952CBBAE3EC427" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="6FB222675BEA7A68" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="DC938E57CAD04ACC" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="5FC7948BA88AEBF0" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="E09C04CE9324F8C3" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="12C5F1D90C4EAC7B" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="D505BECEA076CD65" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="C118528847EE0C46" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="94AC0B0AC10B75C6" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="14D4F7F2EBF70807" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="30A4BA811BCB494A" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="D2ECA3682193ABD1" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC9DEFB0501078CC" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C21E9E490F20720B" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="1BEC87EE0B421CC9" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C2AAB0314E769F6F" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="3EB1A3EDC5D08233" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="CAB7D18B5C58F963" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="920BE91FFE0798E7" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="B58F6134F55EC965" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="5EF4BF2361279088" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="AF463FC6878C53CA" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="772708F36C71A5A8" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="B6E877CFEBC6179" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="59903D7CAE644BB2" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="29A1BA3507835943" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="ABE019CF42D783FD" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="2F14AD53DCDC62AE" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9343CB5545CE2154" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="B851EF7F6DB7B99D" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="3BBC9BB7F00FA367" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CDC5436059436D3" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="611B8E7C54C19DD4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="AF730646553013D0" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="BCACDB5B41E7887A" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="14A962765682B18" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="106BEED2DC9BE514" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="51113F52C85915EC" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E0278EFFD78FA74" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="92BEFE29866549A1" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="F783D446946ED199" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="83FED678217EC54D" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="5CFDDD88FB74A591" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A326DCDA8BA32855" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D958FE983D3C3AB9" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="8F2D940661DECC39" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="386ABA535BB01481" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="6B27554ACEE1A02F" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="7B358DD559ECC0AD" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="A1B1925D93DEDDEE" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="53B6B811575F7AE" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9A8E60F7FB606745" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="65D03DB0DC863AF9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="37E147D8F02A4469" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="353C9310EA7EDE8F" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="B6B6ECE700AB9BAF" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="4CCAF171F491AB0F" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="E0B49E0303076A75" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="A0EBF25C8FC57BBE" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="6A16115BE349E1D3" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="27B36505C7486540" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="64CCA603D7C92222" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="A11C91F2541065EA" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F5360E3924259F3" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="235870373907BA3F" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="C51140DCF6E529F2" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FFBB8E35B901A592" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="575B4D3C654CF770" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="B09B81202CC331BA" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C8A90D9CC739D6F7" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="A8D19B17D2CA2D40" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="CB9865E7FF60E22F" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="25DB0DE85079D594" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="7B9070305A190AE3" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="5B10320F07B3FFD7" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C643CB081C26B4C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6E4E122C5D076205" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="B6995A0750212EC9" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C35D95CC603CC580" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="C1F6875F4574D64" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FBEB20BEC6711100" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="74C9742BDA85664D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="85A9FDD90CA7C9A0" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="C6BD68A08B276DDF" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="622A2CE8AEA8C183" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="F1592A2D21B743B5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="203ADC88080BB882" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="408353F062AFBACD" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="229E268A4A682C93" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="24DEA2E719FE587B" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="154E2EB3691185EF" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="5FD685C38EFBF1E5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="ADBD8937B5FF9CD4" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B201226466325A80" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="32FB55F4BE8A8D01" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="8F1198B796477D6F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="8986193A68F821F" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="F519A7D2820E46F3" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="36A31BB7AE0BF2D0" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="F3D1BB1D201B3845" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4BBF6B20E4BB6292" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="1AE7346BEA663ACE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="AA1239C5AA78C1C8" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="8423DDDCFCBD7810" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DE027E784A3EA811" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="94B87D9D18D0F01C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="F06A4D586E8404C5" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="360E31E1C63A5DFC" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="D9EDC1977B503689" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="1521DEE35B72D92F" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="62E8D39B8D6BA36F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="74114CE990E8C09B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="FFFD960ECEDDCDA8" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="2D638EEB83008A93" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A9A6A274A66E081E" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="2EC0AAA05822A80A" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="2FEC1509B4275F3C" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="C2C991C8011FECF9" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="E48826967FE30FCF" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="F8E87ACA8EB3AEA5" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="2E2F72FDDE2444D5" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="245447DB1B8D7408" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="7BC01DDA09E460EE" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="AC6EB65BBA0F4095" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F21123991052A188" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="5C0A2E81C1B5FF6D" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="176E537C4959D59D" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D93710D43DAAC65B" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="49695DAD2285C1A7" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FED2C3F495D6FCB" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="3634DF8D8D8672D0" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="99CD4BB66D4D115F" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9E04B3121889F3BC" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B798887EFEFC421F" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="F00116A7A2CB75D6" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="48F81614CF00CC97" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4AEC3D244F46BF3E" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="BE9661B4311CC7E7" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="655C49DE8425EE53" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="A8B3045755EBFE2F" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="68CA22C154AB9EE9" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="4A82B0306BFAEB4D" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="D36D5232C863F459" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="D347E736791E99F5" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="259FF4579C544313" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="8AECA2FD26FD417A" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="CDD1F0D43741E2AF" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="6FEC26594CEC2BD0" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="FFEB8AE047EE0A6B" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="BBDD7F88E38CAACA" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="5BE86F9D7B8DF73F" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="EDFD0ADD3F53F05" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="B381F8B64CAC9CEF" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7CF25523EB92B637" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="5845A5BF39755479" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EB2FF20CD7A6E847" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1DB6D08E22FAE7F5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="4924BD344EAE85E7" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="E3A7B79A1872EFDC" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5C3304A300B9FAEA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B7EF4B999BB6C7A3" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5FADEDFF74BDDF04" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="18795412F74841A6" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="BEB44A00F5B56224" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="371191668D7A6967" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="DB721D484FB63E66" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="68678DECB7DF95B9" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="CA483CA418134347" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="4B2F5E6AE5736B39" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="DF0CB2E1CF5670EA" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="A4C49EB03578C8BD" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="B595A228E17D936F" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="E86625FB4F5AF88C" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="78A5E68634144573" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="481B74294205F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D1EBEB7F6345FD8A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="6426D3B8098CBB86" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="2B3A6C2B2E1B44E4" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="DE599B206690776D" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="29E1D15701CFE056" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="48275A26841FE89E" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BBA8F317F622CFBF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C7579A4F01EF90F1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="55D128632D488035" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="B59DA60684E7D67C" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="26A360C0414254F6" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="8084846747E29469" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="56F6BDD06D8FD890" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="9A038AAB0E7F744B" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="8CA8C33794E98CB3" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="9A0B716935191D4E" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="83815DF32F40B835" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="DB43ED5DDB86163B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="CE470A1D89E6418D" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="91FA7BC1705A16AF" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="48503CA5CB6445EB" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="F4ADC3087E380C8A" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A35F6D15F60C38A9" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="98D9F909B6E723EF" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="16B9884C32C8674" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="EE87C6B0AC50EA4E" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="5C8AF4A74F66FDF9" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="A5C58B22BF861DA3" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="4D13597CD099EB56" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8CA0DB134EC7F96A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F0AAE968D2C686C0" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="D16A8AC315A79915" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C3873E05E3530538" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7C6094760D1818CB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="43C8B72A1E0121B1" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A534B46945102928" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="701DFE83D7ED8ABC" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="86CC8DAF9DD2979" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="88BD6262863BC2F4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DA5392837DC6FD9" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="7D866F8C3C827E61" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EFB3154A30FA748C" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8990FD486763EB32" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="4A02FF2EA970C448" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="1DC251C45F871489" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="F11435D918067885" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="C1B2F96BE036FAF1" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3577DBA251959135" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="284DE76C5B5010EC" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="57640AFC308C6DBA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="50812C96D70FDB25" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6E48DCEB14ECBEF0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7A4438CD0FD1B69" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="59D9058070991106" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C1D24AB07A9E456F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1918B042B2B0075" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="71B8150B10483A5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EDC913BC615D5D9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="72FBAB31046BFA8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F5CC63BA0E86CA52" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F0B259CE6E09994E" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3D47F5C7304209CE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2A805A974C3F0ADD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A0A92EA494045251" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2EF6878EF2F98E7D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1ED41C2C24C0BAB1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5842633E92D61754" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="55271D09778F716B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="CA3999C429DE2E07" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="63E7BB8F4A00FEDC" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7BAAB6FB431A9F4F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4B3B4529C0AE86E" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7592247932EB2B29" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="48432E229C70021F" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="E1016C217015BB31" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="8BB49C102B80C398" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="F01B476FFCF4FED7" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="3D6553F1BE37B5BA" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="888DD58457E6D5E5" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D5872025673010A8" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B8F00056034B1411" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C07008DAD4A4B35F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="EB67D9C50C4F58A3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="732BBEDBB7C32C85" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="EF66AFF09D60F8F2" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="755B9CD38D36F130" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="808482349A1CB6D8" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="FCD0CE6F928C41A1" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="68E9F5A6A8D18FF3" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7E76EA917A860576" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F86AC8A83E5FAC1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="B999EC137F5312C7" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="7E2B62D9EC94CB2E" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="893C9DBFBB65B707" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="2E7CBA2ED91384FB" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="3F89080B60D7A3C7" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="8F252278157F24EA" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="BBA0F3112C00AB41" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="4482851642D3E8EB" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="ACBA1BB32B1C7D60" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="35DD75B6A1E47CE3" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="2EE544CAB9F9D097" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="A24C81A4338D2F19" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2CA2625B766A8804" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1B8F3DE28932F6D9" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="741FACF8D7F1DE2A" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="6D0830EA0BC12A96" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="6AB141440EB592BD" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AE722E871B94EF41" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="FC15A10EE63C5B24" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="BFA4CFD2788A132" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E0C7120FBC13C2E1" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="246397C0FF80C17F" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5849D9A90D167874" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E9504B21453F2090" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="8D8658ADE3D1F8B6" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="6279D6CA28704ECA" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="2AE4B8C3B907CC8E" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="33E9281E89B242A3" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="FD4E4632EEE02719" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="502F246FD0E6F1BF" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1DE74DF8223F66B1" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8A35B8FE8ABDE6B" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="72485F9FFEBEE4FA" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B78716DE535B2A71" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CFC3E54ECC748B8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="97BB8F49972ABB1B" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="2000A425875F6919" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="81F0F21E37B5664A" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="ED3BF0D5DB15CEB3" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="E33E44CB0A2C39ED" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="43CC59FB8DCB1D32" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="ECEEDEDC66DC717B" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="8BBEB8D89F4677B4" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="4DC73553BEBB5CA1" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="7341D659A229BD6E" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="125360C96EA712E8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="17E9D260D4B3D19" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C3CA05B71FB415A1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="24ED9867CE586573" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="D5687157A953AB42" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A7E3A6DEBB67DEB2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="26DEB39C8C552041" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="3B067B70D45728FC" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="D1E1801C515D5D1E" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6785A96D36C5C234" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9A4DF183CAF8D718" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="8B6326F2D94441EE" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="6233B5CADAC219A7" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D5C45E39FAED35C1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1BACB51AB4B080FA" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3F0660802387E8C1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="48ED08BE6F9F7D19" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="D9715CCB46358861" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="1E86597ADBDF96E9" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="266E621638041427" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="80C52141E113F0BE" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="92486E0BF230F8A6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="2B255CD571C883AB" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="22027AB070D2363F" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="401FFA49E78403E7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="AD3329AA04750B24" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="80A754EB560A936B" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="50E1EB915BD3ECA9" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="AD6C8822548A80DA" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="CBFFFE5AF7493D89" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="36706F6DCBB00613" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="4DFA23C9771D4615" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="D7CCCE97453D45A" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="6C7DC21EAE263AA3" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4CDB5CA2DF3ED57C" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="BF6E009B9C729ED6" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="56C7C591F46F19AA" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="611D0508E1953555" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="659C4ACDAC2DF108" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="7C5D16682F2F28B9" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="73D92D4D20FD9CDF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="32844785C5004C27" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="38B856E2D8564355" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="8E0577F5A93ABDCB" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="8BFF3C0D7845C2E0" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B366A941728F319" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="D34636AE06CDC08B" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="AF88748939524628" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="1586A62509AE0FAE" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="A63D931B97A547C4" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="422D3ABA78ECBB9A" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="8A0F0056CABF7491" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="6D64259B59BBFCAA" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="226F307DB6430893" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FA1E636C5D397158" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="ADD1EAC36F5396B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="F5CB75EC08B21CFE" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="AD74F8D726AD0593" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="7D4005349C2C57B8" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="751E2AC5DFC79C45" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D15EB9F99AE1C4C" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="BC77F1A4663DAA76" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="8813D65BBDD33F09" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C0F7BA84E41E4582" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="22AAE8A033ECEA4E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="976DDD5176FC83B7" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="1B6BD0692D7EFEAD" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="F765EAF6A542D2CD" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="570CD170D10116" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="239A1EBF8A9B471A" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E263A5C49BD8B10D" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4FD5337DBE94CB37" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4B9310BBB902513" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="8CAE6851DC28C86E" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="E5AFDF5327F63406" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="AB5BBF29E8A08E56" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="793D48C374D561A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9F2C17D6FA9F6DA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DD5556A9E593223D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="7A547E7E536C5A87" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6BA75403E3F2BCC3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C9718C03FED93C65" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="A35E9A0A993F755C" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="5C834E6653222A0" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="8D1F44A44D23DE7B" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="7BFFA1CF44CB3FC8" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="6CEB023A9BD00D71" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="4E03DDB1C27CB722" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="34234A4BA995430F" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="DC785FA1CE92556D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="22951665E6D1CE6E" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="164A0B2A92B25E80" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="96A97932E02A0BFF" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="26465C3F30978784" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="72AB2D5D20E7D52A" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="A7A0AA9DB3E21FD8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="137DBAD337E18988" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="D7302902050BBFE3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="26397E9D59A1CF68" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="BF4997E47523EC81" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="18908D5FD3929905" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="3796184D9624D462" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="853DA6DB2D660C49" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="C50DA05740BD8CEC" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B98D4F57681FD73" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="52474FBD5A4E5ABE" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="D044E9360A585A56" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="54CAC3BDCAC58B47" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="B3C4883C475177AF" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="52814FCDC59643D7" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="23DCF29E874E629F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="C5541B683EAEA315" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="4BF7B6B641AF2FC5" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="D055709A4C36AB74" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="E970B048FCBA5E54" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="948E5A2C81F1D340" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="C639C86FF3F4136" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="27C36F7FE0F32A97" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="7957F8B31B91B20A" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2BD5E03D4397E366" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="B8C04F4D68107BD6" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="9A3A431379D3FB42" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="8C3F00AB0781B225" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="943BD4178AE4D1" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="AB2F897F528BCFF1" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="317ED9A57F9A32BA" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="A8F954960BBE1186" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="1CDB4BEA56093440" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A37E6EA81CD30F9A" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="F78706DF08C2609B" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="3BCC3C9F9E99393B" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="3CD7BE5F8362B341" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="22D955AC4CFF47E5" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="1DD66606E68C2604" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="35F060DB648E464A" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="AD801AD60504C186" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="159432C4F5761519" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="EC7B055B35BAF55F" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="C8028BF799F0A5F6" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="65817050D21E8561" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="22ADC14B2F616E06" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="A2BCC9C9F72CF225" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="9129BF81DB938292" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="8F87E7729785BCB2" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="A0D788CA70C847AE" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A667C7973D023351" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="86E2D746260338FE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="884015B7AF27033D" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="6C36783C5EBEBDA3" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="217B83BC81B4EE13" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="5628DF65BF6DC141" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="373C81BE7F869DFE" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="7F3EE41BE8890BA1" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="1B6F62D35562116C" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AADBED919BFB2DCA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="57432E77F442FB5E" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9CFB0F77E1D91EB0" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A9A3701F93088711" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="861CC2FE41CC51B3" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B9E12AD9468306AC" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C62A2ADDEAF97AB4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="89FB4896B1983D96" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8830BCD58A3BBE64" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="31FF9052799031" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9F891F72BF473938" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="83B2942C0A764A8D" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="12D990B89D58E1CB" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="B35B64BB5B4C3C05" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8EA8FAC1C2B2CE5" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="73462BE3FD6B9246" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8AC74D9A402693E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E62F33CF39C4390A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="87EF426B9B373F30" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="50EFE15C8130919D" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="16ED41F393CE3571" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="D6E2A350218F9A69" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="157E5974A7997F72" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="75615846A27E38A7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="4C2F6BB0C6DD72D2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="DCAB66E2BCECB7FD" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="901F059961885693" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="E2D32C6B331D89E3" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="F77C0FAF8670270F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="945E41B9ADE11EF" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="F51C65831870EE75" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="365C4FC2547C5D55" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3CC454BBBBB320E" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="5637A8327EF838FD" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="A959D8787FD5CBFC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="52555842ADC60771" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="79A7129629F0B666" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="30680EC5AFCF042" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="F956EBB9062FDBE7" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="EC69A4ACFED13F7D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="FA26A72C7FA35575" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C7461631FD4735F6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EB0952BC9F0F9654" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="B633901C4FE178BF" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="9623BFBE11C1A697" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="37D3C024D107FFD1" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="FADA6F80D421FAD8" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="E49B26AA97300909" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="732FFF90B6D2857B" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="856306E959899A38" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="99E117147B116FA5" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="D8E68CC0A7BF9CA4" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="47A0CB57BFAA9793" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="F7914063C0CEAC30" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BD2FD50CEBF0F4F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FAD8EBA83E16D767" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EC2C794EE654D8" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="858847A8EA3B121C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CBF10836F189BFD4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="CC5A54928AC93ECC" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="245E109694D3B01C" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="91C99B1196C68AB2" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="F4A52F95EBDE9D95" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="7E054A1530209DDA" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="38CB46E2D56877B5" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="85A1D05D54781EAC" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="28BCA2E2AD625DB" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="B88B709DB10DFCA8" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="432704135A66031E" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="ACFF1FD2FDAA99D7" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="B6C8D97712CA302D" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="44C34E658208CCAD" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="EAAC27E0AFF90389" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="601E5DF14AF66DBE" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="2C132833452D325C" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="42E2FA776FBDF33B" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="234C08FA8DBDCA1A" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="A47DE009D804EA39" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="8BDFA55BB459D3BE" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2B5C53C93AFFB4BB" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="E18806ACCA677847" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="78C17A162F8979D7" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CD46D1D2C3B579E3" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="E267FBAAFA60A7F2" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="162638B565AF8DC0" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CDEB8E89D671B172" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="26501D136546FA8E" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="20AA1508A8A999B0" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2A7D9B47F677686F" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="5311EFFD8C1DAC37" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6F64C795FBA35E1D" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="95CD90C74F2FB9DD" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="667F9DF134822219" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="934A6C7FFD371743" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E06787B5A49526C4" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="2822B37234BE17B2" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="B0E949BCA410DBF4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="34906561C5169445" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8140CA489748075F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1B12196A094C7FFC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="C34B3FBC995E0B9F" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="FCD4D13E14922420" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="6704492A9D71BFA1" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="E5A75297964E1292" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="ED1A5039F1E2E76C" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="DBA663AF51609E40" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="8EADCEE210303AD7" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="221DFC0CC315B978" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2C558A76AD103FF9" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="45879CEBBF9DC7C7" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="C07D2F70580A10FA" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="80E22FCBAFAFE1EE" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="325E09C91842525C" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="DF0E4D72720ADE71" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F5DB4BDC35F9ED18" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="4F8AB0AA1768B7EE" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="374F45BB09905D60" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="D1973ABF82E3B4B2" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="4D4CFF479F93789F" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CFA7C49AA9FB7E3D" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C14063B44AB0CB2B" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="D0FD2DD8220B3707" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="4029BF5E3DA4E11D" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="BDD57BA30E14807C" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1CA9EE24C3D0FD95" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A2F1CABE3249B5C7" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="2DF7326CFB27A577" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A82F2DDB2983A586" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F0AFE0D3C370153C" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="2671871DF126673C" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="3C274C144D3B6173" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C1A38261F68F6CF3" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="C0CA3EAACFCAFB87" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="40530984AB190FCD" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="5CCED28B09E567C0" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="647F45AF5E1A846C" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="63029716644FE9E8" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6C6DFE3E71FB4F97" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="583FD53BE8222D27" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6FCDF87D4659E16C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="85C5E6184B5B807C" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="926ABE8615EF137A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7E42C8AAD10C21E1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="27B9E62CE5CAB100" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DDC72128CD03297E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ECFBA1B89C855DBD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7413199EA580764" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4E4A78789C6EF71E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="536BBDEA8C40CBD4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="137FDEFA8C5155A6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F4274CC8B6BAD274" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="820C17BEE725FE43" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="63875417A3FCA5C0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DE3DAB9722A2675A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9CCD42387AFDE22F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4ADA2CF2B1E60DD4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8D0175B76EDA0789" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1A062EB6D7DB524" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="C20FB854A38ACF8B" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="8E534A85B3C2F641" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FD2F5D4E310A3203" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F73C99070DBC5873" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="A1DB72EDB80A7F3A" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="875ECE162429F60" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="1BF0D169C8AF5B42" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5C0932C5B87DF27E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="91E4762B0476A854" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F39785E47F847C6F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3E500B35A237CEA2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="ADCB38117875A9D9" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E5CC4B8DF72EDDD4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4DBA091BAE3D13BE" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2B1A09DAA8903E37" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="17ADB3503EB37DE9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BC5182840D3E5DA4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7311C0D6EA4CFFC7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="DB4DB1ECA46CEC37" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D72ED48401A1135E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B54647F6C055FB9C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E779FAC0BCF23083" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ACA88453631CC08E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D17FA01948D2E52" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B4B846E7A87C2213" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E93FC30F5F32C924" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="7F14F16BA39C5E60" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="3C2999CEE504B9D2" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2AD81577496BABB3" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="F443D5E00130418B" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D78A43A95BA47C4E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FE1696DB54E74025" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CDDAE8BA75EB21ED" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CB540F1A3B94873F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="C5CD9ACC92CEB56A" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="63329E30278C78B8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="19B9C3B4AAAA7437" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BAD4E4D18642AAE2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EB8DCA032C554E68" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B426676F0D9AC0B4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7787011DF68FC82B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="2A8372CB4A5FF807" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5F5E7579D0DBDDF4" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B5F3F608DB28057" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="59921180A50FC240" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="266BAD837D37BA2F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="65E227C4D20F193" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F45D82A72B22281A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="512704638ABB1959" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="B9B2F67DBEBE9028" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="813C3D77A98B18CD" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="DEA6C8CD9C744D5A" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="7ECC9F97483731CC" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="CD10C986FE4AF77E" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Deleted name="_display_name" muid="6F3FF2FCC155BE2E" />

        <Deleted name="_icon" muid="27762BD85837B209" />

        <Deleted name="_initiating_sim_tests" muid="6119E5985F4DA1F9" />

        <Deleted name="_level_data" muid="BF58DCF38295FA71" />

        <Deleted name="_main_goal_visibility_test" muid="948EEDCD100C787D" />

        <Deleted name="_relationship_between_job_members" muid="399DF9B44B9426C2" />

        <Deleted name="_resident_job" muid="5FA29E1A7A2FD48A" />

        <Tunable type="bool" name="allow_preroll" class="Tunable" default="True" display="Allow Preroll" muid="1BB233E3C8004773" description="If set to True then this situation may advance past arrival on&#xA;preroll. If false then this situation must go through the normal&#xA;flow every time.&#xA;&#xA;This should mainly be used to keep user situations from prerolling." Deprecated="False" filter="0" group="General" />

        <Deleted name="audio_sting_on_start" muid="ABD34437BB7237BF" />

        <Deleted name="background_audio" muid="7FC275A6858642A8" />

        <Tunable type="situation_job" name="blacklist_job" class="TunableReference" display="Blacklist Job" muid="D6AE6131F71E555D" description="The default job used for blacklisting Sims from coming back as&#xA;Diners right away." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SituationJob" />

        <Deleted name="category" muid="F0FCEA23DD2A8509" />

        <Deleted name="compatible_venues" muid="C66C164E359D50CD" />

        <Deleted name="end_situation_dialog" muid="A1DE39406908" />

        <Deleted name="entitlement" muid="B59FCC54C1979482" />

        <Deleted name="force_invite_only" muid="AD173678D9623B1E" />

        <Deleted name="goal_button_text" muid="843E4832E73DB588" />

        <Deleted name="goal_sub_text" muid="A35C86E6A4CFCA5" />

        <TunableVariant type="None" name="group_filter" class="OptionalTunable" default="disabled" display="Group Filter" muid="9E15AAFFAC376104" description="If enabled allows the tuning of an Aggregate Group Filter for who&#xA;should be involved with this group. If disabled then no Sims will&#xA;be added to the group by default. This is probably only desirable &#xA;for user sims situations where the guest list is being created by&#xA;another process." Deprecated="False" filter="0" group="Roles">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18E05F0E90E16CA2" />
            <Tunable type="sim_filter" name="enabled" class="TunableReference" display="Enabled" muid="C37D62F07C0E3627" description="The group filter for these Sims. This filter is what will&#xA;setup the Sims that need to spawn in. The value of the tags will&#xA;determine what sub situation the Sim will end up in." allow_none="False" Deprecated="False" filter="0" group="General" restrict="TunableAggregateFilter" />
        </TunableVariant>

        <Tunable type="relbit" name="group_rel_bit" class="TunableReference" display="Group Rel Bit" muid="18BE28754FEECD2A" description="The short term relationship bit that get's added to all of the Sims in&#xA;a dining group to help encourage them to socialize with each other." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="3BE5C8A6363B6E35" />

        <Deleted name="job_display_ordering" muid="92832498449AFB20" />

        <Deleted name="main_goal" muid="6964716E9A51F101" />

        <Deleted name="main_goal_audio_sting" muid="C2D5F0A08626C10C" />

        <Deleted name="max_participants" muid="1189FCEF9FC18F8C" />

        <Deleted name="minor_goal_chains" muid="4DAD2F831F498FA8" />

        <Deleted name="recommended_job_object_notification" muid="7AB4F4B0BC9ABF17" />

        <Deleted name="recommended_job_object_text" muid="2A9CB07443A1A803" />

        <Deleted name="screen_slam_bronze" muid="35FB71E2977E0793" />

        <Deleted name="screen_slam_gold" muid="83B8392CACD81AC1" />

        <Deleted name="screen_slam_no_medal" muid="76CDC93485EB4AD2" />

        <Deleted name="screen_slam_silver" muid="6A4112B1F894000" />

        <Deleted name="situation_description" muid="3845C7F2E07A13A7" />

        <TunableList name="situation_job_mapping" class="TunableMapping" display="Situation Job Mapping" muid="8716A97E68CE525C" mapping_key="filter_tag" mapping_value="job" description="A mapping of filter term tag to situation job.&#xA;&#xA;The filter term tag is returned as part of the sim filters used to &#xA;create the guest list for this particular background situation.&#xA;&#xA;The situation job is the job that the Sim will be assigned to in&#xA;the background situation." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="8ADE1ADBD481D350" Deprecated="False" filter="0" group="General">
                <TunableEnum type="FilterTermTag" name="filter_tag" class="TunableEnumEntry" default="NO_TAG" display="Filter Tag" muid="A7637D29932334BD" dynamic_entries="filters-tunable.FilterTermTag._elements" static_entries="filters-tunable.FilterTermTag" description="The filter term tag returned with the filter results." Deprecated="False" filter="0" group="General" />
                <Tunable type="situation_job" name="job" class="TunableReference" display="Job" muid="B8FF4F6FF1D0D693" description="The job the Sim will receive when added to the background&#xA;situation." allow_none="False" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <TunableList name="sub_situation_mapping" class="TunableMapping" display="Sub Situation Mapping" muid="83F0BFCB90A24F71" mapping_key="job" mapping_value="sub_situation" description="A mapping from Job to Sub Situation.&#xA;&#xA;The job is the job that the Sim is beign given in the background &#xA;situation.&#xA;&#xA;the sub situation is the individual sub situation that will be used&#xA;to control the behavior of the Sim in the background situation. The&#xA;background situation will request the different phases of the sub&#xA;situations to affect change in the Sims behavior." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="A8CEB0DB0A044F49" Deprecated="False" filter="0" group="General">
                <Tunable type="situation_job" name="job" class="TunableReference" display="Job" muid="8F4C2AF708D1C1F0" description="The job the Sim is being added to in the background situation." allow_none="False" Deprecated="False" filter="0" group="General" />
                <Tunable type="situation" name="sub_situation" class="TunableReference" display="Sub Situation" muid="A8A9C469C7CBD6EC" description="The sub situation that will be created for the Sim when they&#xA;are given the job that is the corresponding key value." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RestaurantDinerSubSituation" />
            </TunableTuple>
        </TunableList>

        <Deleted name="suppress_scoring_progress_bar" muid="C05E61E5980F7CFE" />

        <Deleted name="targeted_situation" muid="E1DE59B9DE60B5D2" />

        <Deleted name="travel_request_behavior" muid="3DD9851D4C543654" />

        <Deleted name="venue_invitation_message" muid="5D1860F61C75A3AD" />

        <Deleted name="venue_situation_player_job" muid="19D500FA008C7F62" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="66F58EF04B750EC5" />
        </ActionList>
    </VersionHistory>
</TuningRoot>