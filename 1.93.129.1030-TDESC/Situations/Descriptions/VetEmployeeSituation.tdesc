<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="VetEmployeeSituation" module="vet.vet_employee_situation" muid="4AC6BD00C5DCE1EB" description="Vet Employee Situation.&#xA;&#xA;Within this situation, you can tune multiple states which can be&#xA;enable/disabled via interactions.&#xA;&#xA;It also supports the ability for interactions to trigger a transition&#xA;to a new state or a specific state, if so tuned." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="2C4A4162BBAE2977" />

        <Deleted name="_cost" muid="2EF844D81DF5E911" />

        <TunableTuple name="_default_state" class="TunableVetManagedEmployeeSituationState" display="Default State" muid="53F1060EF0360FB4" description="Default state for the vet employee, which can never be disabled." Deprecated="False" filter="0" group="Situation">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="20E0B6A2F702556B" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="6E147413722B7916" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="5110815DF41754C4" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="23621D60BC285BC0" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="4F7E8767890D4A5D" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableList name="state_specific_transitions" class="TunableMapping" display="State Specific Transitions" muid="CFF423C33C7A5695" mapping_key="key" mapping_value="value" description="Mapping to allow direct transitions to other states using interactions." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="8512C1F7ECB391C4" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="VetEmployeeSituationStates" name="key" class="TunableEnumEntry" default="DEFAULT" display="Key" muid="BED05172DF4FEDE2" dynamic_entries="vet-vet_employee_situation.VetEmployeeSituationStates._elements" static_entries="vet-vet_employee_situation.VetEmployeeSituationStates" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="value" class="TunableInteractionOfInterest" display="Value" muid="ED2997E1FD4722A8" description="A tunable for one or more interactions that the situation needs to know about." Deprecated="False" filter="0" group="General">
                        <TunableList name="affordances" class="TunableList" display="Affordances" muid="96ECD9A2DD3ED51E" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                            <Tunable type="interaction" class="TunableReference" muid="A2C2E817FB727F0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableList name="tags" class="TunableSet" display="Tags" muid="1A18EACEE5D95824" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F85CABC68DB1EA92" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="D26C8E2843B466DC" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5569A4595457F4BF" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="70FEDAEFC782BA1E" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableVariant type="None" name="transition_out_interaction" class="OptionalTunable" default="disabled" display="Transition Out Interaction" muid="C829BB5378962792" description="When this interaction is run, this state can be transitioned out of;&#xA;we will try to advance to another state.  This can be used as a way &#xA;to switch states before the timeout occurs." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C561DB0A3BABEDD1" />
                <TunableTuple name="enabled" class="TunableInteractionOfInterest" display="Enabled" muid="89D9F1CB6805C74E" description="A tunable for one or more interactions that the situation needs to know about." Deprecated="False" filter="0" group="General">
                    <TunableList name="affordances" class="TunableList" display="Affordances" muid="CEA52AF28F350AF2" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                        <Tunable type="interaction" class="TunableReference" muid="90BA8FCFA699024B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="tags" class="TunableSet" display="Tags" muid="AD40D4BF1264225E" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DAD709941116BBF5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="B5F60DA38B9792FF" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="D288DA139AA2CC23" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="E7358B134109EEED" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="F8B2C8955C779199" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="A5E604538AA47563" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="9F6441E786DA94B2" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="8580397A94598731" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="B2063F41265ED06A" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="78BBC96B706F0E5A" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="25F132756EF235C1" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="7AA88A3853AA6A04" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="B8D9EE206FE36222" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="729E15D5DD87CDA0" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="C03ABF0C7650770F" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="C3C059DA18A3D9C0" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="6D4A4A0F891A7923" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="690EDEBDEB3A3120" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="A06D16C90F86B92C" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="B9B4EE77360536EF" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="A436051C3715B719" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="D95088DFFE2D6554" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="82BDC5165DF24D5F" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="63882BE6DECDAD4D" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="61006FC4171A51B7" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="E77EF7E09A277960" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="3F3F9C094A786E0B" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="AC1717C57214075C" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="764DBA94FF2EE65E" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="7F0837A8008E4951" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="298E9F0F625E6212" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="CE49A54F6A2F3A3" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="EF6ACFE859BC29DD" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="94FD0F02CE285BC5" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="86AF32F75428628D" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="8C39031DE90DF6E7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="A61EDEF85A856C52" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="1FEABCD471E7A8DB" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="1143EB8BA225D088" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A241671C860EC860" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="BF346CA5B5C227E" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="852C0AB43D8F3BFA" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1F4BFE05017CBD81" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="A3F5D5AF75CA2BD7" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4425142D71B25BA3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C0F40BCD46B53497" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="271D9CCAA5091611" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F52BA0C1B3CA172" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="ED26D66C28A5D02D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C3D4A80B3927A172" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="831AE1516747AC2C" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="85BE4F16D0600CEA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DF343E0FB96EB980" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BC73D2B902258FA" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="48C0250F1A3A1636" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F30720AD289139F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F70ADCDB9DEA0B87" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F61B0C1B71CED90C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="322B8B83EB488FED" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="AB096B184F04ACD6" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2DC7246144C78505" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="13E18551BB5E5EC1" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="22D271AF256411B7" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="329D2A45000F48C0" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7C22142E9830EE63" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ED841452FC6B0CF1" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4A3FA6103C9B1DA8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="413329AB28ABB99F" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="FCDC91640DA89641" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B8839BDA5B15E78D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F4EB4E8C21EDFEC4" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8583CB1539CB890B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A37C777E85A9AEEF" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="E4AF893EC0DB3580" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BDBBBDB2EE6CC699" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CD01A7AB8F412295" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8229F7DE039A1514" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="958E4D2D6ACACDFF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C3A8755B3E4BE31" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8F33F15451EA83B8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="36777AFA291EF32A" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6C2992781519F3E5" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5961757200C98BE1" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4E8E24255FD2A199" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="97D01D6AB4F1B94B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="212C9BCF5B3EFA14" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6E5135759618C903" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F65774CE084808AB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="3B7AAE6C2C659C60" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="1CBE7C9E93A2C78A" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="5F0EBB407C8B56ED" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="EBE775AAA2C8CB1F" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="6E382ED72F79C75B" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CA44DA9F49274012" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="B8A0F110B4659FE1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="44713C6EC2B6B137" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="917BDC9D128B5556" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="2E478E5EAA29FAD2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="F66432149FDFA933" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="13BEAFEC2F6DCDC9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="860C3D8D117005CC" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D46BAE95D9DAA6B7" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2B34CFBFE4DE9E0C" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="2A592F3DB2F66808" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="D610E1422A3E0EE2" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="DB4FEA7CC28DE0FB" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="1D193DF7E399EB02" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="C38777A07FA5E4AF" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8DDB760C7F9789F9" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="950200AC03AB90A9" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E0C249315FE30C4E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="8BAA2AB8F223BE4B" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="5259A0B372CB7D26" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="8AAAD219D26F02A9" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B6CEF8C4E722FB55" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="CC3387953BC1E4EA" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="B3F4047EBC81693A" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="C12D60B2A8497DF3" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="5539E5E8423E4D2B" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="FDBD19BB1149B893" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5ADB4DFF84169CA0" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="28FFD093AC724FCF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="140520FA69DCC164" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="E6EF780B3EB99553" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="52A7961D176FAF1E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="46D929A4EF913984" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="210829F3B816227E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="330E65357341356E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC4AE71E7CFB913F" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="CCAFEDD2552B60FF" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="7491D0028851C5B6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="2CC35DFDF1218B9" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="7D8DF65B44420372" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="E67AAE6AF1D1F97C" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="A78A9925BD4EF3CB" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9A224192C0426C11" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="544A26FFC3EA9A5E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8F7432BF2AE237B1" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C57F76A14BE89230" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="578AEBEB52D8626B" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="287BF4E00F8C5784" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BCB5BC3EB5BE54B7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2E0D07CDB0E0D980" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="6DF3890566A290" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="DA32C75A14C819E" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="6060BABD86CF485E" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="C5799E19573716B2" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="8CC6836B69636A11" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="15F7B81038BA5145" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="6A6B6317E5164D1A" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2D57DB7C7B6B283C" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="A685167856ED807B" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="7436FE762B4BE3B2" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="B141F160616B9147" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="9C253DA72A0FABBD" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DFF6B13DCA99A49A" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="25A09487AE753AC4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9F59031CCB1BBF77" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DAA5C2395F6EFD0E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8ADAE70F78EC9E63" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C27F525CD19AB648" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="655E562230E00757" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="8D1BB192434FBF22" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="5C258A4E7691D503" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="28D2A754D705F1CA" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="F2CBA6B72E6DD9FD" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="B388AB4AD3B9F576" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3CC8743C0CBDDA2" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="EFFDF856B2136D0C" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="23FD8F041E0B5A52" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51BAC7B4D92B6D31" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B6AF456CA44E2533" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="4D7EFC4AE6138EB4" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9093929E5929C951" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="7433FF5C81B6F63D" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="4AB0CAEC8F07D647" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="36FE7724801C5A0F" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="D3BEDCA0FBF06DF1" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="F9078EBE59F6758A" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="E78375191461C591" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="8CB6FAA4DAD896EC" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="478E995729D35523" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="95BEB3FEEEC700D4" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2E0DD39475B6AF09" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="9B5440DC7B247BA1" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="78AA582D103BB8E4" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="F18ACF8941FA837B" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="669699E54BDF4BC5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B430ED75EDDF6C5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A8B7D005EE275ED2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E0589E702124E76E" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="59BA026027C51D3C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="B26D134C6B62F69C" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="CB09EAAF86089314" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="E090DDFC2BDCD5D9" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="84E1C0D4791CEC67" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="EE6B24C1E2C1EDB9" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="86D3B82A6C105012" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9040B81FC730AFFF" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="94BE86A0216CFDAB" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B912490BB85781F0" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="3DF4B4E6F0FAE770" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="177B6FC32ACB82FE" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="DE959C810809DAD0" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="D2A9D5C4393D58E8" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49859CADCFED3D7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F7FA7E0DB47D8572" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="8C887B906560F9AF" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FB4E77555DB4CB3B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C3EF4E6A88C9139E" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="83A88F736A1952F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="BFB2236C563FAEEA" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="686A1B11E4D67876" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="3AB559C6E6F89D" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="75FA66541A63E97E" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="22FE6A31F82495E1" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="B0A640579A897D5F" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="60851BAE95D49D9B" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="3FDECC1E620AC820" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="BD8A01ADAE2AAC08" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7C5F259B41B2FFAF" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="A904D9CA4F908CEF" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="9D8CA3998DAFB82C" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="B458CFC0549DC1EA" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="2460CF4676B54A76" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="B45773946FDE5E12" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="550D451D7A9D2894" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8137F56B1753BC49" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="D8EE73FD9F94C480" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="26A015C35C923046" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="DD48041C508A8A6C" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="D8284A4215A02E17" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="4621B821C81417AC" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="F34BBE2381C5F8E2" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="4C0A200C3BE5B094" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1A040228EE67A873" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="71C9145DD3AD9379" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="A708F15CF41F1362" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="C5751C23E49F081B" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D1A33025B72D62B4" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="39D59E5660381927" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="5D4F2BFC86F0E3C9" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A19F4C8CD5BD8B1A" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="A6DB72D39E092FB4" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="E486C96E27C697F3" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42C95ACD0992F647" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CCEBD654112EA1E3" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EF56720760D52AB7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DE2A1CFD39392C82" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F6B725119518D0CC" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="F13809D851920E56" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3FEF813ED29E1E6C" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="A9836C923FA62BCA" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="F863AC57C84CE97C" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="C3DD35F029CE27E7" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="23B8F8BA0AC1AEDA" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="2D7E714EB20E8EBB" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A43486E36F6878F9" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="9886DD5EB1751C0A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="F65458329D56E14C" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="7479F841173F0879" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="60893C9C0E86C205" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="704E2EA23788F013" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="A827B9372F539AE1" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="DBF77D9A719EA7C7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="D531EEF26C9EC265" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="D069775583105F1D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="84050603A9D7C4DE" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="523C758353DC81E9" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A809DB30EAB550B6" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="6B239E3DC3CE21BC" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="87AB7BE05E7F7DF0" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C33934791490A165" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="5775462C302A63A1" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="2B0B4985951E68FB" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="830BA147AC792509" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="AA36F52B92B2B73B" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="B4EC4AE1BE1FD412" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="2A2D28894B9BD956" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="F25B8A9E6D1D8C26" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="7FCEC739131D7893" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="F7E08B571D188FA1" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="5D5136F99CAEABB4" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="9D6A7C206730F807" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="2550844B32F7B2AD" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F9CDD971B61BE2E" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="CBC2DD427E45B111" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="D2DED66CC751F125" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B2849459C1971AD3" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CAF85C513D8A5306" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3AD6712A99F8C613" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="4FD50D2D340E6A98" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="CBF3EC5D770F596B" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3DBDD3A1EC068859" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="E923FC6C6A6FDFD" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A3DAB5843D2B6B48" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="3655F46423EEA71B" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="391C6A0714076EAC" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1F0BC185E201889" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="B3CB6715CEB63430" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AB4F55AFC15BA648" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CCB8A9D7724AD2D4" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="AE2D026BF9BB9F3" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="36F4558764A3DF49" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="2ED97F8A0CFE5BB8" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="B8BC8D0BC6C85115" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="CC6AD8469DAE4BFB" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6BC3940EA29E548A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F8B4AB98237A8583" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="88EBF66D2C67653F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="FD284D9FDAFFB493" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="86FC8E404987A3B9" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="7759F7DA96D6DE5B" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="25E95DAB3A3E1165" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="15335D19105A68B2" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="7C61AE1831712128" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="69696A63E3F9117D" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6CF6CCF854DE34D9" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3C6FB8D6446588D5" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="F8523122FA2B159C" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81DE302FA0EFBEA9" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="43DE6D423DAD758F" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="C40D5527E47353BE" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF359E3E748650AA" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="C9D00FE98F1CEF6" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="4680AD5E5989C64D" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3175D6478B65719A" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="E9315771A60A5EF5" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="F1432C865EE5CAAD" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="D5B642DB2FE6225A" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="79484B7019968389" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="827576C5A06D2E49" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E5998358E9B8EA10" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="42DFB0A7BCB6C20" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="168E60AAC8214B2E" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="865F5AB308BB80C7" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="45377E6E0F68514A" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CB9F7FF0872B8217" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B83528EEE9E5DAA5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="24F942B2CCA30078" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="8C93ADBE650BFCD0" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CC579ADA955AB6C4" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="DAF0C6AD0A10753E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="24A720A4F63D3CF6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="702B738D8F654187" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="2D04D9EC54DD4C96" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="736DF35E377E2C91" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="BCD7FD48B97D3DA2" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="D15885E0B7B6DCF6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="AB72CFF7A5401D8E" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B5CC3D0760A3D1C" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="303722E8EC102E28" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="FAA755C5D60EBBF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="B573355E6B35135C" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="EA8008044512249A" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="1E67631640FB4528" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="F4A1CADB26D9F7A0" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="802F2F8E5C57A341" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="4BC186F5B641C558" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="3718BD225DE97AC2" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="635F2723BF251D76" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="78AD620110D7B2D0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="63094E2E144AC2D9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="CE87F17CF9CE8C71" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="CF1A60B4010F7689" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="37AEE75A6ABF2C63" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="5B67C79154704A3" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E06658E51545381" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="11ABF03EB186DAA1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="F08A40CE713575D5" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="207AC69943403321" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="9C73118E406DD83A" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="8BDE1B8F59E6E492" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="282FA73812DE63D8" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="2581237A14895788" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="38C57AABB4434C68" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="5CCBACF0FF935D75" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="D64736E3C49B6DA7" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="3FD23B768C47A5B" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="3B6172180ED07F87" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="3B07A49556F5C97D" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7BBF2A46C1B2ED2B" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="35E15D32B0EDC2F9" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="506F0E8D93A86A0B" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="8A2FFD8CDBFAB0E3" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="36F71A4B2F6F19D8" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3EF0C51750ACDA81" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="5C5F01FB5BD4138C" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="9AEE7056E323323C" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7FDA7E62A374888" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BA2B6EB84CD6565" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="EB41ABD4FC25E131" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="78D7B6D4B170086" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="450AC18C76F7D15C" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="3D59D702371F7E0D" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="9EB36F6E6ED6B53D" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="969C09C6C1ADA22F" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="393E962899776EAB" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="4B1F12748B19946A" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="F0F4A688C489DB41" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="8E64C19831CB5C3" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="6A330975CD240517" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="71228DF586E7BCC2" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="8ADDB6781C0DB77" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="2A621EBD356D079B" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="C5D7C27F51B43482" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="A260669ECFD8EE73" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="EF376CE7AC61FF28" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="3BAADAB198DF24F7" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="EC0F75F541069AB7" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8F24533D0D3E5A9" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="DE07BDDBEE5CF977" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1DA311F6CB7496A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B341166D28EABC0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FE41BC66EC1592DC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="75470482BF768ADF" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A418AE00C3B1CD37" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D575215606CD91A4" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8A574C2C3D126349" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="52AC4DD8B9E8A3F8" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="232BF8857CC75959" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="B9385236D2015803" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1F5FD19D98B9C737" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="8959E87D9E46EA1D" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="865D58F53057B121" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="1B287FFB8869BCE7" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="A456499F91E4FF1F" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="7BE1105EC9698168" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="ECFFB059C5C5BC60" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="69E1C15476DBBB5A" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="289A4C2E0A5F918C" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B818B8C123689079" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="52E6004A5DC0657B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="34928D06530B0A1E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="A029E0A1272B664" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="D7B68D2A19BA4C80" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="D1BB35D00BE32734" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1CA5B1AC61DD527A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B595D0286D42C442" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="45CB043E01AC261E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="4CCA7B3B4205C6E1" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="F5D73615A3365ADE" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="98CF921F72DA3149" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="9F1F005BC9ACFF42" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="A6BA5E901A73D91B" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="D1E4FAACB0D61D76" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="D276E9E79609540" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="218CF874839F69EF" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D5086FD6F85171E4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="D88C8005EECA27B1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="6631E896C0445BFB" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="771E97A69027C571" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="418E6C2FD2EE3704" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="192C845D246D520A" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F80AE17CADE8F02" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4C221334068438A5" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2188082985C4B064" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="105ABBE51612F869" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="8057AFB7C835AD44" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="A395388FB0B1EA99" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="D005345A6F393E7E" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="744C29B1EF7629F9" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8E75993C48C9174" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="3D6F45D0D7623F32" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F53B55C3AD27397D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2AB65A51E6E75829" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="C4C7DE407C2F0294" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B8CAD5E7598374A7" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="35750A25A20E1E15" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="9D7EDAC6944594B7" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8F27A6000723FB0A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B59BD75FF77B7A4A" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="6008F4734E854029" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E95653FFA7642006" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D42D457C1503784E" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="870F326F2CFC6B4A" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="3FE92EDDE00C3A7" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="EBF410F3A809AB04" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="916CF80ADF99F86A" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2C1E43CC434A87C0" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="9111121997431E14" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E39F3A15A62E0825" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2CE890734E30D754" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="968779DC88CE78E4" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="ED95733AEB717546" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="59586EA8942AD1D0" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DAA1B0E290FE856A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="11530FC7665229E9" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2EFE3E48023CAA46" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ACDB639D4706800C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="493EA9F01278A30B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A08ED960CB817580" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="5B34AB737D4C3D9E" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="224DB83694CFF24E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="527B093279E53AE4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B2A1AAF71E8C2076" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8D7C411FC04DD26E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4CF95AD5AA6C6129" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="972CF4EE508C95C4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="250B21946A8F99B9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="F0D950E816929FF1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="111C7021EDEF3B12" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="13AE75B680C940E9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C57A583C3CE36B46" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B398293441FE5DE1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="77D3345E48499356" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="D41785C65E9E35B7" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="C9E8BCBB239685F9" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="DCA0567CC70C08D9" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="B7199549AE5322DA" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="ABE30DD4FCF17878" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA4CC4B8699610F" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3E77479A151B77BA" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8FE51C004ED45142" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="A604626F0D99E98F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="6C93ED20CE97972F" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="9395B790BC9D738D" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="97E83732279E4CE9" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="F97B4A14E8F0338C" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="22A8F53A820069A5" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3F257D2142E7DDCC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F97AC0EAB7CD39F1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="AF9D8E74D1D31358" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="DA33991A07557D75" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="5ED51057D5B8DF24" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="8F2DF10C121D7D79" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="CEDA7076B1FA7CA" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="8164A16629B1370C" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="4CC04868D895BD7" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="9D803806B402426D" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="E2954F260DDBD59B" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="EF3BF51ABB7A374D" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="D223EFF3A38D2598" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="43076D06EB7D9686" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="F2194D876CF088B8" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F5848FFBE21B41" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5BFF8806C6FDD50D" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="904EC7136B895B19" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="BC8D6ADE569CC28A" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="80A112ECE98A7D8A" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D3EED5F4527B5433" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="C223E55505916FB7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="D2715070076EB757" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D5B5BAE127653C4" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4A699ABA91F88216" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="718E3EC16EFBB080" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5A0CC9483BA378F0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="6AAE6F965C1B0F37" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="34C016A8BA03A2ED" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="8B4D3A8DA387D273" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="5145410247E0BF7C" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="9CD0456629AAD742" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="A1AA32BF2AF1A319" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FE53A6B0DD6F02A" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EFB4883E7356DD9E" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F4F66333C020C7F0" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="15C210AD3F7AC081" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D4109A325C8435D2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="B0A7EA2F2762BCD9" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="F918A2686A6DA990" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="DC1A33D34508551" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="6DEAE21AB87F0681" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="7F4021496AB882B9" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="DF254E73763E645A" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="7598493033665AA6" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="F26171697E6BADAF" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="E8C294F28C0A5B6C" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="2C39B57FAB8AB519" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="28A4FB0126A7C6E8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2A38F11875771DB9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6E9C4CCBBFD9111D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="748DEA18B4BAA1BD" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="7FA1C80F6FE9B3A6" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CA2992E1E7AA7B5F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3C1854A4CF25DCCC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="7CD90335445C6C89" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="4B844494D91DA9E7" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="212412207C8F1C7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B8F9CA17517862A2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="9E28D574E5C6CE69" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="1DC5D6891CB4321C" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="832E83A031B5CC63" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BFB9CEE731958D1D" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="AFF9EF1EFE8BB5F8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="1D017BEE4FF03F1F" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="7DC8407C9BF30EFE" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="7DFAD6DCF2BE7A1E" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D88EED77B7AE269C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E6C5B44F33D82C41" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FA82A256D383D39" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="3121EFA6399F7803" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="6FF2390A784B6BB8" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="E5B2F23C6B02E048" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="B54556DBD7349092" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="1897B1DC22A80C20" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="77C5C2276B993632" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="5E9776A2F73A7E4B" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="E832EF35E6975212" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="5A1FF6788950D362" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="D982B8F4F84F66A8" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="C9702D1E1D89F019" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="BC556DC5A155987E" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5FB8911CFD46AD46" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="112E711BAC71ED6C" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="C965E0BE334C2DF6" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="244BE55F98B128D8" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="617768DE4ACABEED" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="1A1F315BFD028E72" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="B4F7875F6A9B3390" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="E90C2F87D6608192" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="48E0858944B15E64" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="283D99107E71212F" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="243C7115DB80E7" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7EF30E248F4E472" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="EA66641CF06A01EC" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="578B66BB68D18158" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="67DA74B0BDAF08F0" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="EF4BB6047488A958" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="EB3BCBA665E3C559" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="B5658504EFBD44F2" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="4E1CAD6FD818F01C" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="239A4ACC69FF2C24" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1F86E510FFA96E6F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A66F0CD85D1AB459" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="D83593CEACBE7F18" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="E4BEAE4C9BB9E7EC" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="CB7FAD32A31A3087" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="792D215CDA45C90B" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5519BC72C5CBD8C0" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7C6476FDC19E99B4" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="68C97F4E0EBB81DE" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C86A34F6DF6E1AB7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="47442B7C353C8029" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="9423AEEB8E21E0EF" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="1D09557848AEA19" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="AC2D63A6454C2D4B" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="1D8EA49F700A1182" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="F49DEC2049946525" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AE3D370295AC4AD3" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3C4A4468CAC226D2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9251A1D8738EF71F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="984D29D4B4B067F7" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="CF3EAC463926171" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="28B073105DBE388E" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="A148B63CA6CB9A5D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BD764A0251C6E2D7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4C28B5E851A8CF2" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="77A855B4583F0FB4" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="785E85F02057213C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="ACB41715DB18D8A9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="E78AA3F5DC38AB26" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="B00D5CC5F745AD49" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="C3D3F3F2BD39F2B0" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="8C995D5095FCD681" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="50D840263E1923BE" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="E4461D4F40ED26C5" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="8B30CBD43DD8885E" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="6785139E19324860" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="DBFBB2C03AECD38" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="90973A97C88F3AD1" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="820DCC6781F69852" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="D05728F17D15C0DB" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="FAB78494C0EDFD2D" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="604B898AAFE0D037" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="F10BD348BDFD22A5" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="AC5D380E857C43CC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="8120F3B3F08A7996" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="9A3582C312CA340C" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="4D3B1784D9AFAE79" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="36DBE7C2314FAAFA" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="A2F57C9280E953DC" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="4332ADF260E27E56" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F8ABE22CE0E9A79" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="93F9912B09979C2A" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="4092F370412EB137" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C00C332E6D0EC9E7" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="773EC832188B8AEC" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="1DAD4333D40DD6BA" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="22796C3A4DDEFD3F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="1606F8F8FDEEE5D3" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="F73929E597827C02" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="BF92F2526FD49D29" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="EC6765EEA5563CC9" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="ECD10C7E5D9FA74F" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="E4D9F059AEB6D645" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="1F1403069F35A2E0" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="792C59A29E0A0B4B" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F5AF3DEDA9241A99" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="3395A61AB707C43B" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="D8EA020559583D5D" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="3329090ADAEA6B38" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="F02E57D41BF60250" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="1D4E02B6303E4C2D" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="D045D32E5E36C1" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="AAD48358575ED63D" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="C904A6D466888025" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5272E91F7BDD1A2B" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="972DD1975B765F8A" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="D353628AA2A733A" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="A8BC299BDF503BD6" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="643E8FEDF5D2715F" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="A7A8029864C9B54" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="B4971A8CBCC90D82" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="3B58CC06238197C2" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="AABAC471FB3E3FE5" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="298508FC3FC260A7" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="C6E5F1F542AFB7A6" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="90F6D634D6CD24A0" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="4AC3ED7DB0395F0F" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="FBA2EE8C0E79E0F0" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="2893DA59B786770A" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="83BE9038926B17EF" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F0A8684C77F342FC" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECA36A078C5F4440" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="557C009997CA0D19" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="B688D80DC30E8E69" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="D3B1255236D1A8C" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="ECF217EE8CBEE19" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="E76CB1FA31DDC0A3" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="497C3D1EB0025D9B" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="111ABB13CCD77C90" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="855FCB8FBF4EB732" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="239AB80C84B9E084" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="C312927E688DFF5D" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31DB8B191570127B" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="594D2AB8B778DF71" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="8855A952BE13E814" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="929309993D4DEAD4" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9D694560584D0FFA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5E7D5BE41C348875" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7EE5E82802267DAD" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3697806BAF6F4B5B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3D030B0F77F794B0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="147AE1F9970B1D81" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="8FD8E65FE059C686" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="EE9EF7D67840934C" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7940A3D6795038A2" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9DEBB91134331EDF" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="20A3F41B3B409353" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B4ADF92821232CD9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="E00252F70E48BDD7" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18708C2F429F3449" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="3F2B68F141402228" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="B9F5BBF4A207FD1C" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6F6F5D5982655B1A" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="A7B5E93A6321769" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="9428C8B325CBDB37" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="86A237E925D607E5" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="90E1192110636432" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F5784FA8054866FA" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="639BEEBB9EFF06DF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="D166F6ED3CBC08C" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5588D34D2512645D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="70407CA893A742C4" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="91B7AE3909FDBEDA" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="62FD39CEAE43559D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="5DED07B26252A867" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="FC55801EE365E96F" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="DD3B27B2E540FC76" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="C3855E20679544BB" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="2F46A906C4A2C732" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="EAA38FA3367EF4A9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="8FB918B0A59F845C" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9C5F8B03B8D485E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="39EB356BE82F87AF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="F5F7CE43EE5D92FF" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="89884B76BF614253" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="F22210C9A653DEF8" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="716E39017E655D43" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="BCE2A11D72FB762F" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="3E94E753685657FB" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="622BBF72486B678A" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="9D4564697679CAAD" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="80F7210DBC50C27D" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="CBE5E515FCE00283" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="162793DB0B85EFBC" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68D718773936EA34" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="961626F8A7E603A4" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="6033BDCFB5569244" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="33705705FFFC5B44" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F42B80CBAD259DC8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="FFC626231D0F48FF" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="D646AD7AB541CC61" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="C047AFED0D75927D" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="B72B5C8718E684A7" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="A10A87E4DD48A3C7" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="4D50845CA135631" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="4BF698E78CB71650" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="EAF7CC65B744C1C4" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="AA01095317A85567" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="3369174C8B7D3766" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="F0C6EBE148F287A7" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="45073628C2B9EFC0" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="139E509D575E3097" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="A954F490EC76C464" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="ED4F5FC774BFA44" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="D06829AF57476EED" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="875F7D4811ED430F" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="804BE9D3800BD826" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="B16D87BE0226C384" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="D4A8E02FC89B8BD9" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E3750BB722F74272" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="275BB984E8C47F63" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="5D368F1C958501F6" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30D07ED29C6028CA" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="573863538CEF78A3" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="C6EF8F689238B2D3" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="448262596BCFFACF" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="36799FB5EAB5217A" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="C1AC13CE450DC50F" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9045FAC28C50018E" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="3CB6DD992FF72889" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B9BC613BEE79DA4A" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="44788716CAA4B843" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="64218DA60303C9FF" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="A687BCC2A8C95C0F" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CAC64D749EA6A56D" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="B488236692FEB6C4" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="F5E4AF7D836B5994" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="672B86870C9C88D" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A9D13B1EC3691930" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8FD4DE4A57E12EE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="3D9DBA715C2337F8" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="E20CFF80C8984327" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="847B78ABFDB0DA59" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="F36EFF56C20C66B6" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="48ADB19D1AB5CEC9" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="91CD921E79F199A6" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="76BC75981E9B4B41" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="98411F219644C10D" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F5AAB0C8912AC9BF" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="A9166C8CA8AD5D16" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="3BF27AF58F262099" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="D883513BCC3BC079" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="35C9385A4F5FCBDA" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="95594E2839FF3403" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E533B5905E32DA78" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="65801EE5A73E586" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="FDE70E8517084F5" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="D824721F8A549C92" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="B0C1AB35BC5427E5" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FF4249625893FBD2" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="E4BB51003202534A" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="2A9D7E02E8227607" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="CC4B330D523B6CEB" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="7D9A3CD7257E0358" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AAAF62546D20BE73" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="77F99ADFF18EEC80" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="4CB83A809E5100B0" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="625FB3FB6DCB4D6F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D8A197B8001DD561" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="FA9FA7E79DEB56CF" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="92FBA5247983A994" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="269D9CDCF915CAD2" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="EFF3FE6126DDECBF" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="7517553F5633DCA9" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="7E0A76C5D11415DA" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="12B353FC9AEF1699" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="95CCD602F61615BA" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EA847521C7B563DE" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9577CB1EBE8B0CEF" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="85EEBC5AC242D0AD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4DAFB7CA76A0B060" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1E8C31D1F45B7AAB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="30C903890583E85" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="E9F7DE4ABAD9AFEC" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B4C859321D2B7A10" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D85EAD4BD5594898" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="50E2FDE26116DA19" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BA06AC38DAC6ABC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="12FBD9F4E98F72A2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1B326F1A9523F923" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="28BDAE5B0C35ECA0" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="13D194CFE144F498" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BE79F06D5E70E335" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E38614F5FCC8BF39" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DAB1240C4823870A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BF54A3E0A57818EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F6DBECE815244783" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6D62BB1112E3573" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="DA6C2779BF88D573" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="3AE5EB1C5BDC03F7" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2F7F96D0024A191A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="915822624A8B1F87" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="F81207EBD4FE2CB0" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="477E9292ECAFD41C" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="142F5431810C95FE" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="47E6BBF2999A2CA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4C0575A5E508B71D" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="DA66F8277FAA3E56" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="90FA94B5858E52F6" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="9CA2914FCA03F43" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3C0EBC5D8C74C18D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="592DEDB46BAEE0D" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8459BBA5C99A6153" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3B5F2CC572B44881" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8E79CB53EFBA257B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="222E15B4B1052867" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="A17514239A0804B4" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="105A72A11A4B7B95" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C9FB81B9855C2157" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="95064822AC45CE0A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="86D8EBF52ED73E50" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68CD169728AAC33E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5B015A7E5CC1676D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FF697C1FE094DD15" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="7C8F13AEE4182D99" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="29657A771FEBDA8" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E6F3F9F57DA06298" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="BB5BAE40B1227624" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="884A6496B193D0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FE3D08F2AE2D6D53" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3AA68B65AE858407" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="58B6B2B6B5C7E36E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="7E9E6E9DAB406332" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="63DF7A554211387C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CCE6E002EBA09728" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B4C1A8B0F5A7DBB1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF039D783F17EDB5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6ED8C748B8DEA13B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5852B9176B504B2B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="D570346683F5E0E6" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1C7D648D2394F73C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8297A2C172AC7939" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5843F702A2372E5E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="218553276B95AA6F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="732C32A0854FB8AB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F951C4170BF4ABBC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="337F373496A27DC7" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="E9525E1A7345D103" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="72E0E926D6CD7423" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="5A4EB0775A6288FA" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="638030A1EA972FD6" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="93E14072323F5DB7" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Tunable type="int" name="_default_state_weight" class="TunableRange" default="1" display="Default State Weight" muid="9449E2A9CE041064" min="1" max="None" description="A weight to use to choose to for the default state in a random&#xA;lottery of which state to run." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

        <Deleted name="_display_name" muid="D7ECEFD705303C80" />

        <Deleted name="_icon" muid="1309EECBD943FA00" />

        <Deleted name="_initiating_sim_tests" muid="55282AF0502AFAAA" />

        <Deleted name="_level_data" muid="639573E3B09205A7" />

        <Deleted name="_main_goal_visibility_test" muid="BAFA44A270F58955" />

        <TunableList name="_managed_states" class="TunableMapping" display="Managed States" muid="3E8C7025DED4069F" mapping_key="key" mapping_value="value" description="A mapping of state types to states." Deprecated="False" filter="0" group="Situation">
            <TunableTuple class="TunableTuple" muid="39E09460AA9A353E" Deprecated="False" filter="0" group="General">
                <TunableEnum type="VetEmployeeSituationStates" name="key" class="TunableEnumEntry" default="DEFAULT" display="Key" muid="8B6675622E74595F" dynamic_entries="vet-vet_employee_situation.VetEmployeeSituationStates._elements" static_entries="vet-vet_employee_situation.VetEmployeeSituationStates" Deprecated="False" filter="0" group="General" invalid_entries="DEFAULT" />
                <TunableTuple name="value" class="TunableTuple" display="Value" muid="CD6E59CB18136BA4" Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="enable_disable" class="OptionalTunable" default="disabled" display="Enable/Disable Support" muid="EFC5690B85626C4A" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9ABE85B2FB0DA8CA" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C31F06A6B925DEB0" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="disable_interaction" class="TunableInteractionOfInterest" display="Disable Interaction" muid="E1C844839D99640E" description="Interaction of interest which will cause this state to be disabled." Deprecated="False" filter="0" group="General">
                                <TunableList name="affordances" class="TunableList" display="Affordances" muid="174D8BF426BBF679" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                                    <Tunable type="interaction" class="TunableReference" muid="5846306CB60E8779" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="tags" class="TunableSet" display="Tags" muid="4BFD4F338C03A0F4" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E01ED306BE3DD450" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <Tunable type="buff" name="disabling_buff" class="TunableReference" display="Disabling Buff" muid="F85086FC170F6164" description="The Buff that disables the state, used to set&#xA;the state from the load." allow_none="False" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="enable_interaction" class="TunableInteractionOfInterest" display="Enable Interaction" muid="E2A5141C1C2F5C1E" description="Interaction of interest which will cause this state to be enabled." Deprecated="False" filter="0" group="General">
                                <TunableList name="affordances" class="TunableList" display="Affordances" muid="5FA098C8A6861C18" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                                    <Tunable type="interaction" class="TunableReference" muid="928C95D683D296AB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="tags" class="TunableSet" display="Tags" muid="470F534A339064E0" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B82AFF3F47FAFAB5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableTuple name="state" class="TunableVetManagedEmployeeSituationState" display="State" muid="C820DD99DDCB7B3E" description="Situation state that can specify transitions to other states,&#xA;or request a transition to a new state when it times itself out." Deprecated="False" filter="0" group="General">
                        <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="F75500F368F840F5" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="83254A4DCAA3A121" Deprecated="False" filter="0" group="General">
                                <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="8D2AC43FAB92AB7F" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                                <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="DD9CD1D3BB038DD4" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                        <TunableList name="state_specific_transitions" class="TunableMapping" display="State Specific Transitions" muid="34981DA3B72CB974" mapping_key="key" mapping_value="value" description="Mapping to allow direct transitions to other states using interactions." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="A635A33AE183AF27" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="VetEmployeeSituationStates" name="key" class="TunableEnumEntry" default="DEFAULT" display="Key" muid="6D40EEC82488F26C" dynamic_entries="vet-vet_employee_situation.VetEmployeeSituationStates._elements" static_entries="vet-vet_employee_situation.VetEmployeeSituationStates" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="value" class="TunableInteractionOfInterest" display="Value" muid="C61224D7CBDE216D" description="A tunable for one or more interactions that the situation needs to know about." Deprecated="False" filter="0" group="General">
                                    <TunableList name="affordances" class="TunableList" display="Affordances" muid="675F3B9177C0FB77" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                                        <Tunable type="interaction" class="TunableReference" muid="7574BAE947E89C3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableList name="tags" class="TunableSet" display="Tags" muid="6933BDA513E8B870" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="98737F37F09EF51B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableTuple>
                        </TunableList>
                        <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="B8978D4D7497F9E" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E0DB0BDFF3757E96" />
                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="39281D8C5B2723AD" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="transition_out_interaction" class="OptionalTunable" default="disabled" display="Transition Out Interaction" muid="E04205FA5893AE4E" description="When this interaction is run, this state can be transitioned out of;&#xA;we will try to advance to another state.  This can be used as a way &#xA;to switch states before the timeout occurs." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ACD04D332B4A8E1B" />
                            <TunableTuple name="enabled" class="TunableInteractionOfInterest" display="Enabled" muid="F50888517FA72988" description="A tunable for one or more interactions that the situation needs to know about." Deprecated="False" filter="0" group="General">
                                <TunableList name="affordances" class="TunableList" display="Affordances" muid="BB83CF1A12D5C097" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                                    <Tunable type="interaction" class="TunableReference" muid="6730E68EF9AED5E9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="tags" class="TunableSet" display="Tags" muid="17525EAC384C7AE8" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FE79D16B1826600" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="7D91F7E0D363D788" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="7F27CE4700DA2CDA" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="D7041046B9D0C95E" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="8B8F2C38623E821" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="39D31E37D6DA8C36" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                        <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="3D681A19E2C62EFE" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                            <Tunable type="action" class="TunableReference" muid="36FE62D6A670124B" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="32130E9A88D4750C" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                        <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="8118FA17A6A678B6" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="triggers" class="TunableList" display="Triggers" muid="1923351F7CA51CB5" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" class="TunableVariant" default="duration" muid="9EC3185AF2FC0CEE" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="4BA875E9CC330CFB" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="826E0DB45026255D" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="54F5BDA8E3089A01" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="93F827A272E6CBB1" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="BDB7DCC67C43340" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="DD6B0A74A155A9FD" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="948BFF1A440DF7ED" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="74A65B9CBC905C37" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="3C41BE246396A0C9" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="960454D3B0B78F7F" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="471C07944D8EF753" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8C358E9BCDD46245" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="F11784AB21F01C30" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="C56DE80B42F23773" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="D6C432C43F4DB331" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="3FE4427826373AC1" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="34AAD55AE6943435" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="2CDC21CE3B4A8318" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9B6BC42F8847D541" />
                                                        <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="E7C2E711400CDC84" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="880C7EBBCED6FB55" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="969DF2F24ED7E866" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="81C9B92AD952FD6C" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="buff" class="TunableReference" muid="4A69040E3A320A71" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="19C6FE22CDCB714" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="754F00B4A980CB12" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="1EEBAF390989000E" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C0823FF2F479AD0F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F38AC6F254852165" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="660F157195AC60A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5353E2A4DF19670F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="F3DBCBE8BB2A3194" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BCB995CA2E6FC413" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B9ED5BCDFC4EDE55" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="52A0D572B13BCB5A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BEDC18C672CFEA96" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="87C49558DE07FCE9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D26D7592F8BBB282" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="57A74E90EFDC4FE8" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C24564EB8E47CB1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="83863F92D100B526" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CF1929F6EA19CEEA" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="30FFC8C62C619927" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49E3A7C21A2392EF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A3F992C5D52417E9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C89B6E26A8B51F95" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="BF1D17013F8369CA" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="67DCD990E9CF55FA" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B5FD61EC1750CA07" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="350B125738C331B8" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="BF6861C292505478" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="96471F00AFDD4839" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9981322B788CF7B2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="36B475EF1EBAC23C" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1F155DF217F59128" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="C33AC7327874B0A" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="5A5C4527EF2E0958" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D6821772E9CB57A0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="853079FF6B451A0E" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="595F27CB8C63274D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4583507E3FF2A07F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="career" class="TunableReference" muid="7D5FB6E2129C03A2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1E1BF4D11B03C232" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D9087F2552505A4F" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="829E2830DBEC48F1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C3F69084C4DD734C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="64EDFC5F82E56CB7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9068888DB7D07A3F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="B5B49E650600C35A" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EF89445FAC4DD66" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="86BA779934D42F67" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F33E8B06EA5CD54D" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8CBFF0B9E7F388D7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="39669D96F77A288B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5B185FB0F6BC33D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2AB3A8558F4D3FA9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="career" class="TunableReference" muid="9EABB0996472E554" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="61966B6902ED4FE1" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="F07753CF4908587B" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="6E922E56AA4068B9" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="D3244D2B429CA989" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F78DC660A06222AD" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="4C69815B72640542" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="EA50A83D8F88AE90" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="6A812CC39E4381D1" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F9B74899E0749A5D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableList name="career_list" class="TunableSet" display="Career List" muid="E757D31CA4DF9309" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="DC3ABBAF9BEC6C9A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="46F88E1C59AB7889" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="53C89BF2B34D5D56" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="E02926CDA950AAA4" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="CF1379F85184BA72" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="B031A58E1D98605A" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="5B7384AB90C54BE2" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="1471325FC5D41FE8" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="154352D803CDBA37" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B88DE9C88447F64" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3A11464AF3E8C047" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="581D6AD51C9F1248" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="5E7AB429BFAA3C9A" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="8A09479B1E1BD712" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="5166B7BBDD0D329B" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="FCB5615EB91DB003" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="E634AABF04895EBE" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="728991687E312E72" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="55C088DB76C1028C" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="70F5C84F2719C4BD" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="D2F3CD9A605EB7A2" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="72A3A1866A2B0989" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="career" class="TunableReference" muid="A2DDA3B350CAD346" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="B8F0063662AE6104" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="98DE2A8B3624D8EB" />
                                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="A7139142B9F80145" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableVariant>
                                                                    <TunableList name="career_list" class="TunableSet" display="Career List" muid="B1C40085E78FF44D" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="career" class="TunableReference" muid="65B074E7DB0B0ED5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="27C7B8CD727B8CA1" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA996731E65FBE24" />
                                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2413D288E6C2A3DE" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="7C78A33488D0680" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A3693939FDC9E344" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="D2B5E95644FB80F8" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="F427FD4886EC4D5D" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="DD7A5E2325309252" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="73EABD3C118B0746" />
                                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2E87F5065A2F583A" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="5BA303798C3B79A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="9D222198A365CCEA" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                                <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="DB58EDCAAC32510" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="844CDE9C04B1336F" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7C8E5D14BDB22E0C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="717062BC55AB0F7E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="BE4EA2A13A4B31E8" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="E46EF1407E806396" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="DABECC9D4702BF94" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="201DF3764EDD5BEF" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="9740A61F949E7E84" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="E326830B991C4513" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="3540A408CB16333A" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="33E5B6A518A05785" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="3FBD92A1C1440487" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="16B4E64FEC6BAB25" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                                        <TunableList name="careers" class="TunableSet" display="Careers" muid="AD708E83F93F4D9C" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="career" class="TunableReference" muid="C419A721D0C92604" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="38DC4E093A16AC14" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF5C1D626B161D85" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4DC36E6D3D803734" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1AE919E5C262B0B1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C251C37DF0EF0FF2" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="747543353D3F95D9" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="99D0B3F00B48A482" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1F82F89932B60145" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F34F479F0855355C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="262D979164C68FBB" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="F2A0F9161558E20E" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="71248DA0D66F7F79" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F3F1BEF737AFEDD5" />
                                                                <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="DD6E7CAF7B854792" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="522EACE21FDF7BBD" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4EBC6037382DDA21" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BFCE0F366511B35C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="3FC38881ECD56213" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="201E37A9DBF1E388" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="102D7F9405AB320A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="D740B7D0115D7D0D" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="ED4295AA248FEA26" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="EB13CD4BC64CF0AE" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="147D29BAEFB70FE9" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="564D3057320A2771" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6CBB8F127EA03480" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="A4EC54F43F53A587" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92AC26077386448B" />
                                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="99BC77621CFE61D1" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="6A3033C1C00BB98B" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableVariant>
                                                            <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="E3DC40F3654993A9" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="4180EB7764ADA99C" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="407D34DC7F6D000C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E099855F4CDBEBBE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7D7C7FFF26CA7A38" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="47BBA991AA406D88" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="761B4FE0957714FA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="AA8634E3562A28FC" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="9F7E1607AD223D68" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="any" class="TunableExistance" display="Any" muid="8ACBE0F11800A7D0" />
                                                                <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="E87C7D799CF82A1D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="170D5D3AA1976665" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AC1FA9DDCAEB429F" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                            <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A9F5F767C445623A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="C94DC780C365BC68" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2726970831EE78AD" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="87EE4991798835C6" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E12677259453B4C1" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C28C52FFFD496E12" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="5DFDAA6A23883778" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="52DE1821E4611C41" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C4D6F818CEDC18B0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="5F2F0330EC99365D" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A47618EAB4930B46" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A842C3643331E2A2" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D120C99F25607CF2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="AA0390B81CF239AD" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9E1C7A2516CA5736" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="25CE3386A6C7AD02" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="E9BB0B4F20136C26" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="F18C7DF27EC3D515" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="1256F58D5C3439A9" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="227254ADF65C798D" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="EDD4CF810EF0DE70" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="239123437716AFFE" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="41AC69B1D2788A79" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="E2AC9732C5FDAAB0" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="B611812881123290" />
                                                            <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="576F09D2DDA8CB52" />
                                                            <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="29AEBE57C88100C0" />
                                                            <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="DA8D75B0103B79A5" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="3BF76C2C1B683F07" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="503266736B8CA6E7" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="22AB414D0B134F22" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Leader" class="TunableExistance" display="Leader" muid="8233D9C1FC70C1C9" />
                                                            <Tunable name="Member" class="TunableExistance" display="Member" muid="70A9DE71A634F338" />
                                                            <Tunable name="none" class="TunableExistance" display="None" muid="BADC992F72CA423C" />
                                                            <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="FB93FF038A1E079E" />
                                                            <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="7A3334D8CFE28F0E" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="91348C5D1E5C9134" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1809E88A4EBE9C61" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="95ADAD3A82AE3473" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="6C04D6270838D8F" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="31715B035B6C1AB9" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9AEFBBC9FCDA1292" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9BE010679E72926B" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="AC15A6705F9D50C9" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1CDD4584B5107AE" />
                                                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="ECC84BA2FFE854A9" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="2C76125B855CE0EC" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F4B613BEE425B7A" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="975608A6E65D0C2C" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F7300D71A6DE3CEF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F9C77BA48EB69DBB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F54C1404EAB6D18C" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="B946DB02C2778588" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D72E4A28CBCDCDB6" />
                                                        <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="3421E08E4B54A425" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="462974026F3CC6EB" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="A9EC2192748D15A6" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="76F1ECCFF1177946" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="18F675BBD0AEF24F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B155870C1E707526" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="91142474985D2DCE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="41544D31C7BAF24A" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="C52DF0F72E952D30" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="B061A3C12E34B59" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="5DD4525E00E84CC3" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="45E0665693A30E74" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="125FB8461E88DF64" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="20FC2F12E4EABCB9" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="710938264DE558C9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="93E18C026EC16F83" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="C8D4BF7821DC0801" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8E7497B5ACF56AC" />
                                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="C1F097BE0C7DED4F" />
                                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="86D90F3DA71B7ECE" />
                                                            </TunableVariant>
                                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="BC7243647542B35C" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="EB164B1FAC068DFD" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="4DEF16AE4E8888D0" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="B0BB51B3EB4AC8BE" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="1BB19762612DBE93" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="20FE3A3D4D5FA1E3" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="2D9D0C90E695A472" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="1C66D7DB623BB2C9" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" class="TunableReference" muid="3DF612DEE49951AB" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="4B5256872BFC737" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="D0892B9A86D8451E" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="FF1EE89F3F769205" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="DBCAAC9D2624BCCB" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D05F0170A02A4675" />
                                                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="A5B467A2BACC54D6" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" class="TunableReference" muid="3F0B2F5BFA80A330" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="500AE67E8DF6A862" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A8DF18A540EA91A2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3CE3B60F66B8720B" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="CAEA0D353E6C1FE0" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="D31EE0D644E41CC1" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D248F117BEFF6A74" />
                                                        <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="393387676D59E580" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="35FCA5BC8E4E5B4C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="618408B884FEA0DD" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="94DA6C30FB94DAF" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="406A5A12BD5AD0E0" />
                                                        <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="7BDEF41641840D9E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="69CF005B52D835E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D4E587FB26715D8D" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="7471C37B5105EE55" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="BF28316165F7BD59" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="34F7A7F563265FF4" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" class="TunableReference" muid="83307568174515CD" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="5DCF6EF931614B46" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F90E9037B52B3CA3" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D21FAB71F3EA578" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="29B297F1D07A820B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="20F6738D141958DB" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="106188AA3A253316" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="9300B6E4B92E615B" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="test_events" class="TunableList" display="Test Events" muid="3562E9C158FBB223" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="37EE8CAE91645394" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="B066EF18AC3A311C" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="AB8B3DB756675A8F" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="43F60A1A631EA01" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="801CFCE3A1C6CBB7" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="4DDBFEDB200E92FD" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E007C13C54E4D2A2" />
                                                        <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="AB3BCAEEA570A45B" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="310E8F4540311086" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3C1CF4FF4D57C7A" />
                                                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="ED9C293B3305F8E1" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="drama_node" class="TunableReference" muid="43E540BA215046C9" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8E73317567F2D502" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="ECA78E2C07515D2C" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="731494A1871A01B3" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="4B577264238773A1" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="BA45D2C41C3C4E99" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="660929FF5567ACA1" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="72AAE17C4B353DFF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="38FC8673FC5F3ADE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="4690825D44775E84" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DA999F7FB7CC3D38" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5E068F05FF07235E" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5554E4674D4A89E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="374582974A821041" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="EFA9327F3E49DB93" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="D45C50455F316F02" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C825EDF4124FA1FC" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="buff" class="TunableReference" muid="7998CBC685A385E7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="2DFA3E457107269" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D75FAD979102D362" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="6FA0F6DD5B8BF489" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2BA3C0615146592" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="8D4A50DAEDE02293" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="buff" class="TunableReference" muid="F0146F664A34A2C0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="C5F013EDC4CAD3A1" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CACFC54EF32BC954" />
                                                        <TunableList name="enabled" class="TunableTags" display="Enabled" muid="8B76122890CD7408" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="C7200A23E192EAC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="44044340345A7513" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="A31C8733181C6706" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="20C7F429D0FB05A8" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="count" class="TunableThreshold" display="Count" muid="E5CDFB871459700C" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5D2700164C25529A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F5B5055611CB579E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="count" class="TunableTuple" display="Count" muid="CEFC59DD2BD522D6" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="count" class="TunableThreshold" display="Count" muid="4DAD06AD957C4557" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1495FA2BE9B85DAA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E917CAF079C3E2A8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="CBF76F4A7AB4632" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="500833BAB2F68269" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="F9D7631B360F6BED" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="count" class="TunableThreshold" display="Count" muid="F9FEECC6955C9E61" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C1D12299C98A77E4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="8922DF0048A9878B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="49DAB847BD15208F" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="5A205BE98EC54AE8" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="2C022CD5CB1DFE2C" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="8DE200AC15D60613" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                                    <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="C03C465D69EDC0C7" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                                </TunableTuple>
                                                                <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="D283C13BBA755AF8" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="34AFC931679EE065" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="3ED10988BD7622F8" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="86925F8FE5706B9D" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                                        </TunableList>
                                                                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="803D6052573CD817" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="E544ED7BB01B1A23" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="BD0FD31FFF749439" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="5B78127631CB0511" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="6164ACEDA98065FE" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="888C0C45DC2F2F50" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="E661E615A9A13401" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="9197AD0491445720" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3964FB6B1D36E4EA" />
                                                                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="C4B065C74E43EDE3" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="EE3CFC73D3DE888B" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F56FEB542B7290B5" />
                                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E5F4EB9357273AC" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                                    </TunableVariant>
                                                                    <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="CEBD14D48D38FA49" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                                    <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="CE7108A2BECAC4AE" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BE58D990C96FB395" />
                                                                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="9F2EF772394B0B7A" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="3C13A1CA4DDCEC87" Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="C99E017409424719" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="BBB3648818FE2E56" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="55A2673DF810406A" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                        <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="C9DB7C13377AC0C7" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="3F2F57B08563E159" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="CC912466A952F486" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F41C6F639AA1FC3E" />
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="459CCB0A99D0443F" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="9D293DA34C9E1FE2" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="D35DE1C041D12E7E" />
                                                        <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="2B61C6DDDD202191" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="50A9585F02EFB4C7" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="91610986CCF0AE9B" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="BDB5F6B6AF3F678B" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="90F83BB14F6236BD" />
                                                                    <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="4522E60FDBC7ECD8" Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E6990A7153BEDEA7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F2F0D3B3B68813AE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8D6FA00970D1D715" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="CC7A92747F8E395D" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="94B6B0190FFB2611" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="77CCA7693B89A49" />
                                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="34FF48B10D078E78" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="93BDE159883D2B6" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="AE4F05D0DF07B6B8" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="FD1DF0EB530E5E31" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="646A3741906D7362" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="9CDF09B3237219B4" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="86106EFEC65A33D" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="3D319D9D3A2E1C82" />
                                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="F3936105E3A2805" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="CF1A35EB4DB8323C" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="3E3FB6490BB1C52C" Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="BB621B703EE3043B" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D617BB04BC4A626D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2FE3648F69E690C7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="65D42D480CEFED16" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="249996A8F36E3020" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="object_state" class="TunableReference" muid="E12C7454DD09BCF8" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="557ADA81E1408F21" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="2A4F13472703EDA3" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F2478D83634C099E" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4DDCFEB5F8582C5C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E7761F6C909FAE83" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="4003BEDD72447107" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="B67ED48C564F8E40" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="998B05F7AC3A9186" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="82DC64A8C303AFB5" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="E21D99641F21D9F0" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="D4D8AADDFCC6F3D4" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="DF518D47894AA260" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="2B33CC391E94E7E0" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C6BB537CC657A97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="B82C438F30AA5D56" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="A3361CC76DB8701E" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="5330C19F2EA6A0A0" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="A9C46E60348A06EC" Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="FB90F294F289B6B0" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8F00BC0254BF6F98" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2C32421B69835C40" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6A572CC54D7DB5ED" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="CFCA20D409D527F3" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="FB497BCEB436555C" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="286E4C6B10679CF0" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="F2AED63E7B0015D" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C34FECAD29DBD188" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4653D878BB79B92C" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="713DEEB29B861297" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1B14AF621D1C8D99" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8FF4EDFF9DDFA08C" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="49D8C1641257A7F4" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="54367F596824B628" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A77065FDD7FE2197" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="DD8F85D7708BFC7C" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3B6347F1DAA1776" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4987E6D056DBC76E" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="E93BD89D72F619B1" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9C4539E7A757326D" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="659C63FD0F150503" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B2E54A38788AA663" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="F07BC420B7A60CD2" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="4DF960E119F90919" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="2D317A90CC36B1F" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="42AD6119CA930501" />
                                                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="407FB2241035969D" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BD1F6E9B7640A1B1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CEC475F1CEB63DB3" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="85231EF18A648DDF" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="754D4FE5F492287A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A72C617D7ED308DC" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="26AA7F832BBFFC74" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="38D011FA5826EF6C" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FFDC0928C0C99D4B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="98C9E7B712EDD44B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5F279A986F79C4FD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="662D9D641BFB9110" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="5510465ADA6C0D66" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="96BF1EDCB3A0F691" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FBF61429317612E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="95F7813BFE865EC8" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="92773D6CA92FEAF9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4F33A0A8E3148F50" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="79E54048879E173" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D1FE0798A8073293" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="5DFEE86B22A59488" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="7053E57E1BC87DA2" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="201657E72EADA82D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AB462F3CD59ED0A6" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8D515C2F462B463B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="AFAB9105E8B33CEB" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="D852E4261439BEAA" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="C66C93462A9584F4" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="CBB1415D10056A0A" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="F4E65D4289635C76" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="49C2012C5FE4893F" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADF1D06CFBE1FC47" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AAB41C31D064B866" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="641D81F58A4A3A3C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="78C5AD6013AA3D32" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="1FD7D81D16CD70FE" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="9370A59FA30273D" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="A1D5A77E4C5E7761" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="D93A3394F851EC70" />
                                                        <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="C8A0A7271E11348C" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F557E7EF2C0A89E8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C026347130C50687" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6FAFA2FD51E0C58E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="F92F4CE2D44D5941" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="B3900F6C917CCC40" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="86F7E295E30B5C50" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="39E4FC4C8E811762" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="4859E8F9EC011228" />
                                                        <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="5C06D7612E173D0" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="CD486CE652FCEF23" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="4E3CC89CB3C70F78" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="E99E9455CDD50320" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="8A684CCF212F4E01" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="5E2B894455580AE0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="580BD276A239A5A1" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ABE68772FCE4D2F2" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FE8C99B085640DCA" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="9E9EF58E8269352C" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="806D4DB6F82C2008" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="7AB40D3C32F4AC8" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C7AF806B93506F1E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="D27256FB8E5B6587" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="F774E5BCE42CF2F" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E1CFF9F9E33007FB" />
                                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="61A63705A307FE9E" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4BABB291FAFE1F30" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="94CE17243E085A15" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="50F4CDD9E921E178" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="87049737B90DC857" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="test_events" class="TunableList" display="Test Events" muid="5CB7536C74BF06CD" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="18202767ED53FE18" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="5EABF6F620D0F6F9" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="2A2848D2F023932D" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="65C3092FD60BC45B" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7FBB5A144CF322BD" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="98768EF332479C9" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B2A50B825A4D97CF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5F517D6195B7675F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="170148D7734AF6CD" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="7BFB06FC4A2F5CA4" />
                                                                <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="B329D11E9B6986F4" />
                                                                <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="C1709DC22E17169F" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="2D05E454846874D7" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="4614C80E9B3AF0D3" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="959FCBE7B6A8A888" />
                                                        <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="CF9110D5B8D0B89C" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="E86F79DD444EC88" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="D648793E4149FBC7" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EC9018BD183BCF4F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="75810132517016D4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="38DF454BE6FFB42C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="2DA44D9A9854EB27" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="E1B378635925390D" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BDC8D8D58E4AF0C4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6E01A7EC6552F57A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="93086E77082DBACF" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="F6A1085229F4EB12" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E3CEC028DBBB95B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3D6932521486C6A9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="CCE29E28ABF76EC" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="6C74E3C03BBDF6DB" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="E9C563BB69B1D845" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AFE8C46584BBAA9A" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B28A7BD6F8C82E14" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="724D06E240527589" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="473DCA68583B5887" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="80EEC5C7A85C0A26" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7033DF3285207178" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AD60FF90B82128" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3942BABF9FC13A70" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="FBE3A5D606D6A099" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="C5C652A14736316" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="away_action" class="TunableReference" muid="FFE1DAFB67663A8F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="EF73D551A0FDE49" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="4C70E47CAECCFC99" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="DA35BC2B8B10402E" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="3D9108B3F8502832" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                                    </TunableList>
                                                    <TunableList name="affordances" class="TunableSet" display="Affordances" muid="9A4279A635BC8F43" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="interaction" class="TunableReference" muid="5D9E1BEC4E2C0611" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="7D837BB730E644AF" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="7CC582D798FF5B3E" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="96C2CB1C57F6CD6F" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="53087E32CA394BE2" />
                                                        <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="749EA6C008AC67A5" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="CA33C03576F23FDA" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4082AA839BC23502" />
                                                        <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="7E5E8A0C5A2C6F6A" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="B1D52E18D0A4740F" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="25D466AB3409F380" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="tags" class="TunableSet" display="Tags" muid="7AE488DD577B8A52" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2E9201106A8EAB57" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="84C8C061CF073365" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="EC67233082FFDF30" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2DEDF84C1846F58" />
                                                            <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="F0BEEFBD6C9BD029" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="699D52475F475BD3" Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="7404809EC62388F" />
                                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="57817E1BE52392D4" Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="7637ACF3766AE3A2" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="CA0BEBFBAE2520B3" Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="40BB6D194981B307" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C709365086C41C01" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="74998FC87982C4C2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                            </TunableList>
                                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E4C9941C4781EE74" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="62AB37ED6D532CBD" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="object_state" class="TunableReference" muid="71B178B34F6BE4BF" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="8E391B042CC33B52" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="68FBC0BD46A18D3D" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6E68582A2854DC91" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D61E93E5384D8D61" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D2A12CD97BFF3CEC" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6A3A3B19421164E1" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="13793EB750229533" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="539B01173A84C187" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="A2A786DC001CE93B" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="5A938DFC190FD427" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="51B4C0AD499E53F9" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="F4167A57C9A031B3" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E67030BCB2606DF" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="27806869023AD4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D49FD7A17B7AA751" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="A2D72B9AC0F704F9" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="FEC576A65F2A8CC5" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="958BD819B89B661D" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="C39AFF3FAFA8A1B4" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D62832AB12EBB215" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="96B0D770A2463FF7" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="D1F12903D4845D10" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1E9A669148C829AD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1B8E9861EDFE5D1A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="9162BE63E07386E8" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="B3CA0F37A1832736" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="B68C4C321492374F" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="CD01F922F8C477C5" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="F4A76B642561D0FB" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="B7B77EB7DD449FFB" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="4C96E04CD08ED60F" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="38D8234D2DE86E89" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="6207952FEB98EB58" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="E73EDFAF55B1358F" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="1DD69ECADA5AA2DE" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="B79BE28AFA306637" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="A13F6BD03B541917" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="BE08B69EC1192D76" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="F625679522C8E429" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="9438A4B952A22522" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="9BB21C0B9EE68ECC" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="7BDDE4816172A36A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="38FDA4590D91A483" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="BDB84E328BBC4ED0" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="D70FCBE2E176FB94" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="28E24B17A8232C7B" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C05D9C8D4DEF0AFB" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="DE1D753F6B31345C" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="C9DA66C3EA058DBB" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="EEFA8F38CF4F3E56" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                                <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="1A305FDA42FCB8F" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="70F070F0B201C9F9" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="9B0AB9F48A497FEF" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="7849AD7AC211EB13" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="F05CE05D40ABFE46" />
                                                        <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="67D25DF3F6311E86" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="BC32032041DAD134" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="D8E5DAF662C2D87A" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="99770E6CA0C7E8B2" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="49CB5228DFE50F01" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="96F1FA218322D3" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5F3625534204B65B" />
                                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="12992B978297CAB3" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="DDA4BDAC31C8985" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="B61451310B0292F9" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="3076AC0709DFAF75" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="348F1AC560A76307" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="B932B1081767B2CB" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="68B4CBC156CE57FD" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="616F673D00A83A71" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F9F74C2B97152799" />
                                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="F4E4B069E43918B4" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="E0F675B8B8628E79" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="CE8ECAF99DA82577" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="C65BF82255958E89" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="18018DCBF198D2A1" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="B78468DB4CBCD660" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="4AC660AD0CF490C4" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="349186901703CF39" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="CF1C0ED66E37624F" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                        <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="D745D79DC37BC112" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="DDA7051B543E1D29" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                        <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="32B47D855C411503" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="8A2550AF77C2114D" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                        <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="FC34B6D70D0413F1" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="36085612FCCC296A" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="D11826315150F13B" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A6856AF7450444B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="37E8C1CFAE3A638D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="4C619535668DE069" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="714B0C0AADF9BF0F" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="369C99E84ACC389C" />
                                                        <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="EB6564913DF53F05" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="CBE886B3E1D423BC" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="6892F5B7A427E8A" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="2D99CCDF323FC07B" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F6477FE440CD7B4D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="CBC2C105D283558A" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="68E08E26BBAB68DC" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FF6B1B73420F0FBE" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="14A5125520FB3FAF" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9497960F32A61A54" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BB027E115E406F5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="54701C768E14F252" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2E0343DB3A25EE20" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5D721D11254568C0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CAAE94B22635499" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="19E680D2F01DCE30" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="B439121BE287ED89" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="7D4AD911572FEE17" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4B6BF588DBD9CEA" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="81CF64D8D77916E6" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="231B51D4E1CB7795" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4D954A818D333F69" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="D195AB7F98FF222E" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A11572B74E96E260" />
                                                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="B143B142908137B4" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="58B905FCC582DCEC" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B0618563CC8E7ACB" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="7CD584EA7B1A25A5" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="situation" class="TunableReference" muid="11D6A5FB332FE584" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="B364BA56FBC3BA06" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF2F3756373E015C" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="450CEE1A2037E767" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="situation" class="TunableReference" muid="1A1729A370D2D88A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="E9A11D3E50BB49B9" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="9465F3AE545F15D5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="CFD8BF5519729BFB" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3E9E47A45C0C31B" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="1A99175572556448" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="46FC474C5C2C19B0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="ED33EB670A92EFDC" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="5315341F26A56839" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="7BEF79F716A9FC4" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="334B4736A39071F2" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="F53F2F969FC8C914" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                    <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="13D13C66001F396B" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="66B53E92B0EF7581" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9D889AD0F578124C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="765B5C379C948854" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="69AE6F056856F26" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="8578D8139EC1B328" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="3184DD014AC85E46" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="7E38F93426EC35A2" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="E3923E1FF68F488F" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="AE7CB95E19E2C7CA" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="1757C1A886407F33" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="5084A6D67941C3AF" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="93444FEEF1C81B41" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="B8BB4E44ECAC00FC" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2AA5670CEB74F54B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CC55A7D0619535F4" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="79EBB318246C51DC" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="43A68A496FDF8C5C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8CB627B6EE4D5C90" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="EF514DBD01D8E666" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="8808FFBD4852EAE7" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="C16100CA7A0630CE" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="503A22C2CFD0D83F" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="6FDA96490C3F9D59" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="trait" class="TunableReference" muid="74EE45E2FED52964" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="77DAB5A1D637832C" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="F2C109AAAF5B02C8" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="C3C6C98C278466B9" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="A45975857969781C" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="BF8FDFCFBB8C05C8" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="25B6AB07EE0805DB" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="trait" class="TunableReference" muid="20B8EF49060D5B23" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="B7505438BB5BB997" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="83710F7C82F922AA" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="F4E9CDE6F73F197" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="E1C7C863AAB64216" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A715675AA1BC7E8F" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="5902C139D8F5BCDA" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="3BB560DCD118B075" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="69FD60613EE7F331" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="C5CAA77C9540194A" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="4F0090D3E9D835CC" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C2382B9346376355" />
                                                                <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="93AF0ABE32CDD842" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="634EC1D8B795BCEF" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F6718408A80510F" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E00182400CA492D1" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="6D38B0174EB4F546" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="656F994FD5D02F72" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="EA3292A83E8C2D43" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DD6F7B6C8A1CFCF2" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="792611CECC7EB93" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="33C79449B10BEEB1" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="AE33A984D0AD04EB" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8F261524691BBD07" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="5BAAB447AF184D2D" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="F9A9856C5BF60B5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5DCE860391F4C9B8" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="268C4074D24150B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5D7DCD3B46CF5BFC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="D7567B56656D8194" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="655F740C4EF5385C" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="557D65E3C31AF97B" />
                                                        <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="849A7D61CBC959B5" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="D910304FA95424D1" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="39359AA6AAC105AE" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="C2DD73FA62B49819" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="13630EA3028FC9F2" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A3BC3DDFD8188594" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="8D0E8E4FD59F593D" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9545A65FE81B9077" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="DF647D6A8EB0978" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="B2DB3420EB149C31" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="98A19BD3CE77B50D" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6B108B943D345276" />
                                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="211B65A63E2B1137" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="FF7F774E9EC9A52F" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="5C1D2DD046C04F49" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="3D7A8AF55DB565D0" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A0991CC112DB2693" />
                                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="5CB5EBAFE6AF1B5F" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="6268715CAEBA5B7A" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="FB3F0A6DC9EC8122" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="4D62364726145664" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8738214CA4617E4A" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1941479D48202210" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="AA8CC202671A3C08" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D0BF7A5C4D8FD54D" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F3EB9ACC0345699D" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="215166A7E4CD7851" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="F647F3EFED1D7671" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F91364241C613FDA" />
                                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="17257E3EB21362C3" description="                    " Deprecated="False" filter="0" group="General">
                                                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="58BAAED493907E50" />
                                                                <Tunable name="none" class="TunableExistance" display="None" muid="B40AE17525C7336F" />
                                                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="7F5CE5F98107CE41" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="DD9D7233C5470F6B" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3331F538B0CABF78" />
                                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="CC74A90E5B4129A2" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="787B9FB830A49FF8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A1E34233B39E65F2" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6C9ABBFE26E97C9F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D41A6B5438430D4" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="venue" class="TunableReference" muid="3B9B912B59B7BBC6" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="71B574516E7AF7D1" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="220E385AEFD0BC1A" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C9861EA0B71B5B12" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A5FB82D1FD622CD1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="905DAF3A4C25361F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B79823A6926704DF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="B42A5A3A1F76F3BE" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EA97299B8E012010" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4DDDEF6E3F1D5482" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B87FE651BF9490DB" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B9C7633B24CD37F1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D7864D0996692B9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E45910BAE61ABC52" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4F1F825A2EE34BAE" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="venue" class="TunableReference" muid="C589AC204B8E68C6" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="8B93CE58A9F01A85" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="349233043EA3829B" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E02D9A03F006E1AC" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="6459BA1E9E9A0CFA" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8646F510CE0B09A" />
                                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="A99080FCA6741A8B" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CFCE07828BD524D5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="749F732F7EC26379" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B5D267841F893989" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D6329C1A1305946C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="worlddescription" class="TunableReference" muid="27ED088465CA4711" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9713CE31DE0B88D1" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9C74FD1CA9E8A5DD" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8144A20906D58DA8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DD50566BE1382858" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="83235E228C49E196" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7DF010CDCEE1736B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C2A6B541544CBC8B" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5F735EB8F6E7C888" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E5839ACEE8F0C46E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="57826F5B908C2340" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="37F72FDC632A201D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E034E021E2753B1A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C267D4228911BF5E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4DDA0F92BB527BFF" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="worlddescription" class="TunableReference" muid="69B362A86FFA9675" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="484FB38B7C655C88" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D0D49340CA5AE339" />
                                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="BCD3B4ECB6BC588F" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B66ADFA2709D1124" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D66BC0D961C3F9F1" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B3C43580E0E98A39" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7DB03C5881A0141C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="zone_modifier" class="TunableReference" muid="89781CA88B7DF346" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="486C8725A66F90FE" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="66C1508B8B7FA59B" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="105AED0A8AF68F73" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D9A5C64C62AE55D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DD6A1F528326083B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="52BB9A70621DFE9D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="F2BD14D2C2115C27" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="10695511728A97E6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D9CC1C6B079D3897" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B3232C094C5B5491" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8EB20F263E3C0302" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9FDF6F47DF987CC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="351DE796406C4B4E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A81241F31090227A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="zone_modifier" class="TunableReference" muid="A7840118CE307568" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="12884AC3E3D2ECF1" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="8283D85255012493" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="E678AE19E77871A3" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="D1393E56F73C86F8" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableList>
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="DE911FF9EE750C1" min="0" max="None" description="A weight to use to choose to run this state in a random lottery." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <Deleted name="_relationship_between_job_members" muid="A79E8772DCBF7DB" />

        <Deleted name="_resident_job" muid="3A25C9BFF762F3E9" />

        <Deleted name="audio_sting_on_start" muid="6A60EDFBEE050FE8" />

        <Deleted name="background_audio" muid="AA691BF8DF436701" />

        <Deleted name="category" muid="C6FC66687F425986" />

        <Deleted name="compatible_venues" muid="C637E455212AA452" />

        <Deleted name="creation_ui_option" muid="D9A102B274DD805B" />

        <Deleted name="duration" muid="12A5230622C1FC67" />

        <Deleted name="end_situation_dialog" muid="AC066C83388321B6" />

        <Deleted name="entitlement" muid="477E6B2A7EDCA6BD" />

        <Deleted name="exclusivity" muid="D2F6509B9594B4BE" />

        <Deleted name="force_invite_only" muid="6624EE4AC5D5B48F" />

        <Deleted name="goal_button_text" muid="7766012E781E8030" />

        <Deleted name="goal_sub_text" muid="15C1B66D2DB7A5C9" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="BFB56D74B891E9B4" />

        <Deleted name="job_display_ordering" muid="6A16CC2614619946" />

        <Deleted name="main_goal" muid="D86619A3C26A90CD" />

        <Deleted name="main_goal_audio_sting" muid="1B4121B6351AB63D" />

        <Deleted name="max_participants" muid="7C0F95A89A828F0C" />

        <Deleted name="minor_goal_chains" muid="B28F22F5F219B84C" />

        <Deleted name="recommended_job_object_notification" muid="F3C549A5FBEDAEB5" />

        <Deleted name="recommended_job_object_text" muid="A2B707D9CC34134" />

        <Deleted name="screen_slam_bronze" muid="2FF3C4849288823F" />

        <Deleted name="screen_slam_gold" muid="989C24D1E06A8B56" />

        <Deleted name="screen_slam_no_medal" muid="FE243322AFD75BDD" />

        <Deleted name="screen_slam_silver" muid="686F17747C2433DD" />

        <Deleted name="situation_description" muid="A6FC7B20C1885BD1" />

        <Deleted name="suppress_scoring_progress_bar" muid="4FD5FE9CB9118E67" />

        <Deleted name="targeted_situation" muid="A7FC46B1AC8169A7" />

        <TunableTuple name="total_work_time" class="TunableInterval" display="Total Work Time" muid="6AC96A8A3FA9F025" description="The amount of time in sim minutes an employee will work before&#xA;leaving for the day." Deprecated="False" filter="0" group="General">
            <Tunable type="float" name="lower_bound" class="TunableSimMinute" default="1" display="Lower Bound" muid="35C2067C8C1EC8EF" min="None" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="upper_bound" class="TunableSimMinute" default="2" display="Upper Bound" muid="FB4FB00A2181D4EC" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableList name="total_work_time_buffs" class="TunableMapping" display="Total Work Time Buffs" muid="723F417450CE36B4" mapping_key="key" mapping_value="value" description="A mapping from percentage duration worked to buffs applied to&#xA;employees working more than this amount. Buffs don't stack; the&#xA;higher percentage buff is the applied one." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="5246C5FC23B3F076" Deprecated="False" filter="0" group="General">
                <Tunable type="float" name="key" class="TunablePercent" default="50" display="Key" muid="B2E5CB419E8DA640" min="0" max="100" description="The percentage duration worked." Deprecated="False" filter="0" group="General" />
                <TunableTuple name="value" class="TunableBuffReference" display="Value" muid="AF9821F5C5349C13" description="The buff applied to employees working over the specified amount." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="buff_reason" class="OptionalTunable" default="disabled" display="Buff Reason" muid="74A5D4343E9B8E87" description="If set, specify a reason why the buff was added." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2B9A5185F48DC2CF" />
                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E5A9EDD324AFB215" description="The reason the buff was added. This will be displayed in the&#xA;buff tooltip." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="buff" name="buff_type" class="TunableReference" display="Buff Type" muid="CE14ACC86199DE94" description="Buff that will get added to sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <Deleted name="travel_request_behavior" muid="57290C124E1C8F85" />

        <Deleted name="venue_invitation_message" muid="182CE2A8C593FA49" />

        <Deleted name="venue_situation_player_job" muid="E14C9F771082AC07" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="66F58EF04B750EC5" />
        </ActionList>
    </VersionHistory>
</TuningRoot>