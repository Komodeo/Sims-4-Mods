<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="SkeletonNPCSituation" module="situations.complex.skeleton_npc_situation" muid="8860F9AA3E399CA4" description="A situation used to control the behavior of NPC skeletons." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="635A200AC6F2A2A8" />

        <Deleted name="_cost" muid="D25666551F06E6FF" />

        <Deleted name="_display_name" muid="6A2CF16A49AFDAD2" />

        <Deleted name="_icon" muid="81866652C9B764D4" />

        <Deleted name="_initiating_sim_tests" muid="E4963F52B9F781E5" />

        <Deleted name="_level_data" muid="A8421D9B67B527AC" />

        <Deleted name="_main_goal_visibility_test" muid="96757BF83CFCD91D" />

        <Deleted name="_relationship_between_job_members" muid="A51758FF34159366" />

        <Deleted name="_resident_job" muid="8213C21D223DC9D8" />

        <Deleted name="audio_sting_on_start" muid="5F59FAA476EC6AE" />

        <Deleted name="background_audio" muid="B41D67232601BA11" />

        <TunableTuple name="be_skeleton_state" class="TunableBeSkeleton" display="Be Skeleton State" muid="A107D36E9442DFF4" description="Situation State used by the skeleton." Deprecated="False" filter="0" group="Situation State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="5E8DECDA14D880FE" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="19461ABF549768BF" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="9F7D59D2E5818F15" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="87BF5602DE1E9C2F" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="17FCB3CCFB36C866" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="EAC20A341104E8E4" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="347F3A433482A86" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="428A4BAF63FD7C4B" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="291BE7230CE8532" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="6D497C1A14A561A2" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="87AB3A08A2E9C916" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="3DB2E9C50F540CBA" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="E42F714500E55E08" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="42C64BACDCBF115A" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="6862A2C8481A486" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="161746683259D249" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="FED7246416AD64C5" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="D9E3DF84B7E69D71" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="E430AF39CECD203" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="A34B1398589E7E57" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="C490F4B32C1577D0" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="1BDBE9E76E075B83" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="DFC7C5E799DD4026" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="72F2EF5A5A1F3671" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="14C5E17CA9EAE7FF" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="A77B1307AE786CD2" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="385AAAA9B4D3714B" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="484D01957EAA696E" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="4CB887E5DE844E0" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C941BD7B792DDAE3" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ECD749740B3A8009" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="F3E5B7BA60639C8C" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="C3014166131CF44C" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="648CBB0D55D35666" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="4C23011FCEE69028" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7800227689A71961" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="B05782844CFBEEE7" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="221B7495CAF6BED2" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="89B560729FDDEC9E" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="609E7DB523483626" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="A9D068E726D09AFA" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="82782D184F78AD99" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="304494D2561AC6F3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="37AFD792D0548DA" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="2F74B93BB3F40C15" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="4253C1D079F90E39" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F1B70E2E7852B126" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2B40F9D271A2FBE5" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B0C381BE6260977" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="163B36A6A698D5EE" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="C367DCF115401A1E" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F4F91CF00C8FD4E3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FCF5866842E7EDC1" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4192A35F4E0F229B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AC55EEADB416F52" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F8EAEDC5BC0383E9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E4AE236C7C883210" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="2DE24984AFCF44E2" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="69516013159475B9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D538B5EF73875B5A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C827B76FB91CE725" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CA9C18EDF8C24373" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="26ECA4C7665DE29D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="225014D576DF743D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D6B978BE053C4106" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="D7DB2BA38C6BE41D" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="D752702D1267B282" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="634BFA7F49A551C9" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="B093D103697EEE39" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="55BBF1D970775753" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D654F6D3993F9462" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="81997A7C97E9A8C1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C6C70CA7449A0A8" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="237B8F934E856A3A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="3962A780DAFD30A0" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="E819283585D889A7" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E0737783DC847F3F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F33872EB43FACB79" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9EC4C1DBEA436333" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="732BE31BDD02AB27" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="68C6F9F25DAB8588" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D593AC7C9236D2EC" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DC3C0E8115D0D5CA" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ACDBD82960F92972" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A23E0EBC6C0CF3C5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5A0B798D6893E5CD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7AF0E7C009633156" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="CADF88A3131AC205" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="151052C0B13658C3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B8EDEC526B3456E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1393ED3DF4813829" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B538F52AAB5706C6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="951BADC40570FB8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5E8236B97189C9AD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B0CD9DE0A4C3E8A2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="FC8B666AAA54FC29" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="4DC4B525E9188C1C" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="3653293F1ED83EF7" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="93198EB28E033FD4" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="D1B7D24A954D4DD9" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9C7C1A0E3C8F1F77" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="6E66094B6D0B8455" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="DEE252E1643C8CEA" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="D5FB3C5A9B3A5F41" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F6566D680DD2B99D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="4268738C34BFDFFB" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="89CE37C622F0D498" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="6291317B7B2AD504" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E339E6AA8AE71EF9" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3933AB14162EAAE" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9E862CAA9B6FC874" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="DA98181FA9D6FF91" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="B1D494C7F44188CC" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="5C7F573C4F017039" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="6D80336FC9CE3EED" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5BC6695C945CF948" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8F634ED986429F65" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="85E0557EB2936E05" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="30EC59A506B4E7DC" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="3A7E175E3BE2BB20" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="3DC77E103C304A41" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="EDF01885419DE957" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="BF1B4DEA852B790E" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="EFB95782C58236DF" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="66127247245168D7" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="EF7CA35602EF1C71" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="837088DF3D387748" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="147BAB289E311CF6" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="E07404233ACAB06F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="5369DE37E8C5561F" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="C0CA30330A7CC7F0" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="3A80A7C2592C8287" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="FDAA5125FDBA3386" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="59C447D3E9FC65D9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8EB118D920EDAC22" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8561B50069209FAE" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DB17A29DA15A228C" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="490997351B519B41" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="47C808391916ADB9" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="1198300FD48B42B8" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="3DA4C4D97DDF0419" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="22DDDF567CFA2AE4" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="50218ACB4A7428E3" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="ACDDABF4BC531AAA" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="FB4B776B0E9060D6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C54AC652CF5A37" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="163327E6FC39EC11" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="9C4BB479B4F2ED0" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9CC886D2427F99C7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="495777391E154447" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="DFAFD237908610E1" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="E547E9F51B8E9817" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="DA00C9529D88A760" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="BCF0E663D5C36D82" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="9DBCDC88D2AE102A" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="42264FF41262A0DD" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="4D7BAD12553B007F" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D24AF996186698B1" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="465DBF9A96944515" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="44D2615CB872DB5B" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="E09E29C5D1EC216C" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="65055836CD4C2D00" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CE6111CE57F94D1E" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="41B43D832CFF0ABF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C36E338DA43C1FF0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="191B06386459F77F" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="67EED0EEDA1E0206" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="510B9DA589C1564B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="BED8F2AF1486A57" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="6A1A4242D76668A1" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="752E7D09C7810C1D" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="A35F0876BBBD484C" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="3C68391EF2963755" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="629628ADD3514D7B" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="321DBBA271F83389" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="3E2F7FE03F3245CC" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="469DF26F2686F919" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2E949EF7C738983D" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BCDF21E8769200EE" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="4B1B2DE3BB349203" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="31D837825987F6FB" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F0A02A452339762" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="950DDE4F1454CF72" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="2778AAB4A5065E99" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="6227C33FCF36AE13" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="95AE991ECB705C72" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="B6474FBC29980B77" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="999C7EE09B1BD2CA" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="AAA4A371B4996C19" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F57B2EC315F2BC2" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="92058AE2010F2F46" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="49D5AAEBDD811E04" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="26C7BDA30D8C28F2" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="40B5D47EC6116701" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="148B28F28C3C12D6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3269541854033879" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F4AABCABAD1DF474" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C2CE258AA1272C38" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8C19BDBA9EDB1F2A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="39EA55294C6041DB" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="7ECB12C87854ED29" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="6782863450ECB649" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="CEA4228B55EFD1F8" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="15DC90E7605FB0A1" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A7C2EC91991CCE84" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="33597008E862BA52" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="6DFF9392F521ABAF" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="39939936559B64D6" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="B5148767A2AF220" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2F037AEB67F6D46D" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="E89A89DC9FE48265" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="815BDD80E6ED1D0E" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2842B27F33F860BC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E61585A99939E8D5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="EDEB823443483C73" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="602CFC2714F396E6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29511F5B1F236E26" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="677305AD91B08D95" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="96861C87D570542A" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D8D7D307FD6D950D" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="7249D551B2D859BC" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3FFE74CBB030A72A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="698255E237C23BD3" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="E75D8758ED1A7F4C" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="B439C8675F302AEC" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="AD267B20BD6D39D1" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="288CE6FF3EF7D5A6" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E9B167AA0AA0CC55" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="46565F356A1F30E2" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="6F281EF6CD254AD1" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="F429425C99444345" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="567526137A7EB947" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="6BF3527D607EBA08" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="4E3B927C43C0E68A" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EA5883D20FF4692E" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="8ADDFD583F8CF98F" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="9A947E99037AB7AB" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="440F590F2B4CA95D" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="3A9BEA0800D6CA2C" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="45A5FAD3655B4A43" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="73D373D015A653F0" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="D8F7D0D6676FB266" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6D70C66990D52F0" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3260CD18B7B7AB3D" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="8F6F9418CEA80E40" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="560C0BDD141C89E9" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="68028EAD9BFE1A7B" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="440917F41BFF76FE" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="BA2E28F997585F33" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EB612BFF3C3079C9" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="B087AACDD4C88206" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="66BAB46AC618030" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F41F2A5832083899" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D83A54A231DC5C81" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F54FEE6309C15B48" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9EE8DC00975B67AC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="B0D6762D59F76842" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="B51FB8ED3C016272" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="237B68C8C8511FE0" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="DCA5A99F64EAA7E1" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="C46C04494057EBD3" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="CEEF9F8CE4F6E5F6" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="DB9384EA8A9BEBD2" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="606FFA316CC2512A" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="8B6F9696C07381F7" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="BD853C8AB8C5B12E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="498DD4816C86C223" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="DA4C64108F71CC58" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="E0A6DE55C5AB57CA" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="13D30A28514F4048" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="9E4ABE1244D3E91A" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="8154AF3D02F7EFC4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="8F9E26B76105E258" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="B4D2FA66F4875FB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="E3D8DA3E204E9B2B" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="C1218B21E2F425F6" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="504713D97C5FA216" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="A958887DA104E2E" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="E3CB97B6F2D630BA" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="22EF981C47EEA922" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="5739761EBF02C7E6" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="69106B235A2E056" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="3C8507AECDEAF32A" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="BB7A0F6C83BDA3D7" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="82B0087B3ECE0EB2" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="5B9FFC94D4884ACF" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="E177AE109E6F5977" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="745448BA67B98716" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="47CB5DC0832B6D71" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="4E5C89D20160EA66" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="6AC64E3220D956CF" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="5BD20BD1B492AB19" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="45806DB572501011" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="D528BF6570BEA285" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="43948FAB0C273F1" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3BB0C745A2523527" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="83AFC51CB54A8C09" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3DCAA82C5EF68B9" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="EFD28F5F1B5207B7" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="42C0084CD75C614" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A2A9EFA47D553BE" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="F2D655A8626AA96E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="823EBEB1C854096D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D8A417D5CF17CC97" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="BADF0491606868D7" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BEA9F9C1E6C47857" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="F7EFCA46279C8B0C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4261916FA712A4DF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="FAFB49E0EB3BBB23" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="8C6850E6AA9D4400" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="92B0E9577E33AB16" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="C59CEE9CFA357477" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="C5D237A5F498DE7E" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="A3A29E6FF9F74FDA" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="878BB782A148965B" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C4C4EA6D1DDA92D5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8AEA9830A27459A1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="B895FB6C64F72E17" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="107C01D66119111A" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="AFA3E019BAFF9265" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="91B799365E07C408" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="1644C27F43E485A9" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="4175A333EA46B723" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="80703CB4817E0883" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B1AFD4E948BAA9B" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8E6842D6BCDCF741" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="29EFDAA2D9CE1812" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DFCB8F4609B1D62D" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="11C139F9FC0FEE47" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="47E8E4A9F14D0C9B" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="437B3FC7BCC745E" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="32D6544B976B6A7E" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="405B11BF1776268B" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="777366C41389E91E" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="C3D0158A2C67B964" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="DA97B37CFA8FE79B" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="57829F83004638B" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="CD15222696432472" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="1D9CE8B606E329D7" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="464BDB4059346E91" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="54DD192627293188" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="F8710F853C9DB82B" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DDDE898DDF18064E" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7A3E357EC275A5A9" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CD8761400091BC1B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D97232613424D5B9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="4CC3178A2511F1FF" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="510A566F51146536" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="258B5AF611060130" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="44EAC1D43DC1ABFA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="6190E40300642C00" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="DF4141B58BAF487B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="C5A5714828CE9EDA" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C5769FAA6ADB0968" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="65D159DF703A329D" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="9BF9787FC98D8078" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="13EAA5ABA3863852" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3847B8130074BC7D" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="CA40AC48DD71257" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="CEB2DE46D94C636F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="865962469539C914" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="CE1476F1C0A394B2" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="53CE39B84A810330" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="BF0959118CBCED40" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8409E7434C6B8924" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="A16EDF4F5F716845" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="A8F75B80AEFC4C73" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="F3CA8893856386E8" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="61FA5BCC3F9D3E74" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="EE50EA5B1B141C9D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="6055662042AF01AD" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="3EFB872FB4942713" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="8CFDDF882715F50C" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="35542A666DF3E6B8" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1418C8F7B6486E61" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9969718013C97D29" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="B6BE67B92CB79A54" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="D1425E22B423984F" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="42F665A1E637E6AE" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="A31B3C9653D2FC5E" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="A37D2C58CE2C491C" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="DF23E372F8258C24" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="A1A478533D278A4C" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="C4CB4E2418A5C766" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="265CE651ED203A33" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="EEFF4E4AE4D33791" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="D1099F7C99F0128A" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="7FD65129F4613CA4" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="6FDD284439350C71" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="E4B977014E0053B" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="9808DBA326160C50" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="6643ECA2B3F51676" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="DB17C4BFA66DCC7F" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="496018A7F7A8461D" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="346EC3DC2A29F788" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="9C9B824ED7218F23" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1867249B48C5DB4E" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AC03D0C8DED9F4BE" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="69AB12326FFCA783" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="614025B744C68287" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="51E24F6FA8CFB6C2" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="853532AAFD931401" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="740B6F9B16A7F7EE" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="6D2B833665969566" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="E1827FEA650A241" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="E0CB48FFD48DE5F3" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="E6A24DDB2373C5A7" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="F7C209EC2BB775A0" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="7A844B268BC1E494" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D0A489DDF6CCE87E" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="6648587A554C6F40" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="1EF83C0E4CE7A3C2" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="1C7FA21F844561E7" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="AE877954106DEC0B" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="B54438311C43478" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="88781CA12DC50834" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="A906DCFFCDA98DD3" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E512F7C015A9E1EB" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="F9FBBF7792872CA2" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="CBC661A1E17F9FA4" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F3118C86712F2CD" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="896168B749C3CF06" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="C504C592A0333589" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7769FA09DDAFE320" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1199E1EE215EF39" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B6DD8FE0194E0107" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="FD110664064377D5" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="B7A4F2CBDE2E74D9" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="51D03284E0D63AD5" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="56C0B3192C2ACD17" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="6B5C6E1896E71A47" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="9BCCFCABA68BEB3C" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="28A92DE9F4750894" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="FB9A6E688C624DB0" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="FDF48F96D5FE08B" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="150D7BE6C90D3EF1" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="79351098DB236AE2" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="737362441BC0D173" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BAA4144986CBAD16" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="CA9B05296A8F542" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="200DFF971E0CFF5" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="C57898C967B6436A" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="8EEAF57D7C88434B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="84BF94790C54BEF2" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="61D9DC574AC5C5C9" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DDD46665049E0D8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="85456D3541ABA67E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="32788FA36986DFB3" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="1ABE6489A96375E5" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="4003D87E1968B161" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="1DD0C84F70E93555" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="D7F82229F2C3BD18" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="30B9A5F49FF9287D" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="9C0DB15906BF3C31" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="DFFC466926A4BF12" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="53EE350C2CF363" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3050A77ECEF29AA3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="A9FAB2272792CFB6" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="680ECC9DB45E89D0" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="8FDE73B71DDBB3DC" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="1DB05A0F49E43817" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FD245BC037858C49" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="DC79A44F0CF8A7E1" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F90147E29909FEBD" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3FD6625D30942ADA" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="74F4A14B06125F9B" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="A3E5AEC172BE67FD" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="9CAA669AB3E305FB" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8383D1BAC17CCC69" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="90F4AB6B2E960A34" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="79E766F7FE06E69E" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B63C30E3F6BC8016" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F1384FCE0D1261E3" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="AED6A39DBDED0E8" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EE5A04037CE289A7" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="50705878BB623B75" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="C5AFAD042B19EA0A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2161F337376CBA4B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3BB545341DC03528" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="C684E3559214E5E" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="81A0D544BC30770C" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="35B168C17E48E848" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="23BB88BFCEA1BCA2" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="E339C1A79D2D0690" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="55370B0F74E76E01" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="76EAD0BA18106B32" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3B3BF0EB150C20FB" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="BBDE7BC78B3D9DEE" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2B9DC197F97FEDC3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A959185E4915FF01" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CF023929B4E358CD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EC18AE0FC5329F6A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="3AD64281DFBC86CC" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="851C1A070279A587" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EEB2B4F6FE91F519" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="293790B1B63B9417" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5CE9E2D5E4B2B2CA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C90911294BACADCE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="931265B05DD21707" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="6DD620AF2F1AD591" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2B40DD3136A343E0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="79C36B2EA0F56472" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ED3E1ECF5D211452" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5D0296CA59D47454" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EA335D3E33023DA6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="116F4EA418E3F367" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5E6C3BE96159A8FB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="545BC61D3AA30763" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F71842FF8F6300A" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A712E48849A5DCF3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E0240CB76545EDC0" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="752A863D8C7EC779" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="6DCF23DB04E4E34B" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="9321A90DE7053A7E" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="2E37A9DEDB1FE040" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="D37B13675EADFB6B" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="5325F07578CF3109" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="9C83BACF56EE38D9" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="43C6B42C2847A395" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="23B0B1DA0CCEED5B" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="42FD8499CBF625B8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="52EEAF1FBAB0C6BC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="3DC77A9E1D6462E" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="C938BD54107A06C8" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="C5CE39F5F966E7E2" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="9B9576A870B28566" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="2444A8E5F94A16D2" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A562B54F49AACD63" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D3F30C66E16606EF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="BE3A8C0F6D9B15BC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="2EDD01F26B20E62D" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="6C6AA0348582C9C7" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="674DABA5744B7B47" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="802924985B0EB505" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="863F9D22AF2CE69A" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="28C0647310CBEE95" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="570928B28A553296" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="828A06F9EFC656F5" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="AA0361BD1686530A" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="1C7DC275D725D6B3" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="44777EE7B66F5179" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="3453428A4E2FE1F9" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D25479D60DBEC4E6" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="940BA81D2C763724" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="F48284B9B3B5E585" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="318F90269C868449" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="7EA9B54C62AAAC47" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9D0B4B841B52210E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="C9646DA3E244966C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="161063A7BDA141A" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC614469C1FAF951" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E5C882805ACDFDCA" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="503DCE2E99F2151A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C8AD6CDA50F7A417" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="EDC9466237450FB4" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="E198D850488FE1AA" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="A4075A2EFB9F9932" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="299F55F69B2A33CF" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="28533FA170061739" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="685C25AD00695252" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7927074F412509F5" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A6D02976E9A4B15" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D2B30C6244F5F98A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1DA62C4D9F732DB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F61A6678DD936D31" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="BFD69DF124671850" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="2EA47A2A7B4D4077" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="A1D207A192ABA642" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="AC75B2DD231E5874" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="450ECBA6EA74340E" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="BE7831A28325A6AD" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="EA3405284D73A37F" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="3B860ED409DEA7B" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="C853AFB007A9E21C" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="3E1613C8D488077A" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F4223E531D5C2C8B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D1F7B1036D73EE25" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="188492642804DEDA" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="8261487DDED48F12" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="FC470544076A24AE" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C4ED162A233D047E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B7C6F8D47840C598" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="202F696C5D11CDF" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="C2B147D1E4CEA189" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E215CE7A8C4CDC1E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D077D090B4E4929F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="5C23A13D8C472BF2" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="4199699FEEE7585B" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2D543B82F201F8EA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8D1DCF834E82017" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="606DF29BCDB479D2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="BA646108996FDF74" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="BAE8547B62E7543F" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="273754D07196D1B9" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8F3086B25A20A028" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="93154541EACCBEA3" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="23BD3B6BB1F4334D" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="57E5990BFEE028ED" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="4212E3109322689" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="781AA7A31DC36FE1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="4CEF07E14AF4DFA1" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="2E0A5E0A5F042C7E" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="ACD1B20ABFB4903A" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="1C61E81B9219CF17" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="CBD181FD63BD4B77" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="3D5F1923B3CF08FC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="4AA2611B61B351A" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="F3EF95F7A72655D9" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="7C94959DDA0F5AA3" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF7558C719A20E10" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="DE95ED1917843660" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="88C36AE127D883CD" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA8EC897EEAF606B" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="C4B058CFB6CA06BE" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="5815ACE82CBF9025" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="BCFF9219E0418857" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="4750E1988424BF41" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="77F870C095CC0E8A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="EC70ABE9F37AE0C1" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="BEB7B45B78995482" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AB34504E99BF90D5" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="E11546BFE46D7748" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="4FD82B7FD5AE9E13" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="543662127CAA9E2A" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="D9B70A9DED2D5353" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3C967F7546E7C6D4" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="1A547C8750DAB048" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="D0DC02EDDAEE9072" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="69C2746FBD66CB5B" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D9991096DA03A789" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C4D8CC255F64A87E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="A598DBC53B3B77A1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="716EC07F05E9134B" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="2BB3B7B2C0057FF9" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="E3F1609217867E38" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72470BED996B913A" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F2665E9AA956EC1F" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6BD8D85F4CC1222F" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DEEAAA3A7CF06FDA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="EF8EA453C52A3237" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="2475B6EE1C453E1D" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="516339C8BF154623" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="FAEED6BA88535DC8" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="25454D90ED1A4116" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="B0BA9F63EA429F70" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="957A34253CC94C7" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C5289E079E4C41BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="65094BD0B2CA7A90" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="9A483C8B8933D541" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="D879AF7B6E68C277" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="CC74289436FAF55B" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="7A4E618F79175D36" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="348AB3B6F4E32926" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E16BFCAA4D7756E" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="9C199145A5413F09" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1D1C93AA0143A092" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B6CE443AD216D94" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="ED56C9CB71ED42FE" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="FD31029A155AD8F3" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="D8FFDE2B23882E9C" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="CCD2322A424ACA43" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="967FAF033BAB0EB5" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="31B91F397B9798E6" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="DBB257EE157A16F8" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="3F6AA957657E91C8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="3B03F379DD9AC9E" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="C00E72D96AFEF3C8" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="B50C84753760E1D5" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="74706E9A5FA1DEA6" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="42094F8D70317516" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="11B046913CFE57F5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="39EFB0E24130D390" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="24FAEEB95BB0127E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="9C1E184E411B0470" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="E6083170201B32FE" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="BC18C418EB46AC5E" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="2A446A2409FB5995" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="D130CB6233C1ED67" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="429C057F2AF5B72" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EA94F0944E825101" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="A4E524841C94DA07" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="A4FA97009D55FCBD" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="CEAC7A8913A20BAF" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="51987D32FB315B29" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="DDFCC1D9F22AC79B" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="CD6B994BE88DAD2C" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="F1FB87E018C24605" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="7D819E804D5EA0F5" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="209B307840AF65BF" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="CF3D6E4F7762B9E1" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="430E5625801FC10B" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="FDD76F0840BC415E" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="4E373A05507C63B4" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="83BF529541DDDD95" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E77691CA4EF2DAF" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="BA31528124898D62" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="C1FE1C2753E54B9A" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="C3B41FA16FBA3645" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="4A5A50E52A401656" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="A206366623716C5C" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="114DD9E7D675C068" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="6CF277451D2E7D80" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="DCA6C30345DD02B8" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="31BCC93103D2A5E9" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="6B63A02D47163EA4" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="F4E76F85BB9BEB87" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="C88861AB759877D3" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="9307EF4D9FBFCAE7" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="C9223CF9FC7888EB" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="D297EEDF81DF064B" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="80363A2CD1D5F6AB" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="CAFB15899BCDCDC6" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="9744A10D7448556B" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="EFC1AB411981C4CB" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="111549E0BAB0BADE" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="CA4E93363368987" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="DACE097711832BC2" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="F4C6F85DDA391B03" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="E79B5C2BC68BB344" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8AA1E8DE3A4B00A2" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A31FDCFC6E94DB0D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5B0E9BC591183501" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="331BE26C5FDA3915" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="40DD6B9810FC0EA8" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="9FCAF461E43BF7A7" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="273EBDCE3CE96552" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="8E75009FEBBF8BA3" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="A68156D78B7B9B1D" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="5A48D6976432767E" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="31523533C28F6A91" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="AB9BAC0AD287A8BF" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7F3FB0B90BED86A4" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9A339E207CE8A47B" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="592F2B82A0D6E6D" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="13504AD88ECADFF4" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="291D5594C6B385FD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="72816A495B57F188" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4C31E301F6E97DDB" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="695FA0E5FE8D83C0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D7D84A9487670907" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="9A4A8C9D4622B9AB" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="C6DBA647A534ECC4" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="C4C4FEDB68559A7C" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="187A67573DA12097" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="C2F034F9433A7A32" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CA00D286A7DF10C8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3C5C47BCC6C59FEF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="65B859E0F52A4602" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9F7705A467D6DC9" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="F8760792669C864E" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="87A63563A8E237C" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EE96DC7373AC8484" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="FA171DD23ABA8EC2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="1E1949644FE81EE7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="4BF623AEE20A3BA9" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="98590B70992942D2" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="71F551CECE71FC0D" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="4AB5F45A2A0C4D03" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="C2ACBE73892BBB91" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D0DD857E6BA269A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="3998F8C9B6A1411E" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8183596B608B19DC" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="C4BC7029BD2AA2C7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="B27247CC948B855E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="3CC6692D490BFAF5" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="5321031285F53F8D" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="7E0D2167A0095C3D" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="C77926BC3161BD11" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="C25E813D65EBF8E4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="C87E7CDD923B4DD1" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3A4A2C8F0CFAB7ED" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CA6E0396EE7BFD84" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="3219FA35D1D39D37" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="E08B92F88B0BDCB8" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="9A1A1DB15C9E2825" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="201B2714FFCDACC5" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="C372CBE757FCBBA8" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="7CAF27F9FBADE686" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="502CFB9ECD5B0B6A" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="D3E6ECDD2B391F15" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3AC4FD3D58B16D44" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="149ED7D69E807B9" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="587BDE2ED5169500" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F0B654C12ED48E47" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="ECC2D45DDD35C31E" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="CD47F1D389EB6BF0" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FB343A9D281CB50E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E5B59263C750905" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="8D6F5AD20B1187A3" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="89DE8DAF786FC6C8" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="253D5E3E54DCB940" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="9B7E688810EEBF5C" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="EFA8F87E72AF6FEC" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="7857D8E209DC1BEC" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="29EB4A747B1D7E9" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="ABA5F707C86606C" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="ED5BFF63301A39E0" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="95BC7D785A350968" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="3911850722BDBA78" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="651BA26D1E4A3759" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="DBABDD29C8D110DF" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="AD2ECB3CD8981606" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="9C1C2FB68BC7F67E" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="426B0C5A37584D7A" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="9461A58E7C81ED2" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FF3940037CE51460" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="2205209AA14696B5" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="F75177D6F691917B" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6C8C0BE6322183DE" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="3CCAA1631A42071A" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="EBF42BEF2E6F552" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75E7C2D1D7EEE8D8" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="E5C44BF7D98D5E6B" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="DB41CAE23BC99CDA" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="906785CE1A6F5FEE" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E2CB6A430BC9FFB0" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="74CD4B45F9070D20" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D90289C5E5CF86D5" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="CD7FE3628D171AAB" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FBFF2C17486B1632" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="1859C1B401A365F6" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="A4EEDFEC403CFB2A" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="6C1661888B7A62F8" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="31083A4AFF244CCB" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="9349D5DE3777DA2F" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="6F9B139B774745F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EA5D0A481FE7576D" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E8AFC1F1A92DFAF9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E350400F1C9F3EED" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="98F1944A71B5ECDF" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="A6B59AD8F98FCC9D" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="9BCD3CC591D88686" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="999AB369A5CC497F" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="97A2BE79B13D40FE" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="DC50B0C37CFE78A7" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="93766701F98D29CD" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="AFACBE0BB1839F5C" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="9AAA320F90BEEEE3" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="841548674521D5AD" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="BE3CCAD7CD8741A4" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="739FD9F74B584BA" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="D6CD956B54C6F7AB" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="5C68F5F3A6F08A2E" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7B01CFA9AAA2C3F7" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="ED0EC7DF233471F9" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="12BD00E926027345" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="F522F1C89FD2CFC4" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="314E8A4D99CE04DD" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="92917D9CFEA024B2" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="21D97D70370308A6" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="F47FCD0EE6421E7" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="79FCFAC6112F7B36" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="8E43D85E9CE0A785" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="75BE10948F51EFD4" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7C9EA8DB550A9B9F" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="7FABE230F8791C16" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="150D8FA3E15B0C4B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E7D9182404B8ACFE" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="86A7557357C1D4BA" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="23D5AB1C733266D4" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FAB7E805B7FE9A45" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="1FA585865F31ED8" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="CE59C419E581CB65" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="5666BC340CAC055E" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="42A058630F1FC985" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="72F4BE6CA3B7A0ED" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5F8D9901543C7B37" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="5DF96710824FDAB8" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="FF4A62A66DC7535A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4BBAA8FA36E9CEAB" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3933860BEE519454" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="90B256F55BF4AC16" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="5C2377C5ED31B3EF" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B578D317E03869F4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A05643696B0A9AA0" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FF80E87BB54AF1A0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7C3E311DEC68BA7F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FD4528E292AAAD61" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5E0BFB218C65F8AB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="B499F078F307DC84" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9BB9B980B83F7D74" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="15FBCF16E8AD3E5B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F29A43F4BBC5BC0C" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B270B8502D5548E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A18AABE8783373B9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6FD9AFCBF08A9C86" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A2DE112D74A3B3AD" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="AB5F56CBDF4B4330" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="F3E6C7A083B0D6F3" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6BCA2579602101D2" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="31FC1A3D3D94B7FB" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="45C5E38FA1EF9D23" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38F29126F0B7286E" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="3AEFD7E9FBA01052" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="70D38C93C706B692" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2D67F179280C912E" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="644D26A3B3341351" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CE2E06B906ACC316" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="D338332C3AA07A88" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3B31524DA10863E3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="47087BD594830E9E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F904DAAF70769349" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="642AF8EFF41AADB3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F1412E793F7CBDDD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="421B451EF7572EAA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="7512DDCBF5E5FF37" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="FCDCA125B35F0750" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AEF8263C2E97F694" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3379C90EA80A4FAF" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B37A3F3AAEB3126D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C28A3F9E42258180" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4ED348BFDF814A1E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="850A2445B458AC62" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="BCB4DE60BA720502" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="CA508415676A2855" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A51A26293D912D32" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="A316F14A3B2FE3ED" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E3291599339A784A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="BF36CF1BB0E64DF5" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7CE8FEBF902E66A2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B28A99495DA39657" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="AA32B9F371A49AD" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2FF3B432B2385C0E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9772444B898FD423" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="685D171A45609DC9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D57F0E3DC2079DF0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4C793A8F0B049212" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4B3576E1D6B20B83" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="1F175077DD7DE6B6" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6B7B8A45120D18F3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="32C6DE4E89BB3E0F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2B31FA4B71C4856F" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="555385EA42CB478A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E1603C8E6588A969" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="759A40A61881A381" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A203101B1179E596" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="F6FEAEF3ABF25855" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="531A795E1A0CFD77" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="E5CE074DE0DF642A" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="5C5AF181A72A80D0" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="EB520CB098378401" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Deleted name="category" muid="EC68DC38487EAF2D" />

        <Deleted name="compatible_venues" muid="7B9A011670029DA9" />

        <Deleted name="end_situation_dialog" muid="6EF43C9389C886D4" />

        <TunableTuple name="end_skeleton_state" class="TunableEndSkeleton" display="End Skeleton State" muid="13C238CAD03F3FB6" description="The state that the skeleton goes into when then situation ends." Deprecated="False" filter="0" group="Situation State">
            <Tunable type="bool" name="allow_join_situation" class="Tunable" default="True" display="Allow Join Situation" muid="B2F5EAF5B03FB174" description="Whether the situation is allowed to join at this state." Deprecated="False" filter="0" group="General" />
            <TunableTuple name="interaction_of_interest" class="TunableInteractionOfInterest" display="Interaction Of Interest" muid="A35324E16588576B" description="The interaction that when run will cause GPE defined behavior&#xA;to run." Deprecated="False" filter="0" group="General">
                <TunableList name="affordances" class="TunableList" display="Affordances" muid="C63B73EC561C3B2E" description="The Sim must have started either any affordance in this list or an&#xA;interaction matching one of the tags in this tunable's Tags&#xA;field." Deprecated="False" filter="0" group="General">
                    <Tunable type="interaction" class="TunableReference" muid="7AE2F7215592AC7B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <TunableList name="tags" class="TunableSet" display="Tags" muid="8AF7EC71BFBB9F64" description="The Sim must have run either an interaction matching one of these&#xA;Tags or an affordance from the list of Affordances in this&#xA;tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3BF7361C54B794B0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                </TunableList>
            </TunableTuple>
            <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="87E4338793082D5A" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="75C90462EC2993F8" Deprecated="False" filter="0" group="General">
                    <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="4FA35744E5CDCD78" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="13BB40F13AF84183" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="leaving_notification" class="TunableNotificationSnippet" default="literal" display="Leaving Notification" muid="A73B59BAD8CF87CF" description="The notification that is shown when a summoned Skeleton NPC leaves.&#xA; (This may be tuned in place here using 'literal' or as a reference to a Notification tuning snippet.)" Deprecated="False" filter="0" group="General">
                <TunableTuple name="literal" class="TunableUiDialogNotification" display="Literal" muid="EF3DAAD99D6D4F4E" description="A dialog that is displayed as a notification." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="additional_texts" class="OptionalTunable" default="disabled" display="Additional Texts" muid="D9867D8392E3F2E" description="If enabled, add additional text to the dialog" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1292BBAAF4D5C44F" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="D1F285EC780DF535" Deprecated="False" filter="0" group="General">
                            <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="EB430E3EC7C072A5" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableVariant>
                    <Tunable type="bool" name="anonymous_target_sim" class="Tunable" default="False" display="Anonymous Target Sim" muid="DC02C193E8C72975" description="If this dialog is using a target sim id to give a conversation type view and this is checked, then the&#xA;target sim icon will instead be replaced by an anonymous caller." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="audio_sting" class="OptionalTunable" default="disabled" display="Audio Sting" muid="5B9514145BB625FD" description="If enabled, play an audio sting when the dialog is shown." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="96086029BE0DB173" />
                        <TunableTuple name="enabled" class="TunablePlayAudio" display="Enabled" muid="9AF0DDECA85DC278" Deprecated="False" filter="0" group="General">
                            <Tunable type="ResourceKey" name="audio" class="TunableResourceKey" default="None" display="Audio" muid="5F824D122255D727" description="The sound to play." Deprecated="False" filter="0" group="General" resource_types="0x39b2aa4a" />
                            <Tunable type="bool" name="immediate_audio" class="Tunable" default="False" display="Immediate Audio" muid="58FBD1554FB75F2C" description="If checked, this audio will be triggered immediately, nothing&#xA;will block.&#xA;&#xA;ex. Earbuds audio will be played immediately while &#xA;the Sim is routing or animating." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="joint_name_hash" class="OptionalTunable" default="disabled" display="Joint Name Hash" muid="9CDD0025004DF957" description="Specify if the audio is attached to a slot and, if so, which&#xA;slot. Otherwise the audio will be attached to the object's &#xA;origin." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FB44755F350D1992" />
                                <Tunable type="str" name="enabled" class="TunableStringHash32" default="None" display="Enabled" muid="17A43364929B120C" description="The name of the slot this audio is attached to." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <Tunable type="bool" name="play_on_active_sim_only" class="Tunable" default="False" display="Play On Active Sim Only" muid="2E9DA4B7CF3194B1" description="If enabled, and audio target is Sim, the audio will only be &#xA;played on selected Sim. Otherwise it will be played regardless &#xA;Sim is selected or not.&#xA;&#xA;If audio target is Object, always set this to False. Otherwise&#xA;the audio will never be played.&#xA;&#xA;ex. This will be useful for Earbuds where we want to hear the&#xA;music only when the Sim is selected." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="audio_sting_owner" class="OptionalTunable" default="disabled" display="Audio Sting Owner" muid="C375626541FA5C45" description="If enabled, this will set the owner of the audio sting when the&#xA;dialog is shown." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="25668AF12EB08BB" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="26ABC1A2F3E51EB3" static_entries="interactions.ParticipantType" description="The participant of the interaction who will play the audio_sting." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="background_audio" class="OptionalTunable" default="disabled" display="Background Audio" muid="1914B9DD6B022964" description="If enabled, play background audio while the dialog is open." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F00A7743FB89C089" />
                        <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="E528BD323D443402" description="The background audio event string." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="background_image" class="OptionalTunable" default="disabled" display="Background Image" muid="92B7E69F7B34C312" description="If enabled, add a background image to the dialog.  This will only &#xA;be used in the case where dialog_bg_style is BG_DYNAMIC_IMAGE." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DF9301B5EF6B20AE" />
                        <Tunable type="ResourceKey" name="enabled" class="TunableResourceKey" default="None" display="Enabled" muid="D9467B281E41BEDC" description="The background image for the family portrait." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                    </TunableVariant>
                    <TunableEnum type="UiDialogBGStyle" name="dialog_bg_style" class="TunableEnumEntry" default="BG_DEFAULT" display="Dialog Bg Style" muid="81615F011B021988" static_entries="ui-ui_dialog.UiDialogBGStyle" description="The style background to apply to this dialog." Deprecated="False" filter="0" group="General" />
                    <TunableList name="dialog_options" class="TunableEnumFlags" default="DISABLE_CLOSE_BUTTON" display="Dialog Options" muid="F6E7A4F03ED50AC2" description="Options to apply to the dialog." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="UiDialogOption" class="TunableEnumEntry" default="DISABLE_CLOSE_BUTTON" muid="8D50CC243F211332" static_entries="ui-ui_dialog.UiDialogOption" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableEnum type="UiDialogStyle" name="dialog_style" class="TunableEnumEntry" default="DEFAULT" display="Dialog Style" muid="E3239344807BC8CC" static_entries="ui-ui_dialog.UiDialogStyle" description="The style layout to apply to this dialog." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="UiDialogNotificationExpandBehavior" name="expand_behavior" class="TunableEnumEntry" default="USER_SETTING" display="Expand Behavior" muid="FE40DD998D1B0F17" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationExpandBehavior" description="Specify the notification's expand behavior." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="icon" class="OptionalTunable" default="disabled" display="Icon" muid="621D745B5EA5A66B" description="If enabled, specify an icon to be displayed." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18172FA2F1E46C51" />
                        <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="9FB2145D3409A1CF" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="16383784B3F28738" Deprecated="False" filter="0" group="General">
                                <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="B59D4E2E10854327" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="1D2094CC608E5197" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="F666108B28E96203" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="E5A5A8EB734E6AA2" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="4031B28991EC616E" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="69D71242AD8DBD61" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="9A2233BCC6D85226" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="3D48BB4DD06FE6CD" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B252A596BF96704B" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="A9D05900B5B1CFFD" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="67B15281378FBB41" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="E0ED2E28F81F97E7" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableTuple>
                            <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="E9A32B3B697F7974" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="9292035C6C592B65" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="CB5796DF5A3042CE" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="icon_override_participant" class="OptionalTunable" default="disabled" display="Icon Override Participant" muid="1F4E274B0A97902F" description="If enabled, allows a different participant to be considered the&#xA;owner of this dialog. Typically, this will only affect the Sim&#xA;portrait used at the top of the dialog, but there could be other&#xA;adverse affects so be sure to talk to your UI partner before tuning&#xA;this." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="688455AD9A6628A2" />
                        <TunableEnum type="ParticipantTypeSingleSim" name="enabled" class="TunableEnumEntry" default="Invalid" display="Enabled" muid="3843F31BB15FD7FF" static_entries="interactions.ParticipantTypeSingleSim" description="The participant to be used as the owner of this dialog. If this&#xA;participant doesn't exist, the default owner will be used&#xA;instead." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="UiDialogNotificationLevel" name="information_level" class="TunableEnumEntry" default="SIM" display="Information Level" muid="74D532749CC712E1" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationLevel" description="Specify the notification's information level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="BED8008E06A64772" description="This field is deprecated. Please use 'icon' instead." Deprecated="True" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="548C6BCE8A693B27" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="CEF4C5F174397619" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="PhoneRingType" name="phone_ring_type" class="TunableEnumEntry" default="NO_RING" display="Phone Ring Type" muid="8053970438ECF85" static_entries="ui-ui_dialog.PhoneRingType" description="The phone ring type of this dialog.  If tuned to anything other&#xA;than None this dialog will only appear after clicking on the phone." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="primary_icon_response" class="OptionalTunable" default="disabled" display="Primary Icon Response" muid="4CE9DECC4F785129" description="If enabled, associate a response to clicking the primary icon." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2F0EEF92827F8FB" />
                        <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="EA20EF214C57EE0C" description="The response associated to the primary icon." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="6545C9A0F572A62D" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3BAA8DCEDE3AE14D" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="CE880A9444ABFE67" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="CE26F7447D6EDB7C" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD557544558EE895" />
                                <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="6F7023001189B88A" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="765CCB91FB197597" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                        <TunableList name="arguments" class="TunableList" display="Arguments" muid="6ECC249B6CD3CAD3" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="none" muid="28006FCE8B23C3E" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="EC3B69C6D768AA0D" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="703605F228E69F4B" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="8581B52735BF13F3" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="498C96C0CC1A6428" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="F8B93FF5B5155F3C" description="An integer number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="3AC995EDEF378405" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="A7A0A9E851FC6966" />
                                                <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="5D48A31F1270EE84" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="4C55BFDD9278461" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="BBAAFDFE5327200E" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="string" class="TunableTuple" display="String" muid="A8F6A650C67380" description="A string." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="FBADBDA07B55FAC1" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="ADFCCB7EE9014D26" description="The command." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="DDA6001BD67BCDE1" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                </TunableVariant>
                            </TunableVariant>
                            <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="72B14DA17DA4E479" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="secondary_icon" class="OptionalTunable" default="disabled" display="Secondary Icon" muid="CDE5252D601D3C11" description="If enabled, specify a secondary icon to be displayed. Only certain&#xA;dialog types may support this field." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A31B6A9AF115DA41" />
                        <TunableVariant type="None" name="enabled" class="TunableIconVariant" default="resource_key" display="Enabled" muid="DE18D0346EB5948D" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_icon_override" class="TunableCareerIconOverrideIconFactory" display="Career Icon Override" muid="DF1934A241B2A07F" Deprecated="False" filter="0" group="General">
                                <Tunable type="career" name="career_reference" class="TunableReference" display="Career Reference" muid="16828A25A83CA048" description="The Career to override the icon." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="19A630FE954F7100" description="The Participant who owns the career." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="84F9EA5341CA3C64" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="lifestyle_brand" class="TunableLifestyleBrandIconFactory" display="Lifestyle Brand" muid="B2828403AE9277EB" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="DDB4C44785FA7315" description="The Participant who owns the lifestyle brand we want to use." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="9A6AF77030243C84" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="participant" class="TunableParticipantTypeIconFactory" display="Participant" muid="F910F4F5120EC910" description="The Sim who's thumbnail will be used." Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="51861C705D621951" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="9E123021258B888F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="privacy" class="TunablePrivacyIconFactory" display="Privacy" muid="9335C8B7B5DF5DA8" description="Search an interaction's privacy liability to find violating Sims&#xA;and randomly select one to display an icon of." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="resource_key" class="TunableIconFactory" display="Resource Key" muid="868BC719FA21ED40" description="The icon image to be displayed." Deprecated="False" filter="0" group="General">
                                <Tunable type="ResourceKey" name="key" class="TunableIcon" default="None" display="Key" muid="C88C13187F62F82C" description="The icon image to be displayed." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                            </TunableTuple>
                            <TunableTuple name="tradition" class="TunableHolidayIconFactory" display="Tradition" muid="14254656DD5DD1F5" Deprecated="False" filter="0" group="General">
                                <TunableList name="participant_type" class="TunableEnumFlags" default="Actor" display="Participant Type" muid="D43DB4F895A09B4A" description="We use this participant's holiday tracker to get the icon." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantTypeSingle" class="TunableEnumEntry" default="Actor" muid="1046F81AA0A9E85" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="secondary_icon_response" class="OptionalTunable" default="disabled" display="Secondary Icon Response" muid="B5F8D4C23315C88B" description="If enabled, associate a response to clicking the secondary icon." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="27549BDB4CAC8A1F" />
                        <TunableTuple name="enabled" class="TunableUiDialogResponse" display="Enabled" muid="D040E432C553D17A" description="The response associated to the secondary icon." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="DD8AFBA36EF5DE49" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4DA5F8605E79BB69" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="DFC1017F0DC33F85" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="17C3CD7247D16692" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC6002B1C311BFF1" />
                                <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="48E7D9676BC5C787" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="D4ED1AFEA9A629BB" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                        <TunableList name="arguments" class="TunableList" display="Arguments" muid="9F2AC46B7E34E659" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="none" muid="5CC0978B08C07C" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="9A2208348AF9DAA6" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="F060491C9294FC0E" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="EEA1D3D214BB733A" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="8DEAF0AE1DB31F9C" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="8ACC4385CCE2E608" description="An integer number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="AE9F1BE652542AB1" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="7FB187268DE0441D" />
                                                <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="9D5D059842120630" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="849B8CE7E196C5F" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="7031FC84934A1B03" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="string" class="TunableTuple" display="String" muid="45B69524A47254CE" description="A string." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="2122FD0E1E2CADE" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="DACE48D2E477365F" description="The command." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="ACB48066AF2F216F" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                </TunableVariant>
                            </TunableVariant>
                            <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="95B3E19E0C9253D4" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="text" class="TunableLocalizedStringFactoryVariant" default="single" display="Text" muid="5FB231DD824399A3" description="The dialog's text." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="concatenation" class="TunableLocalizedStringFactoryConcatenation" display="Concatenation" muid="66621ECCD7856E99" description="A list of localized string concatenations. These strings will be joined together into single line-separated string" Deprecated="False" filter="0" group="General">
                            <TunableList name="concatenations" class="TunableList" display="Concatenations" muid="251EAEA0D0F34044" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableLocalizedStringSnippet" default="literal" muid="1B765E8A9690E8EA" description="This may be tuned in place here using 'literal' or as a reference to a LocalizedString tuning snippet." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="literal" class="TunableLocalizedString" default="0x0" display="Literal" muid="F52CD9A7C747B22C" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="829338E6C2EB8520" description="A reference to a LocalizedString tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LocalizedString" />
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                        <Tunable type="int" name="single" class="TunableLocalizedString" default="0x0" display="Single" muid="81603C9BFBC50B80" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="variation" class="TunableLocalizedStringFactoryVariation" display="Variation" muid="F9C2C25C9250D9CD" description="A list of possible localized string variations." Deprecated="False" filter="0" group="General">
                            <TunableList name="variations" class="TunableList" display="Variations" muid="4EDC94B92971E669" Deprecated="False" filter="0" group="General">
                                <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="250E73CFBDA017EE" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="text_tokens" class="OptionalTunable" default="disabled" display="Text Tokens" muid="585BD16D4B0C98A2" description="If enabled, define text tokens to be used to localized text." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B9E25EB2E998638" />
                        <TunableTuple name="enabled" class="TunableLocalizationTokens" display="Enabled" muid="CDE8BD22ABBEF76F" description="Define the text tokens that are available to all text fields in&#xA;the dialog, such as title, text, responses, default and initial&#xA;text values, tooltips, etc." Deprecated="False" filter="0" group="General">
                            <TunableList name="tokens" class="TunableList" display="Tokens" muid="1FFE7AF8858CD64C" description="A list of tokens that will be returned by this factory. Any string&#xA;that uses this token will have token '0' be set to the first&#xA;element, '1' to the second element, and so on. Do not let the list&#xA;inheritance values confuse you; regardless of what the list element&#xA;index is, the first element will always be 0, the second element 1,&#xA;and so on." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableVariant" default="participant_type" muid="B8C6A47CFA9E3FE1" description="Define what the token at the specified index is." Deprecated="False" filter="0" group="General">
                                    <Tunable name="active_holiday" class="TunableExistance" display="Active Holiday" muid="C1EA6ABF01089A1B" />
                                    <TunableTuple name="animal_home" class="TunableTuple" display="Animal Home" muid="65F4C8DBB17566A" description="Tokens for the animal home." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="animal_home_data" class="TunableVariant" default="max_capacity" display="Animal Home Data" muid="A4785738CCE92B95" description="Data you'd like to fetch about the animal home." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_occupancy" class="TunableExistance" display="Current Occupancy" muid="7C23089370C409D" />
                                            <Tunable name="max_capacity" class="TunableExistance" display="Max Capacity" muid="DD0E499A30950C2C" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.Object" display="Participant" muid="4A8535126FDCC71A" static_entries="interactions.ParticipantTypeSingle" description="The participant from whom we will fetch specified data.&#xA;This is expected to resolve to an Animal Home." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="associated_club" class="TunableTuple" display="Associated Club" muid="EC44AD1E7F982BA0" description="The token is a stored &quot;associated_club&quot; on this&#xA;interaction. Only works with ClubMixerInteractions or&#xA;ClubSuperInteractions." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="buck_amount" class="TunableTuple" display="Buck Amount" muid="2E97D3E88B6EC8CA" description="The token is a number repesenting the amount of the &#xA;specified buck type the specified participant has." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="176E6E123D590A2D" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F178E29C04CDEC1E" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_data" class="TunableTuple" display="Career Data" muid="C3F3BC33A58A5039" description="The token is a localized string, number, or Sim,&#xA;representing the specified career data for the specified&#xA;participant." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career_data" class="TunableVariant" default="current_level_name" display="Career Data" muid="4EA1C80F81148BA9" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="current_level_name" class="TunableExistance" display="Current Level Name" muid="26621E656607415E" />
                                            <Tunable name="current_level_salary" class="TunableExistance" display="Current Level Salary" muid="1447F2103A4F2142" />
                                            <Tunable name="next_level_name" class="TunableExistance" display="Next Level Name" muid="E93491E21C35365C" />
                                            <Tunable name="next_level_salary" class="TunableExistance" display="Next Level Salary" muid="DD37B23FF43604D6" />
                                            <Tunable name="previous_level_name" class="TunableExistance" display="Previous Level Name" muid="243D7C05C8776060" />
                                            <Tunable name="previous_level_salary" class="TunableExistance" display="Previous Level Salary" muid="B6454E9058B60E03" />
                                        </TunableVariant>
                                        <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="D93EDCCB0D711355" description="The career we care about." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D96B392EB4EFE6F1" static_entries="interactions.ParticipantType" description="The participant's whose career data we care about." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="civic_policy" class="TunableTuple" display="Civic Policy" muid="7E86B6ECB7A2D091" description="Tokens for the Civic Policy system." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="civic_policy_data" class="TunableVariant" default="voting_start_time" display="Civic Policy Data" muid="34EEFC5299192EC2" description="The specific value to display." Deprecated="False" filter="0" group="General">
                                            <Tunable name="voting_end_time" class="TunableExistance" display="Voting End Time" muid="B134E341A533ADD9" />
                                            <Tunable name="voting_start_time" class="TunableExistance" display="Voting Start Time" muid="19E5428395846116" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <Tunable name="current_trends" class="TunableExistance" display="Current Trends" muid="61254944B97B2F95" />
                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="55D606989421EBBF" description="A catalog definition to use as a token. This is useful if&#xA;you want to properly localize an object's name or&#xA;description." Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="182AD2228FC96D87" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="game_component_data" class="TunableTuple" display="Game Component Data" muid="F5EAF259DF237A44" description="The token is a localized number or Sim representing &#xA;the specified game component data from game component." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="game_component_data" class="TunableVariant" default="high_score" display="Game Component Data" muid="96317B856136F47F" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="high_score" class="TunableExistance" display="High Score" muid="E252752A49A65D56" />
                                            <Tunable name="high_score_sim" class="TunableExistance" display="High Score Sim" muid="9104878C6084563F" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E37D28765A94D118" static_entries="interactions.ParticipantType" description="The participant's from whom the game component data &#xA;we want to fetch." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="gig_history" class="TunableTuple" display="Gig History" muid="E2D232665CB8B81" description="The token used to display data from gig history." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="customer_participant" class="OptionalTunable" default="disabled" display="Customer Participant" muid="9F6533873B7575DB" description="If enabled, this is the participant representing the customer in gig history.&#xA;If disabled, falls back to searching for any valid gig in history." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="349EBC3C19C71BA4" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="ED84EE90EB4EF086" static_entries="interactions.ParticipantType" description="TargetSim searches for provided customer sim. Lot will search for the current lot." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="gig_history_data" class="TunableVariant" default="gig_customer_name" display="Gig History Data" muid="C401884D47727912" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="gig_customer_name" class="TunableExistance" display="Gig Customer Name" muid="82792DC4EBB32D34" />
                                            <Tunable name="gig_project_title" class="TunableExistance" display="Gig Project Title" muid="B77B5C25B5064052" />
                                        </TunableVariant>
                                        <TunableEnum type="GigResult" name="max_gig_result" class="TunableEnumEntry" default="GREAT_SUCCESS" display="Max Gig Result" muid="63BB83F4F6373FB1" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="GigResult" name="min_gig_result" class="TunableEnumEntry" default="CRITICAL_FAILURE" display="Min Gig Result" muid="B8B2E45879A13638" static_entries="careers-career_enums.GigResult" description="The worst acceptable gig result to find." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="CFCE431B341B14E2" static_entries="interactions.ParticipantType" description="The participant whose gig history we will search." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="global_policy" class="TunableTuple" display="Global Policy" muid="1E2D995D842957F4" description="The token used to display data from the tuned global policy." Deprecated="False" filter="0" group="General">
                                        <Tunable type="snippet" name="global_policy" class="TunableReference" display="Global Policy" muid="C12F7CBCE6AEBE9B" description="The global policy from which data is displayed." allow_none="False" Deprecated="False" filter="0" group="General" restrict="GlobalPolicy" />
                                        <TunableEnum type="GlobalPolicyTokenType" name="token_property" class="TunableEnumEntry" default="NAME" display="Token Property" muid="9F047D92B18DE61A" static_entries="global_policies-global_policy_enums.GlobalPolicyTokenType" description="Which property from the Global Policy Token to use. NAME&#xA;will use the policy's display name, PROGRESS will use&#xA;the progress made over the max progress value. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable name="interaction_cost" class="TunableExistance" display="Interaction Cost" muid="154A2D4CC164C755" />
                                    <Tunable name="interaction_payout" class="TunableExistance" display="Interaction Payout" muid="75E690EC3DF024D9" />
                                    <TunableTuple name="lifestyle_brand" class="TunableTuple" display="Lifestyle Brand" muid="216D906758A4C1AB" description="The token used to display the name of a Lifestyle Brand &#xA;owned by a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="ParticipantType.TargetSim" display="Participant" muid="31368EC0F27D7FBC" static_entries="interactions.ParticipantTypeSingle" description="The participant who owns the lifestyle brand." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="money_amount" class="TunableTuple" display="Money Amount" muid="ECD88CD30AF1E24B" description="The token is a number representing the amount of Simoleons&#xA;that were awarded in loot to the specified participant." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7A37828D1E0FBFF0" static_entries="interactions.ParticipantType" description="The participant for whom we fetch the earned amount of&#xA;money." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_fashion_marketplace" class="TunableTuple" display="Object Fashion Marketplace" muid="AFA10C5C1604594D" description="Tokens for the object fashion marketplace component and &#xA;fashion marketplace system." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_fashion_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Fashion Marketplace Data" muid="4F9C7EA7FDACBBB3" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                            <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="7F5D1104490D50D5" />
                                            <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="A89D30AEA98E2C89" />
                                            <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="EDE374D39F7EB179" />
                                            <Tunable name="suggested_sale_price" class="TunableExistance" display="Suggested Sale Price" muid="7E0FCAD9315FBDF7" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_marketplace" class="TunableTuple" display="Object Marketplace" muid="3DD2E8CF4909047D" description="Tokens for the object marketplace component and marketplace&#xA;system." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_marketplace_data" class="TunableVariant" default="expiration_time" display="Object Marketplace Data" muid="2AEE948E710C00E2" description="Please select what value you would like to use." Deprecated="False" filter="0" group="General">
                                            <Tunable name="buyer_name" class="TunableExistance" display="Buyer Name" muid="74BC59D17E51DF0E" />
                                            <Tunable name="expiration_time" class="TunableExistance" display="Expiration Time" muid="B53E4D165CCA20D7" />
                                            <Tunable name="sale_price" class="TunableExistance" display="Sale Price" muid="8D71A029EA936ADA" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_property" class="TunableTuple" display="Object Property" muid="B207D6289004BECF" description="The token is a property of a game object.  This could be &#xA;catalog properties like its price or its rarity which is a &#xA;property given by a component." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="GameObjectProperty" name="obj_property" class="TunableEnumEntry" default="CATALOG_PRICE" display="Obj Property" muid="E86BFC156908C2F" static_entries="objects-game_object_properties.GameObjectProperty" description="The property of the object that we will request." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_state_value" class="TunableTuple" display="Object State Value" muid="409703A85B7F87F7" description="The token is a string representing the value of a specific&#xA;state from the selected participant." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="D3218CAECE5C09C5" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;state's value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="75A8B37E2DA1B233" description="The state's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectState" />
                                    </TunableTuple>
                                    <TunableTuple name="participant_count" class="TunableTuple" display="Participant Count" muid="DAEB9588B2D842E6" description="The number of participants of the specified type." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="1E72D5F6DC99CA87" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="43CED39C0246EFA1" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="DE03F8013B697408" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="5399459451714C10" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="366B87CCC50EBED7" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="8DE36E0C2C5F8623" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="C49F97CCA34157E8" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="564911D26867AE98" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="C09560AA075B6C74" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="5EF35018BBA0E958" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="EF6478E1E4E75A64" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="5D9F8B9ED02B6A16" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="slot_type" class="TunableReference" muid="2E2E0A2D74069D68" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="1B7A456682AD3831" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="ObjectChildren" display="Participant" muid="50600AB5F745CCF1" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="929CF6E6574ACF58" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="5459FE35F2C4476B" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="C2F443B3D3B016E1" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="participant_type" class="TunableTuple" display="Participant Type" muid="1738B37CC8DD2FA" description="The token is a Sim or object participant from the&#xA;interaction." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="formatter" class="TunableObjectLocalizationTokenFormatterVariant" default="single" display="Formatter" muid="387A63BBED26D6AB" description="Define the format for this token." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="bullet_list" class="Tunable_TunableObjectLocalizationTokenFormatterBulletList" display="Bullet List" muid="B83A64258C4B8ABD" description="The token is a string, which is a formatted bullet point list. Objects&#xA;are grouped by definition. The text for each item must be specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="bullet_text" class="TunableLocalizedString" default="0x0" display="Bullet Text" muid="CD705846EF355DA5" description="The text for the bullet entry. The string is provided the&#xA;following tokens, in this order:&#xA; 0 An object representitive of the group&#xA; 1 The number of objects in the group" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="single" class="Tunable_TunableObjectLocalizationTokenFormatterSingle" display="Single" muid="5487CE7196632898" description="The token is a single object name. If multiple participants are&#xA;returned, an arbitrary one is used. That is, unless the mismatch key is&#xA;specified. In that case, the string is used unless all of the&#xA;participants' definitions match." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="mismatch_name" class="OptionalTunable" default="disabled" display="Mismatch Name" muid="73EBEBD89579E81D" description="If enabled, this is the object name to use when using a multi-&#xA;object participant yielding definitions with different names." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D74016C98B4696B5" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3FDD9C4D390DC185" description="A localized string that may NOT require tokens." allow_catalog_name="True" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="objects" class="TunableObjectGeneratorVariant" default="from_participant" display="Objects" muid="D0630D1EAFBD6244" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="from_gardening" class="Tunable_ObjectGeneratorFromGardening" display="From Gardening" muid="D83E060454AD1F18" description="The generated objects are those gardening objects that are within the&#xA;specified distance from the tuned participant." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="distance" class="TunableRange" default="4" display="Distance" muid="A15B0CED5A68D0DC" min="1.192092896e-07" max="None" description="The distance used to determine which objects are generated." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="object_type" class="TunableVariant" default="plants" display="Object Type" muid="719F8529CEB3CC21" description="The type of gardening object to return." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="harvestables" class="Tunable_ObjectTypeHarvestable" display="Harvestables" muid="743735C08B989116" description="Return all harvestables, i.e. all fruits/flowers parented to plants." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="plants" class="Tunable_ObjectTypePlant" display="Plants" muid="A3AD26C5B606C701" description="Return all plants." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E4ED66DB34E6A659" static_entries="interactions.ParticipantTypeSingle" description="The object used as a center point for distance calculations." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_participant" class="Tunable_ObjectGeneratorFromParticipant" display="From Participant" muid="F9C7B44F9D395DE8" description="Specify a participant type to generate objects based on this interaction." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="in_slot" class="TunableVariant" default="use_participant" display="In Slot" muid="26B98DC72BF473EA" description="slots of the participant object from which the target objects should be pulled." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="by_name" class="Tunable" default="_ctnm_" display="By Name" muid="EAF83A9145ACC167" description="The exact name of a slot on the parent object in which the object should be.  " Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type" name="by_reference" class="TunableReference" display="By Reference" muid="8CA2B32C7F300E6" description="A particular slot type in which the object should be." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="by_set_of_references" class="TunableSet" display="By Set Of References" muid="B5C60B9D4AE1BB7F" description="A set of references that the objects should be in." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="slot_type" class="TunableReference" muid="6BCFCEC9220629E9" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="use_participant" class="TunableExistance" display="Use Participant" muid="4AF13030BFF66C0" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="9F92715713CF87E0" static_entries="interactions.ParticipantType" description="The participant determining which objects are to be generated." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="from_stored_object_component" class="Tunable_ObjectGeneratorFromStoredObjectComponent" display="From Stored Object Component" muid="54F6B19E0E9CB71D" description="Return the stored object of the specified type from the stored object&#xA;component of the specified participant.S" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F991B96FEB07CEAE" static_entries="interactions.ParticipantTypeSingle" description="The participant from which the stored object is returned." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="StoredObjectType" name="stored_object_type" class="TunableEnumEntry" default="INVALID" display="Stored Object Type" muid="D8E497A3E729BB62" dynamic_entries="objects-components-stored_object_info_tuning.StoredObjectType._elements" static_entries="objects-components-stored_object_info_tuning.StoredObjectType" description="The type of object to apply loot actions to." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="picked_part" class="TunableTuple" display="Picked Part" muid="6FE4D05DDD329B43" description="The token used to display the name of a picked part." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="scholarship_letter_component_data" class="TunableTuple" display="Scholarship Letter Component Data" muid="3269C8B81F69D71A" description="The token can be used to get strings representing scholarship&#xA;information from the scholarship letter component of an object." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeObject" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="160A2D9FCCD3600C" static_entries="interactions.ParticipantTypeObject" description="The participant from whom to get the scholarship letter&#xA;component data." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="scholarship_letter_component_data" class="TunableVariant" default="applicant_name" display="Scholarship Letter Component Data" muid="170E82AA3EE067C6" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="applicant_name" class="TunableExistance" display="Applicant Name" muid="8D423957681DA0B0" />
                                            <Tunable name="scholarship_amount" class="TunableExistance" display="Scholarship Amount" muid="7AC04C17D58EE5FC" />
                                            <Tunable name="scholarship_description" class="TunableExistance" display="Scholarship Description" muid="5B3F5F4A9A3AC9C1" />
                                            <Tunable name="scholarship_name" class="TunableExistance" display="Scholarship Name" muid="158BB9A937DDC086" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="sickness" class="TunableTuple" display="Sickness" muid="6BA102DD6ECFDB73" description="The token is the name of the sickness on the specified Sim." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="DE98E645544DAAB3" static_entries="interactions.ParticipantType" description="The participant who is sick." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic_value" class="TunableTuple" display="Statistic Value" muid="89500D57234219C8" description="The token is a number representing the value of a specific&#xA;statistic from the selected participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="clamp_value_to_floor" class="Tunable" default="False" display="Clamp Value To Floor" muid="74299F4EDB1A5EE9" description="If True, the value will be clamped to its floor." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="CCB85FDD2B7CE8EE" static_entries="interactions.ParticipantType" description="The participant from whom we will fetch the specified&#xA;statistic's value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="F1CC8BC227CA3207" description="The statistic's whose value we want to fetch." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="street" class="TunableTuple" display="Street" muid="F3CB665C597CCEF5" description="                    " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="street" class="TunableTunableLocalizationStreetSelector" display="Street" muid="E15EFA0F5908C0B9" description="Using the Street Selector tuning, provide a token localization appropriate&#xA;street selection." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="AF12CCE09A066C5" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="90F691DC3C347B0" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="919D41EA9F2DA9CE" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="BE4AE12ABE776E93" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="FF9D8813EC2A29F3" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="3598D601A66BB9D4" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D8776C2B838FF9C5" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="25BCB3184B5F8CC3" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="8DA9CEF956704D65" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableVariant type="None" name="street_data" class="TunableVariant" default="policy_up_for_repeal" display="Street Data" muid="2D7541D2DD8CC51D" description="The piece of data to fetch." Deprecated="False" filter="0" group="General">
                                            <Tunable name="policy_up_for_repeal" class="TunableExistance" display="Policy Up For Repeal" muid="BBDB738E2B8ECAF2" />
                                            <Tunable name="random_losing_balloted_policy" class="TunableExistance" display="Random Losing Balloted Policy" muid="8B421868B9F1C92F" />
                                            <Tunable name="winning_balloted_policy" class="TunableExistance" display="Winning Balloted Policy" muid="AF52EB959A859685" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="venue" class="TunableTuple" display="Venue" muid="A2AECECC9884FAA4" description="                    " Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="venue_data" class="TunableVariant" default="active_venue" display="Venue Data" muid="1528D60F97325912" description="                        " Deprecated="False" filter="0" group="General">
                                            <Tunable name="active_venue" class="TunableExistance" display="Active Venue" muid="3391265A32DCE477" />
                                            <Tunable name="source_venue" class="TunableExistance" display="Source Venue" muid="81F26E245FFE0781" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="timeout_duration" class="OptionalTunable" default="disabled" display="Timeout Duration" muid="44A357C0F6BC81BE" description="If enabled, override the timeout duration for this dialog in game&#xA;time." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="59C8CE9EC022E16F" />
                        <Tunable type="float" name="enabled" class="TunableSimMinute" default="5" display="Enabled" muid="CF5E430DAA5DBF12" min="5" max="None" description="The time, in sim minutes, that this dialog should time out." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="title" class="OptionalTunable" default="disabled" display="Title" muid="ECA6B80B0C560EF6" description="If enabled, this dialog will include title text." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="73891330A033415" />
                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4AC16D953E60F49B" description="The dialog's title." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="ui_responses" class="TunableList" display="Ui Responses" muid="42D34A4E7900ADCA" description="A list of buttons that are mapped to UI commands." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableUiDialogResponse" muid="C9FC5D038A3C9B5E" description="A dialog response." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="audio_event_name" class="OptionalTunable" default="disabled" display="Audio Event Name" muid="CB66035275F4C52B" description="If enabled, this is the audio event sent by this button." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4519AD04414BC267" />
                                <Tunable type="str" name="enabled" class="Tunable" default="" display="Enabled" muid="7E51C6F888D814F9" description="The button audio event name." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="response_command" class="OptionalTunable" default="disabled" display="Response Command" muid="9224B93E006CA743" description="If enabled, specifies a command to be called by the client." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D8143E58A31FFC5" />
                                <TunableVariant type="None" name="enabled" class="TunableUIResponseCommandSnippet" default="literal" display="Enabled" muid="71353FF5B75A0C99" description="This may be tuned in place here using 'literal' or as a reference to a UIResponseCommand tuning snippet." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="Tunable_UiResponseCommand" display="Literal" muid="43F917C4993B8DA5" description="A UI Response that sends a server command." Deprecated="False" filter="0" group="General">
                                        <TunableList name="arguments" class="TunableList" display="Arguments" muid="D3C81C6D1ECB7136" description="The arguments for this command. Arguments will be added after the&#xA;command." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="none" muid="CBB1427B7AB08660" description="An argument being passed to the command." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="boolean" class="TunableTuple" display="Boolean" muid="685EE3D095EE4783" description="A boolean value." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="arg_value" class="Tunable" default="False" display="Arg Value" muid="2913B5F729542BBC" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="floating_point" class="TunableTuple" display="Floating Point" muid="1F4A3C2BA139D5C5" description="A floating point number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="arg_value" class="Tunable" default="0.0" display="Arg Value" muid="96B4CD4C3DD38003" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="integer" class="TunableTuple" display="Integer" muid="1A5F9E9F9359CF27" description="An integer number." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="arg_value" class="Tunable" default="0" display="Arg Value" muid="9D56FD0048D35BEE" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="A6DDFF906C630282" />
                                                <TunableTuple name="participant_id" class="TunableUiResponseParticipantId" display="Participant Id" muid="FBBFF6311EEE9183" description="UI Response argument that will resolve the participant specified." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="UiResponseParticipant" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="26B525CF9261E72" static_entries="ui-ui_dialog.UiResponseParticipant" description="The participant to resolve for this response argument.&#xA;The value sent will be the id of the specified participant.&#xA;If more than one participant is found, it will only send the id of the first participant found." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="special_command_data" class="TunableTuple" display="Special Command Data" muid="6077866D5974211A" description="This will use the data passed into the show_dialog()&#xA;function. This must be supported with GPE work, so&#xA;only use this if you have talked to a GPE." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="string" class="TunableTuple" display="String" muid="BDF217F19EAE79DF" description="A string." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="arg_value" class="Tunable" default="" display="Arg Value" muid="CF8F941B00048135" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <Tunable type="str" name="command" class="Tunable" default="" display="Command" muid="FB49516ACB05A845" description="The command." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="1A73ADB07BEF750F" description="A reference to a UIResponseCommand tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UIResponseCommand" />
                                </TunableVariant>
                            </TunableVariant>
                            <Tunable type="int" name="text" class="TunableLocalizedString" default="0x0" display="Text" muid="F63127276815DB72" description="The prompt's text." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="UiDialogUiRequest" name="ui_request" class="TunableEnumEntry" default="NO_REQUEST" display="Ui Request" muid="DBCF66EF35F5AE7B" static_entries="ui-ui_dialog.UiDialogResponse.UiDialogUiRequest" description="This prompt's associated UI action." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                    <TunableEnum type="UiDialogNotificationUrgency" name="urgency" class="TunableEnumEntry" default="DEFAULT" display="Urgency" muid="F43AA7C7C235C7F5" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationUrgency" description="Specify the notification's urgency." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="UiDialogNotificationVisualType" name="visual_type" class="TunableEnumEntry" default="INFORMATION" display="Visual Type" muid="CB53DE6367F2C0F8" static_entries="ui-ui_dialog_notification.UiDialogNotification.UiDialogNotificationVisualType" description="Specify the notification's visual treatment." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="21B3E92FC718EA8D" description="A reference to a Notification tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Notification" />
            </TunableVariant>
            <TunableVariant type="None" name="time_out" class="OptionalTunable" default="disabled" display="Time Out" muid="4E16462E987CD5F1" description="How long this state will last before time expired. Please talk to the GPE who implemented the specific&#xA;situation to see what the state will do on time expired." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3F4C9FC857F0DCA" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="15" display="Enabled" muid="A681A11D0E8ACF9" min="1" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="triggers" class="TunableList" display="Triggers" muid="97F8E787BE48906E" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="ECF8CD5D5E57DA64" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="effect" class="TunableVariant" default="end_situation" display="Effect" muid="328DBEA397FF28D9" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="3EA0D50708CA6F4" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="296925910CBC11EE" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="5D6642016C8D5B18" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                <Tunable type="action" class="TunableReference" muid="71C6816F1FA809E6" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="C87E575E0C7E274B" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="5DB8A1FEC483B519" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="triggers" class="TunableList" display="Triggers" muid="4AD721415549DBCC" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableVariant" default="duration" muid="997787CD6F7B0E8C" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="38C4F3DED0054A82" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="647614D8A237FD76" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="5E9F2A2B0F33C8F0" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="CD82820E18F67874" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="656ACF162D1CEDE6" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="ED30745C3FF5375C" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="EB36D9D16A8AE6CA" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="AA25047FAC5B7F3E" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="2388BC103D0D8CAF" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="AE40BEC20CB40BE1" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30D8A3C719924E3B" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2D45C1DA1C49D960" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="D82187E2C18E6308" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="A052EF312ED022A1" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="9FA38EC6A7C6756A" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="719999290FCEDD89" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="5F63C21BEDE4DE93" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="C98F3B73F5B77753" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3859C1DA0988D63" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="246B67FF6C790A47" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="48F6689076060562" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="79847E05A5686302" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="C6F8EB56A2332F9B" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="B8007DCCEA41958A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="6D3AA753218A7BF0" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="309E06E17231F87F" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="A6E3039AFAD1CA1A" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2E1232C014916E7D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="330AB16724BECAD2" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CAC4FEDDAEF09483" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E2A6E7596BC84991" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="F387EA36E94BA536" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="58690CF16924F36A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B00BA837A4A5FB53" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6E8321AD75931A34" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BB317017E1F5CEB6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3CBB372E48A01088" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8A24606058FCF988" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="B58C59AAB994DB0C" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="423F2D5B995CC612" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7616DE77AB4AB403" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="75BA37CD0E8B48B3" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="700173700441C7E3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2BC9303FCA2103D9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3353C083DBA5CACF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="204E4890E8DDFD0D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="A9E80B6AC37DCD6D" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="916F8F8A39755DBA" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="40028224FCC77A9E" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="DCF0622845F9B5DB" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="528B88D394E652D" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1F1F1098C9652334" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A43B4DE1B89DA289" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DBD4A57CCB19B224" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="190AB9FAB1A504D8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="D9678C829AFC7831" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="DF3C10DA3399D482" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F07232A782CB7012" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C66260996B02FE1B" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="92AA84E4772C81AA" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7BB0A61906E96E1E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="57FB3C2397C162D0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C8272196FA4278AD" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="442E2D530D46572E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4479C52FC743AF2C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FB7479315971BA39" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D1572BF0429FC9CB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="627249F637C34D94" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F6150224F847D040" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CC51C6A4A360AE54" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C0947219641C7823" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5157285B8EEDC11C" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="591FA00667E45C07" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F410D5BE48073838" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7E34C496BDD851F6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2DDE72562638C6CA" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="C6CD0F6772A3BE48" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="CD8E13ACF4EF7B85" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="95557A85FCB9B07F" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="E011CE7F28DE7126" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="1E814C5C969C6DB8" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AAC67C67D6C59D10" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="33F36318017610C1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="93E15203A92BF40F" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="F9B11F943E589D0F" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="FCBAF98D79B3F6CB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="BB1ED08D330C2F14" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="9484B3C187D32533" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EDA04FE74173842F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="705A80EA16B03F27" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F65D3686487782E2" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="58799F1DCF78B8AA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="D3784F550257EE29" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="A56525A045322B79" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="49BF401D0DD218F1" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="AFECA4B98CA864FC" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EDA2DE7EDC470872" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8B3065D39D9FE03C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9ABCFE2E2C17ADDD" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="CFA47DB16E85E595" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="841E2CC331EEF81D" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="B3FF61955B201531" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="AE6C3EE7954DF5BC" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="700DBAA6EC0AA646" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="DDAD736CEF609E73" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="61FA88C901D7E919" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="FDA1A44F344A64BF" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="10CE5B33DFF23098" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3F3CDB376874C0D3" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="3B1D55A2247613C5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="CF4F5A317114E" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="63EE79CF4ADAEC29" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="4E48FC975EF545BF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="45CDA5065E6A6205" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="FA1E58DC8FE4B93A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="AA2BA8E0005F05B1" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B072D7656D92154" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="852E2D98B3BD431" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8F4BEBD0E317FC33" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="7DC34BE5D5DBDB8B" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="7D55E4E36232AB28" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="B30F6217D2244725" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="611BC6D54C02AE48" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C1897C9500DDF20D" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8180F07FCC4A8D9B" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="A794FC485D236CCA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="4CA9BFD18E37E2F8" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="E32CC11FA78BE49A" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="F853EF46A2EAE420" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="20019372D84E15BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EB153A02E1A59F5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="91D77B3C504BC86E" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="5B9FB43032949D86" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="49B8EC8F9C3A2F2C" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="C5FFE5A3937C8429" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="C1D1DC258BF5E74B" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="610A2021355A5B9F" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="25D6F8736C029B36" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AFE1DA6B278AD03B" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="8012AC7C909C6654" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="8E240BA7369CE764" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="869EFC0B723988DB" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="A8F7AFB7299A06A7" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="56A99129A17D5C90" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="45DB225ED9DE955D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CA5244031892E2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="21EB14E988867FC3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C4299BB0143CE1A" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="352E5D304D110AD4" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="52197887E0C0308B" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="39DD08A9D7830647" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="CC10B45407DED6C2" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="24B052AA6F63D3BE" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="EFEA4CB74999E27C" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="B767F5345988DB61" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AA2A170307CCEE0" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="C0E12F68F14241DC" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="EE8BCE453F398892" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38914F99405666" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BF7B252410390C6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="EA2322B9A41961B0" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="7B69B4524C96505B" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C003CB39438358C6" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="D9EC64582E264C39" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="19230B7C041CB448" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="E810FBE67787C66F" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="6754A7FA8D7C17CB" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="61C872579E0DE6C2" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="30130B4EA5A9FAC7" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="E008F32B2FF135A4" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11D945A4CB721402" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="CCE3172B3BF39FA0" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="658E953CB37FDA49" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="CAF815CF8750B55B" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="6BF1640BEAF23C19" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="86588B57D35C07E9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B1CE7D4AFFB1D77D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="22FEA3BA12F13089" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F42AA58E2301066A" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E3E4EF81694C74F5" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="C4899FF57778AEAD" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="7C4493E268313740" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="979AA7F2DCFEE92F" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="E3634896D56629E3" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="9D0839804A8BA216" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="40A994FE4C954BA8" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="F5F7CA8CFCE364DE" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="43FBE1A45A2BA598" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="21D423275F551DA6" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="BDFAFB4C4864EFF6" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="DCD0B22E0E59AD98" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="FAD27CF4D5C7CAA5" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="FEEB9026CF85A07A" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CAFE3B62E9CFBF00" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8506A3757667F642" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="1F4D104F52CB5515" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1A2EADBA52C41188" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C1AF59DBDC890194" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F3383675D49DE649" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="A468B2FEBF22AC47" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="67B9C317784EB44D" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="B4A69A18295A0D9A" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="6DBBDB65CA549400" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="2EB0B9F7275FC8CD" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="E0D5629E1E076978" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="7395D1616F3BC148" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="3D1AF94C4A3A5F5A" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="83A39775E3696B80" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="102340BB1C762671" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="1521BD3BBCFA6139" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="C69B9CCA314321B1" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="38981A1C0AC2884A" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="CBDB11397DF56513" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="27DF7967C8FA9D96" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="524FAF6BEC553646" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8A0BDFBEC79182F" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="54FF4DB87F0391E3" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="2614F6AE919265DE" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="77CC2EB2B15DD374" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="47E3DFACA9C87759" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="FE412F7D445B6CF7" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="301429C119CB5487" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="7DA30768910229DC" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE1D00A10C70663A" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D092259E0F32AEB9" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="B2E330E452F2B31D" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="7B2D571C7F53FC5E" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D18A6BAD40460095" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D371889C7FC0F195" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="B11AC363E5A1BDA5" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D5465E7FDDC8969" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="4E8A7A9548E706EC" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="1B2C632C62FEAA6A" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8277F9B1A69253C" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="A267524747CE2B91" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C88FF8D39E90115F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D61C5CC7E53882CB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="7F867476CAAEE8AD" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="59344DF886837675" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4DB07D08BA8735F2" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="87BC631FB834CBA0" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="3CA30EA586217ABE" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="1F77D37413158B7B" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="FF300A042283F173" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="3DB8F063FA3CB78E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="E802EF5802474953" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="275BDA27CE93067D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="3D8807E35CF9CA28" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="187719975EC7DC4C" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="395EB4B32A9ED5DE" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="B51F486902896320" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="45846965B93C4F50" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="4F619A71B4EC577B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="EC755EBD247ED319" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="14A7C5B8D9338827" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="5A8E69EDEB9F1CF7" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="E7F0EF343C1E9495" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1FF27B6D50034502" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="4637C0EFFD18F20B" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="1B01E29D5411B898" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1D068297CAC90A61" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="D29E3F0C8E5E49F9" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="671D4DFF2939036B" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="3C626919A5DDB638" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="74EB502DEF943A74" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="B962EE7FED515D91" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="7F91186C897047C4" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="78362E482CABD4C1" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="3171D6BE9C135501" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="B8000FF7705A901E" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="AB569C2A975F637A" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="FCCFF14AE44F8650" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="20FB1F672BCF3B6A" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8D6126FE3806FAD" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="F793D5D359FA7578" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="50B55FD58F8BA3FD" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DA9A895B0FEE21B3" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="91BA9FAA6791FA0C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="8039F6AA3D88EE4C" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="4E99473F4AD1FF7B" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="FF6852FE409A2104" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FE1740B0B54EA68" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="CAC4EB96A2FDC25D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D9B73B50AB9876CA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="2CD7DB120093F266" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="304AFC77B23C7624" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FC83076333A5D552" />
                                            <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="1171DE02AC7CCB77" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B74CCA9169CBE672" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5A7CD081571B6754" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="8190E4BBEE92EDB2" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="26FB26F9E70EC7FF" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="1F72B2E0496CE319" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="8E32B14388BDBE89" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="1645FB9FA5E2345D" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="88CF0F606FD25A8D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="66E4FC5299CD825B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="54C3DA51044E9906" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="C1B470BF8A3C5956" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="D8B166EDC938866E" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="6575ACC8DFAD5A7A" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="BB5B31E1F51BA9EF" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="3812D235B5325CB" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="24B80CA01FC249B" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="AF8C4F2E77DEB435" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6C8274AF4AE0B513" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A2986E3DD2ECAFEA" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="97597A6B7E818880" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="704F02E064E58AE6" />
                                            <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="BE431138FE8CF447" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="F5195179F8F6391B" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8686136653558C1B" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="2C457E199C5A57F7" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                <Tunable type="drama_node" class="TunableReference" muid="672EDD86B6B5FF2B" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="ACE06DB5285F25AD" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="BC3F5B9066B76EDE" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="AF5D1EB0C20E5C5D" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="C5D834233F28C628" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="59204A706D9B9352" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="8F3B85C39D4A1421" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FCB17EECB26496F7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E88A03B20C02322B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="2AF5442124A54F3C" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="25DF4B45F0912A61" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="7E3EEC2A4FDA97BE" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DBCA31E1A2F7ED8A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="66C8AB1667126E95" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="5A123ECDC57123D1" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="17402F4D56ADE968" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F04B2FDE857A466D" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="5EF35CFC873FF6B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="E66A0664A6163E05" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="6FC8DDE0E7DE90F6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="D77FCCA531A8228E" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EECDF8CE5CF33329" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="4681426700EDE5E8" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="6E399AB63FF0085E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="741BAF96E653E1A8" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6CBC0603485A6CAB" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="E01C03F6B0A357B6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="6687605C79BEB433" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="80A4BFFBA63D910D" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="8E64724828E71500" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="A48C38F503F22136" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="5B138D9CC7540DD0" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="29CB8775A4771A00" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="983141064DDE0EE1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="7A687D6FBDF363A7" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="CC174DE312F8B00" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7412BA47434433C6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9F6EED7A4C667C18" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="A188AAC9B25BC0D6" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="FBFE80FA63923A81" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="2E7EC80831099E5A" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="2A6CB0A9FEA1627" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1E83343F3EE20AE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F9CBE65DDD5923B6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="6CEDFCB298FC95A" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="1F206F5B1DA8B62B" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="DF9372701D4B73B6" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="BBB2DA80D02B7A57" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="A02F12A9D1D761FF" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="481CBF3510C15DA6" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="C5826E0B026B0AA4" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="AA1126E65A43E3CF" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="6AD3227CDE2EF425" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="A977D40CCBB71A4F" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="389322A13A413133" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="19A69613FB14A846" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="587DD417B3016876" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="EA7C8C4229ED8777" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="68B2A634CECE0A16" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="E85376E5C91B808C" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="E0A46A9352AB9DDB" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5F5947DB02222CA" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="E1F8BB0728C0B503" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="C4F511D2041084B3" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="446163EF0098EC54" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5B971D6741028BBC" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="394705E3F0469D98" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="FF8CA81708BBB5C0" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FC0DD38A8900D3D5" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="7C063A6FBE536A2C" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="3B2EB0860A1B7D1A" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="799EC68146E37A8B" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="97109F5DE62274A3" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="CBB9C300B44952A7" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="D419C185E664C82B" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="16C1EEAA0D2FFE16" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="811E68C88274A4B" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="697EFA2F64B9B30D" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="929A5247C053B4A7" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="CCA1A95EE85D8D49" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="E6492658AC39F0E3" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="59FDD30560FCC99D" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="30A0A300A934F832" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="CF164FD649CFD9BF" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="E5D92AE6FE2B9228" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EB8FB488F80FD738" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="5A36CAFF0A175A43" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D7636EEA818B1297" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8C55CB88B2A99E5C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="44C6B2DC281715B8" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="8A32EA7A464BCF70" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5060CFC618874501" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="764884E40CEE25FE" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6AE77F456DEC8E5C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="47A8FDCFEFE351EE" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="287E6A5828F2E453" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="BB4F1D85933F5456" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="99669E195FDA4C9F" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="19418F804E0B3B7F" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="B6BF0D9BC0526B6D" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="E48F8BB8B895E238" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="C9670172E792DFFC" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="55BDBD1EFD27035F" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="D8A634CBBE4FED47" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="EAD5E067A19E3670" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3D5487D89532AAE7" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5D0445B1D26885AA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C212E454F4DAB3A3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="3C4FD01454CA9314" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="1764E538EA2F832B" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3063B6ADB539B64A" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="FAD584726ED51ABC" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4A4263065263FCD3" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="18CE18CD7C7AE601" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="63FBCD7795D76A3E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="F25F6E6E8537B0A9" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="591365273391CC8C" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="3EA41FB58C9C386B" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="C586DC1203E27A03" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="CE154E5AF30216A5" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="76A529FA04388E87" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="93531E81447E8184" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="D2870ADC2FBEDD7E" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4129366CE90FF8C1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="EB5A084603FB1B34" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="DC8A76EBACD5E8B9" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="1B161DB4085A86A6" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="615CF4AD67751F46" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="BF8315A4776EBFC1" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6E0328156CDF932B" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="CA977BA5F6EA5EE8" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="85BAB12133B20CA4" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3323C4471EEC4FC" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="C6E8A7606D0D8515" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="8919DD1B2E403BEB" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="E7304965E4B8A776" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4D5987211DBB3C23" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="69A4B34059635084" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="8C98E90355827BB5" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2E1514C50D18F028" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A33BD0E71DAF2C04" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="865D39558ED10A75" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D79AD2DDA570CEC5" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="35AFF68DEE012DA5" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="C754DD539A4191C9" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EFA3402B5B11C9E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8E0FDC395A3FDFFC" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="7D5BB03167F6ED5F" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="12BFB44933C30DC0" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="357A8C14983391CD" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="932155B6109C9582" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="D8AA69C3D734A649" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="F2259398D77BBB5F" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="4F5F90577FDD26FF" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="874F59C12EA95DC" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="8B29B0BC17A0349C" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="27440AAA83F51448" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3A2DFACD189848F5" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E4903569518068E7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="40CE427B18E099A7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="C7243A5EEB0D7E3" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="91C830C3A6628594" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4E7D616EA208403B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6AC1D3DFE08AEAEC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8AB0BC9BA280E61F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="592F6D2BB48B747B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F1573DEEAEA3DF48" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="35DB6130BB01A0F0" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BBD3CD1C7A2D1C19" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="53A25822FBD44F0F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F1009ECEEDCA9172" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="10A054A04E7E3AD1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="674B47C6896A32A6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="290119A0D2013D1B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="9EF29772A343113" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="8291D4CBEC879782" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="30FF5A3BACE2438E" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3088097442A45E88" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D50B2ABAAC4AD154" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7379BDB8BA2C9695" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="3116ED45D34E469A" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="4EECF40F5189B3EA" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="E76FC52011D3E36A" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="6414B241442AD867" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="176E5D573A55FF69" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="1EEB97FCC1A98D8A" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8AD5D30025D66D84" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B0989E6F0B6EFCDA" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="175F1CEE678E189" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="43CE30DB8A70893B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="51C011234C9E2449" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="1D154900275F1D0C" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="78C23B54738CC0E3" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="81802C0365EAFAD3" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="6CB52C7F2964FCF3" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="CC884FC68D8A0B24" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="41C7FE1E902B1622" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A67D763FF943CE52" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="FA0ACC7056B4FB08" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="453B0055ADB37D69" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="50418AE633F55ACC" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="FCFB02FF8CCC049B" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="E821CC583CA5BD97" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="ABFE1B8D15AD2D42" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="30E2F8FA0B3ECA7A" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="313AC8A0DF8AF075" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="20D1526A9FA527B6" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="886D42A1D7F5A90" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="4D1C1918C1CA8D7F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="1430AEFE384185C3" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F72847DEBEA59082" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="90361D3C2C0BE410" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="80E2141CE111CD7F" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="393C34B2A2E7DB1F" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="C9792961A5CC62FD" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="912439D1152048D3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="5A2C6C039F0A2249" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="16F8231ECCC1BF38" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8DCBBA2F048F38" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="88BC1F7249688D9F" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3CC273B2299AC1F9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="97BC4ED770BC93FB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="283F90E2F7377718" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="A5FE47A6FCE5AFE7" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="2E3718CEDEFEE827" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="B7E5F7B0D46E181F" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="926B9B0C48131617" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="9EDDF7DF4A38D821" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BBB97BA2FDA68B72" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="32FE0479F5E6C9BF" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="33CEBF4464FECAFF" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ED745889BD450941" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="18CA313565096445" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="6A6C7AB8951A839B" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="EBD194C759E06872" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="2BD43387C6B425EC" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="9C036201C50BEB63" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="7F2318D3BB5F7390" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="1388F79F40089E61" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="8BC4355919FB6104" />
                                            <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="B31938C757459689" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="4E84DF393DD1B9B4" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="AB3AD6F7872CBEA2" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FDC7C8908D26C5A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F8FC15F244414E5A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="54722109DC9D214E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="59C1A8B81053976" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B268E06BD76BCBB0" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4CE1A8E9C30AFDE0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9EB1AA2B1E729BA9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="94A5CFD34FBBCE16" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="5905B75680A51270" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4BE41F48E6CF2AA2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="42AE571FF21ABB93" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="CDF9CF6E69BBBFF7" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="180CFF5A6A30C142" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2D43CBC388F12018" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="87CB756141449DF6" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E562F5F8E71C94FC" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="6BB97209CE601433" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="51ED565572403D12" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="F1822767D8B9951" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1FEF8F7AD571A079" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D884DC4AA167B867" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E181EF212A65D548" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="6E057D87F3DB3782" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                        <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="C642A973BA05965B" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="away_action" class="TunableReference" muid="B62C7A7FB85E1D8C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="918E8493C8DFED17" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="39A9B57965EC5A9E" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                        <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="EB22DE15233C8B13" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="snippet" class="TunableReference" muid="E7549FF1C648AC42" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                        </TunableList>
                                        <TunableList name="affordances" class="TunableSet" display="Affordances" muid="4881F4E4DE72E6C4" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="interaction" class="TunableReference" muid="4E1A20AB67C4EC61" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="A44613027F2BBCC7" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="DFC441711A0FF0CA" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="261787CA50E05C44" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E9623B37E3E60985" />
                                            <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="EAD395074FCD02FF" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="115B021AE97B8009" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4193E144A70E3B0F" />
                                            <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="63D7E61190FE06FD" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="E562155D330135DC" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="50CCA1D8CBCB1581" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="tags" class="TunableSet" display="Tags" muid="945D35F8F0D3749E" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D12C273E85D046F6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="F86A6ACC8271E7FE" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="AE5910B09EEE332F" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="49653CF2BB2DCD22" />
                                                <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="2E25D3B68335902B" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="9C382D435DA25202" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="A207252EB6966FA4" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="37C2D8B8D394089C" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="E75D3E23573BA788" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="E9C4006AC3128CAF" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="9EEC90F2074A2B1C" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="7981614C9E9BCA40" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="82AA325A84F6E28F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6D5DDEE1E0D34ADF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="AA98D97F474F9159" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="76A9093EBD197056" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="AB205C3E1D41FE47" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="3CB61E5791E8A045" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B062A1F20C74BB76" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1E9C8120EE5A537A" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F5FE3BBDBE254403" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B004D051B8F98946" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A9615F2489A1E00C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="4F860D6380D69166" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="56997167B45D768" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="FEB0EC849DCEEBD6" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="EDAD1E41945B4B7A" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="ABD3684DF2630562" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="47B3F9A8D4D441E6" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2ED2494E7C863F0D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2BD3F21A3948CF0C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="E9165B745437A6D0" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="8CC44269FCD591C6" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="56C594D43EE078D5" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="8417353AC772D7BB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1935F403F26DD0FA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="A8E650919896B78D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="11EDC713C20A169E" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2CDF0A307293E528" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8A9CA960623A372D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="CAC74EE1389690C2" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="1FB2D4129238B98E" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="8B213885E00434A6" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="5531AC7BADAFA960" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="EB0FA17E631BFC11" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="E39B0D178608401B" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="7A8FEECF5DFFFB0E" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="1DA022DEB6F97B39" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="10986E998A8579C6" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="835E2E3204C678D7" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="53813EA774D28D2C" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="993A1592A2590F20" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="B2AB0207A33A51BE" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="9196824337E4AFF9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B47D17247396486D" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="8ABDD381E2F0BDF1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="B30A363B36B623B9" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="2F917BCC0CEDA462" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="B6827D01E514EA5F" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="6BFD1030436AC461" static_entries="event_testing-common_event_tests.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="D24D490A21A8D69B" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="11D3D9C4950B7D04" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9176A67B42BB7F14" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="EE5895E4F3B426A9" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="CF35BD7FDFAA2DC7" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="7A31AB2158BEDE07" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="A6FEA1099E8D7E1F" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                        <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="691F881E70EB7784" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="relbit" class="TunableReference" muid="ECAD25E4DC3B0A5B" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="FCFB9A4EFFCBEB55" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="3E9E4D6E68C65442" />
                                            <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="F704E6BF2EBA4A49" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="5B8A8D5E0773809C" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="D6C8C647E8C17E98" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="E3FEC32C7CD000CC" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="6C31E3172CA0ABB9" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="3C14DF838734F4AB" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="417BE5FFB7406F6A" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="B2F15566B0EDC538" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="91BB983EAC32C208" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="F2FB77ED21395D45" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="FA623DFD10A05A75" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="1750C04828DCBA6F" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                        <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="7B71944064AFCC9C" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="2A5F241EC6B013C3" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="40E23D80223AB394" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B0D981158AA7FBB5" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="D2EECAFD6F3CACA6" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="C0926923DDB0C62" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="755606F07855643" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="A65BFBB20BDB2519" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="AB2F5CEEB46C8F72" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="AA918977EF573614" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="F301DE3B6EF6816D" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="FCDC5E0D6CA0A721" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="1F0A9E53BEFD2382" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="CB0A77FCA2BEB93B" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="BA24CD2CBD2A0C10" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="43215186B4F0737C" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="DEFF593444F190CA" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="55BBD7971682B76C" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2A06D883C7E1417A" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="29865E94419ED511" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="26ED3017290EFE3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A8516A30ED1DF006" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="9CEC7F3D3E2AA9F9" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="7165289FA00FDCC9" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="none" class="TunableExistance" display="None" muid="5E7CAEB24B652CDE" />
                                            <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="9F5BEE2D9E7B8FB" Deprecated="False" filter="0" group="General">
                                                <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="A2935F8F27CCB338" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="5BCC96FE95C44953" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="5FCCAF711201939D" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="5132AE6EBF9BF487" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="A606E9DBE369D2C5" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5BE3B9837CA6FDFF" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1AAAB75A437CF641" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="ECF68CE63A31F97E" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BBF3CD3F0E8C3FA1" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C123B9C985C32A78" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AF933684D0702DFB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9B435E3589F884B5" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B05BEF2C38D7C5A5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4E1F2E716F080499" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="32474D31B48D66BE" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="2297A1AF013689F9" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="83A547AFDE460EF7" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4D2CEE69D6E65E1" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8839219CA517E450" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E51E09F577237C53" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BA8DC31E46A656F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="D647909437CE05D1" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DA14174096DCF796" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="7C87FDEF50557E06" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="54A046309B07D0D6" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="102B246D7BA65929" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="BD5FD13BA5CC9E94" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="9DE36FB9CAFAC249" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="4C0567807AD0B839" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6CCB664468E2A58C" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="152D94314797DC86" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="situation" class="TunableReference" muid="44CFD1F8404ADA46" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="A5C44E774818BDB" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="122EBCB63966E5F6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="CC051520112B4DCC" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="50A5864D62FBCF5A" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="40A0500984884F7A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="1F0D4B593A8E8D62" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="14A3DA2C1EF175A9" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="C97AC3BA6F71C4CB" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="F7A4D8DC220C071F" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="17359B52FEFFE6C3" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="38301C6081A90FF0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="E3A3C8D1D55DD63B" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="827705D1E11100BC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7A82017DBC7F8EF5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="C87AAFA858499903" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="4B60C0EF1055D201" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="94517F618CF2F9FF" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="58E86FA707EDB9C0" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="905C75DD7F371BA4" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="62FD6C6CEB8BC288" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="D0A47D6C77BC570A" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="F8FA1EB6E5E905E8" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="4C1B875223F55FAA" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="A46BBCDFF0690C09" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="ADA668D08B0C505D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2CA82851F529BDF2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="1835DD4FCD8D58E9" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="CF54A849BF6738DB" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="920C0326ABC2F219" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4585F0EB6084C082" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="B6B767C5C63C9BD3" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="624263D69A739206" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="5B99A41704A11544" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="9FD7CD75538CAC72" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="4DFCFAB5E06E8312" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="B308706856DFEA27" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="7B8CB249145D97F" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="C7396C848894FCD7" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="954199B74BE5D6A2" static_entries="event_testing-common_event_tests.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="E48BE3B58A910387" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="94A68334D70EFA02" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="3EB58E196EFD113A" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="761091108B0CD54A" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="87A63411FC1F4458" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="1AC8B0083C98C5F7" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="53C8DE5D950A81BB" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="7F8E9A2E194D03C6" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CD48674681B76BB7" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="56D28FEC2DBDBCDA" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="CFCA7CE11D6A6777" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="A6855AD3B45BA983" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="29B603274F4545E9" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="D0C7063A9E7CD3FC" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3591BB154F43B779" />
                                                    <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="BCBB0FF7DFDB9553" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="B777AD08078B9860" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84FF14F02DFB61B0" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E5B11C3E78736AA" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="13C61578A43B7CBD" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C166397E6374F960" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="build_buy_reward_earned" class="TunableTestBuildBuyRewardEarned" display="Build Buy Reward Earned" muid="BE43AD949426263A" description="Test if a specific Build/Buy object has been unlocked." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="315BD906B21D14D9" description="If checked, the test will pass if the Build/Buy object is still locked." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object" name="object_definition" class="TunableReference" display="Object Definition" muid="C5DDA70A07EB1A8" description="Tests if the specified Object Definition has been unlocked in Build/Buy.&#xA;&#xA;This test will NOT work for Build Buy objects that are always unlocked.&#xA;It needs to have been locked before and unlocked through something like&#xA;a Build Buy Object Reward." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="73038A43D53378F6" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="2F39E3F1E677544D" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F03880A5B945D1C3" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="1E7CB142E11973F7" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="1EC53AD989D22250" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4D91FC8D72994AFE" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DA49FBCB5AC2A399" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5767BC11DAF8E7CD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="20912C7172E6D4A3" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="96A24A3F58BD3903" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="18EB3593ECDBCD04" />
                                            <Tunable type="whim" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="669C49EACD5476B8" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="C5ECF991283A3B8E" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="27FA34E333AFD387" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="E786A4DE959B5508" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="FCB84546B7932FE7" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="93E6A1D402EF52CA" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="6D1117811A61AD0D" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="811FCDF8C657FC03" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="A16E5B6B5D70FD43" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="667215621F44A984" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="12146735D1CFB141" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3C7051923CB42F5A" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="898213F345E5A3BE" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="39A3B2F2602D2B2A" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="28198E4C76A83156" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="A4C4AB08F4B27AFE" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3BE5B00498F1CB3" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="9F087B0C4B9196A3" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="CDC4B1FDFB06D12A" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="683F499E9673A78" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="1FF7A5DCB4EFCB77" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5DB62546A6C719CF" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="265AB3DB50F59A49" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="49A98ED9B66FCB2" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DA5FD121FE076327" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5F4793C3C3BF50E7" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="DBE66EAFAECCB215" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="3BE91E27C62328EC" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D1E97558A9B0F11" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="E62EFB4DDF746F33" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="17D9A360FBB56839" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="DF19898B0E830A66" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="2776CE12E7F930DA" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="5BB3BD62A3F7C9CE" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3115C80786756B78" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="EBEB3572C820370C" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2832A4E275C68252" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="911CFC8582E2CECC" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AB49E53DF9171514" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="86CB128759FD0F6B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="1525CB331833B37A" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E87440F52DD7C918" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2416A3738D6C1921" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="76F0DAD9E926A16D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C71287DC22E2D67" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="122144230408BD9C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6A5FBD0FD62CEFD4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="87339E512384B94C" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1403F767B1A89FAC" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="863BE2DC0AAC6543" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B33BFEBC5BA23E3E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="22876E6E31196890" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="29F6A938568B3470" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="857886E397505094" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="EA3B8DA3310E0535" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="EF439742F7589A4D" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="1E07EFB738BDD178" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DC522C8825ABBB94" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="259505D808358E15" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="EA99EC4679C94F5A" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="40C09E15209B98A6" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="EDC7B3A1FFA4EFC5" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CDF830D64B9C4F60" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9286024BC422B7FE" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4CF429B4259A5E9" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="73729933CC2671D2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="CAEF4AC30D64A68B" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7095B2D0AA62A56C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8DF472B26955B164" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AB616C84FB5BC7ED" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8647414DD7555992" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="60417ADEAC0B6B87" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9E665D22C415CDA0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="35F9E2D1CE470D4A" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="AFF59DA361BDAD7F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9D5CA9B78B12E0F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BEEAB6E42161E2DC" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A1C556A2C77DBCCA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ABA36BFA94F2DECC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="65FC301690320F12" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4CF030EC2F5E4639" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="F4EAA0FE1E19A622" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="9ACF11367678D4DA" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BCFFE316DC14316C" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="1AF6DB30CF0BF78E" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9EB5BFB4148FEA8F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9F2956A410DE966E" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="32324CF7B81289ED" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A60A666ED4A804B0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="FBABFD04BC765C61" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BEC956A7D7AE8C1D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2E9F4619F94671C3" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7353DDBAFFD1073D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B8E5A1BC400C4B7F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A67EC25285057746" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8FA71901C5E2ED86" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="6A9BEB47D108AB0B" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="80FA7E2A5586F89E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9CC980310193177C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9CB8D9C1BD017BA8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="29397CF9BD535253" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8C4DAE0A839C7193" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C2E13DEDE14B33FB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="22B4F31341B37516" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="56139380C8E2AEBE" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="C554507A76157785" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="67ACD413ED90A00B" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="5898F90BE36F632C" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="AB2AAE24346A812D" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Deleted name="entitlement" muid="57348E4220E5B4F1" />

        <TunableTuple name="fake_perform_job" class="TunableModifyAllLotItems" display="Fake Perform Job" muid="FE1E0DF5DACD590" description="Tune modifications to apply to all objects on a lot.&#xA;Can do state changes, destroy certain items, etc.&#xA;&#xA;EX: for auto cleaning, tune to have objects with Dirtiness state that&#xA;equals dirty to be set to the clean state and tune to have dirty dishes&#xA;and spoiled food to be deleted" Deprecated="False" filter="0" group="General">
            <TunableList name="modifications" class="TunableList" display="Modifications" muid="6286DEF809CD05B3" description="A list of where the elements define how to modify objects on the&#xA;lot. Each entry is a triplet of an object modification action&#xA;(currently either destroy the object or set its state), a list of&#xA;tests to run on the object to determine if we should actually apply&#xA;the modification, and a priority in case some modifications should&#xA;take precedence over other ones when both of their tests pass.&#xA;&#xA;EX: test list: object's dirtiness state != dirtiness clean&#xA;action: set state to Dirtiness_clean&#xA;&#xA;So dirty objects will become clean" Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="8376C18B7791D3A6" Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="action" class="TunableVariant" default="none" display="Action" muid="303A7BE904F0CB4C" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="cleanup_vehicle" class="TunableTuple" display="Cleanup Vehicle" muid="6B991D287062FBE0" description="Cleanup vehicles that are left around." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="deliver_bills" class="TunableTuple" display="Deliver Bills" muid="97C10DD48753D781" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="action_value" class="TunableDeliverBillFakePerform" display="Action Value" muid="55ED0ED87BC87D74" description="Let the bills manager know that a bill has been delivered and&#xA;trigger appropriate bill-specific functionality." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="destroy_object" class="TunableTuple" display="Destroy Object" muid="B358B3DC1B58914A" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="inventory_transfer" class="TunableTuple" display="Inventory Transfer" muid="F2CA03F486C01F7E" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="action_value" class="TunableInventoryTransferFakePerform" display="Action Value" muid="5A332877D3555012" description="Transfer all objects with a specified inventory type from the&#xA;specified inventory to the inventory of a specified participant." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="InventoryType" name="recipient" class="TunableEnumEntry" default="UNDEFINED" display="Recipient" muid="6877CD487D6283B5" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory into which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="InventoryType" name="source" class="TunableEnumEntry" default="UNDEFINED" display="Source" muid="52AE980AC790B572" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory from which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="loot" class="TunableTuple" display="Loot" muid="90CB49273F20236A" description="Apply loots to the object." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableSet" display="Loot Actions" muid="56A2DB1916E576A9" description="Loot(s) to apply." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="action" class="TunableReference" muid="E2DB1AB873122506" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <Tunable name="none" class="TunableExistance" display="None" muid="96F00889E1C2CE0E" />
                        <TunableTuple name="set_on_fire" class="TunableTuple" display="Set On Fire" muid="FBAFB9793063BB0C" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="set_state" class="TunableTuple" display="Set State" muid="682645591EC75EDB" Deprecated="False" filter="0" group="General">
                            <Tunable type="object_state" name="action_value" class="TunableReference" display="Action Value" muid="F68D300BFC228824" description="An object state to set the object to" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="chance" class="TunablePercent" default="100" display="Chance" muid="F987411F08579E1" min="1" max="100" description="Chance this modification will occur." Deprecated="False" filter="0" group="General" />
                    <TunableList name="global_tests" class="TunableObjectModifyGlobalTestList" display="Global Tests" muid="49B9D404D9325FF6" description="Non object-related tests that gate this modification from occurring.  Use this for any global&#xA;tests that don't require the object, such as zone/location/time-elapsed tests.  These tests&#xA;will run only ONCE for this action, unlike 'Tests', which runs PER OBJECT. " Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableObjectModifyGlobalTestVariant" default="none" muid="3499338B10CCAA5B" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="DFA4FB590435A470" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="9619A7A5E9F7310B" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <Tunable name="none" class="TunableExistance" display="None" muid="158138FCF112E699" />
                            <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="27562B4243F7534D" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="B106673C11E024E0" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="B99096A726EFF7D4" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F734F62F58A07FA" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="67B41960E4CBAAE6" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B35A193E6AB7BA1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="2BA3266A8D3440DD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="3F90078689DFC7F8" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="EA685ED30F60C0D1" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="6E1284D919E1A884" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="39A5C3DAB1429CC5" />
                                    <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="5549BEFF56E6B759" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D86F4C0776CA0990" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="24BD370796F9F29F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3FC958C68092C260" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="A723DD340CA21D83" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="6CCE7375A298F208" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="488F5323922A9DAA" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="574ED1FBF37FEDFC" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="C928D9079ED680DF" />
                                    <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="D1B7BFE634BE71E0" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="E31E2FB5B2F7015B" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="B6EE35AA39885741" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="1296D7CF51DAA163" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="8FD847F304CF5A09" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="229BC087277ADC6E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="4CB28C72F3D87EF1" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E8C640BB887A6B90" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="73CD1E9B9F053CF0" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="17FEE1ECE3EE5B8" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="C6764CB03A5DCB21" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="98132DA9406EA028" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="88C28755BB69A764" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="53070184F1648DE1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="18515C83414551BE" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9001FCE9ACB7ECBA" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B0AE73CCC1FDD672" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="74FD06D3006814E2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FEBBF8C510E7B2B7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="8B45B411A05EA367" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="3F1CE5AD7921EBEE" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="test_events" class="TunableList" display="Test Events" muid="4B8A629FFF050254" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="5D80B33B3FBD5DB1" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="B9B0CB066CD13974" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="8BC2C56EEFAEFFCB" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="987B1ABE5B7D419E" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4CD9E24DD6725E85" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="50A2C15D178F7FCB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2BBE011349612CD6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D855BEB78A52C06B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="C595919278F4CB5E" Deprecated="False" filter="0" group="General">
                                            <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="238521827C03FB52" />
                                            <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="9922AC579AB5C04F" />
                                            <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="66973D168666A832" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="105106C579648D11" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="74B3CEA829239111" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="2774E809D27D4237" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="304AD10CB72203D" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="A2EB8A6EA3058303" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="521B707E16516A06" />
                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="1FADC201C0E127B6" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="AE302E263FCBF166" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="56FA7377F9286EE3" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="E36922A275902254" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="61A6C3E85B7C244C" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="3E88B7264D87C2E3" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="699715AC196FFD2D" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="24A6657BB82E0388" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="692D24ECC79FBAE0" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="16E3D473D00785F7" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="AC2E3A12EF5B25CA" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="21CF762A46800755" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CF9AD6E6C6940AC0" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="FF1D46DC306E512D" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="45AC7563C57FFC04" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="C682F4660DCE8D44" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="8EB7C2F3E7967E12" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="397F138F528B526E" />
                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="2132D6F4EBFA7F3C" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="771DCDF10AC05D74" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="DBCDD0769A5F66BB" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="A9E1C6F24B377867" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2A2599E435E19A7" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C3F972E6972C32F4" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="883D63642AE886CF" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2960D92E952038F9" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AD18EEE7B5277D41" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="5461094126126A51" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="565F81EE49B3DA9C" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="32C54963EB818DAF" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="97F7A4DAD5744380" description="                    " Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="59567BB2732E681" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="A64C3FE9CE1BAC71" />
                                            <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="116306CAC236D59D" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="FC69376FA3E428CF" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7D6761532CD293C1" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="32AA79DE29B99384" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E3B187866DE2E635" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="48BF8ED683E9A3B1" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F9BF7128F2475BC0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5BBF54E52E2D74A1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="2013808EC4C34DCD" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7C804FF8FFB667A5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E1FE6F93E80BB8DC" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="82B80D12A2C16597" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="17EE4AF445EB394B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="56FE3C6638FB4833" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9B57937CD18B30F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="A4438F771B8387E2" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2354540846491D38" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1998A952EE3F64A5" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C9CB90353634E884" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2D63F9561D14D098" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2EA6A0B9B249B146" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="296FB94D57ED6B0C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4FF4142420054DB7" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="C5B63F603DD29F33" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="3CA5F00C435A1E9B" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B7867CB2AF277850" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7A2317B535DADD7B" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="6048EBDA2AE39C" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F406443603F76DE" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="EC3EAAEA4E1E9F6C" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D1379E199CD5426F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CCD4E232045930FC" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CEA3717F9BBB0971" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6FBA58440C1F7016" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="A8255EC4CBDD53E1" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DF37132C24ECB5D3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="99AF9B646D5AC39C" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="755CA778F8CA2A61" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BBE93ED8547E9302" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7BD0E2026E234A4D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="44607FE18454E085" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="37B83D8CD23583F8" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6C5A223DFF100031" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B281CD8D90F533FA" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DE549BC61EA652EF" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FC5ADB879275E1BC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="187E6F6F2D00D0FC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6381B11038FA3328" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="503D7FD93EF4060" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="FFC799FDDCCFC289" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="EB015441429853F3" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E08F7AB88CE5A9" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="3D8951C54B046266" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C354D158A573FE09" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="489575EA2E84178C" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D277E5200611AF7F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="30B4E98773005985" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="38F11F900623C65D" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="77E6156528C1FA63" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="709642AA31D6050F" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9EBCBCF2B64202F1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A331848D8919C1A8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B03243853F42D1B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="214E52CAB1E2B95E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="91E0892CA0A8553B" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9FDBFD66264738AB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3F5D5207D4A8DAF4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F72BCD9CF8FEC111" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BC31EADEC2252710" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EC13F21C441D47C6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1EF876CE2ED445A9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="48BBBA25CBA49D45" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="D89D8BFDC49EE2F3" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <TunableVariant type="None" name="max_num_modification" class="OptionalTunable" default="disabled" display="Max Num Modification" muid="1FC7E074A716ED0" description="Maximum number of modification can be done for this action. If number modified reached the maximum,&#xA;We will stop perform this action." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9CF3AA0EB35E8A40" />
                        <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="50DEDDE31F5FE772" min="1" max="None" description="Maximum number of modification can be done for this action." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="6A2D74522551F3B1" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                        <TunableList class="TunableList" muid="2B549E4C53FB6E62" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="43293F3A7ACD585C" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="148EBBB407257435" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="FD5BC5AE088E78A7" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="C438BE6BEAAC4A3D" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="65F5EEAF1F25167A" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="8F064F24AF2E7C23" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="C8533675EB6E8F7D" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="98DD51AA6F6751B" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="934835900C8E58B6" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="98A556EE1A229D83" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5B5A06174522D31" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="A3CA1CCFB2CA84C0" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3AF8F6297C58DBC8" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F507C400BCC25E04" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="4B2B081B9FEA11B2" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="2DC62BE9E388D371" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="18E0B3560A76CCDB" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="AA50437768997772" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="78D8ECAAAC7609A" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="A4637510253565EE" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="8C3D9B1C8D80BB95" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="F98964B24FFD8D32" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="A18B103E5D446968" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="771A1358C452F55F" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="D7165F1FFFC85D47" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D78FE9C228F262DF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="458AFDF514813B99" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FC8B0EB6A344335C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="720EFFE35E23BCAF" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="346BF2C47B111475" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                        <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="4950348661309D38" />
                                        <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="2A22C17E8006498A" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="BD48B447D3F6EBF8" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="B95BC3FB8F940461" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="E962D5235C306987" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29718BC34CB01D74" />
                                                    <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="DE1D7BDCA52BCA9C" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3D87854FDBA5437C" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1050CE45BB8960A0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="959D3B4A8EF8651C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="E1FFDC8B039F9A1B" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6E52FFF7E4FC2941" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FBD04B8C3F53A4A" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6BDD2DC4F31BD60B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="C220A7390E1DA3F6" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F70EDEAF7A8FA72" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="7ADF2C4322548B3F" Deprecated="False" filter="0" group="General">
                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="C1FEBE387E497466" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="24B30561356E692D" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="1565CDA7E0227C8D" Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="391489CBEE2E9C72" />
                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="6E1F1FB282D9EAAE" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="A705CFD050BDE845" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="4E943BF612299BA2" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="C2A76397819AF52D" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="4ECD431C42333DAB" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BD727007F8E0E160" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FB45F909797CA2BA" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="E8A703849EF4A5A7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="object_state" class="TunableReference" muid="CD3C7539951C880" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="BF306D2DCA6DCB8F" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="12180246DAB6D6EE" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5AC5488B7818AC28" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8EF54EA2B6E56A32" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DDC7C026A1E76B6E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="71AECB199909E3" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="718F637F37CA9057" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5093586DC4AEDA32" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="CA92BB74522F78F8" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="2260B197EBB5AB15" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="C534E63B8E2597E6" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="574BDBB8D7EDE65C" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="5218DF35950CFCF4" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C575699FF7135C09" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="A43376337D4EDB64" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="D865314A49F36FB" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="6DC360BB24FE71ED" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="2DBE5801A665817D" Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="1861543DF678EF72" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B5F6EF1890227986" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="75E45D93F7C955D" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6971643B8F94A836" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="B130336BF7E599FC" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="CE39401AEA0EE881" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="9E3DF96849E607D4" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="9B110182CAFE3539" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F82EBE52A1443375" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1CEAD15B52C3B8FE" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="90B28578BA9E5871" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A511C4E99700A591" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4EBFD60A4827CE7A" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="852986E72F71FCB" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C095A4CB5D79ACFB" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6F591C1108E8D20E" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="CF0EA462CC7B534F" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CEF85581B170DFD3" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4053AC1A20BC42DB" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="6E352A07C61FBBE9" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="2A3684F535A42BEF" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="4616A4DF14B0B732" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="6EEB9D5682BEABBB" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="C0813E5507B9C42D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="8B1E48FF731D5E73" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="E3A9013229DB745" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="59BBD41ACE4E4926" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="FD6E693B0CFFA08A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CEC87C0B678DF2E9" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FBC7C731D9157DFA" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="957A1EC78074EE8B" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="479D424B9C1E79C" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DCF6C794A1CDAA73" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="12574920FDD48BA7" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8DEC9EAFEEA38093" />
                                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="4CA9DFCB6E41AA11" Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="BF7A82E73EBBF52D" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="7717B15211E54F71" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="B29D8F32EE75FD5C" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="738F6ACE5E7C3EEB" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="B67123A3BDD2DFEC" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="E55659A42E489E9B" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="710A6411189FE636" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4478BE9C55062E15" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="48A472D711758F83" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="7B48767822EB4F8F" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="2B79EAB299E35984" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="300193C867CC72C9" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EFBA7D922FD03EA5" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="FC53AD5989130F9D" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="913A19A361892234" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="138A9F613F5AB54A" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="EE0E05997EA02715" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="D0640E6C6263E220" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="613297B8FA590D31" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="46D4A7542046006D" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="841ED8768A112B0E" />
                                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="4EB10E854A01A592" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="88B9985026E481D0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="443C1B121DD89C77" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8F619407C8F7A9A1" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1689C8EA9FE83E68" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="2FA78F7721826DF0" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C0C1F6CD7A7F8C8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="98492DB242D3E3D2" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="58DF8309D206F7A2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB19AF06D60AEE5B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3E5AE4343F740358" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="29F4ECF971F2E9CB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="AA83FF7EFD5E760F" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="52B2F11140CF0585" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="60C14C8612E7C5DE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D07F102826ED2B1A" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EB26D79E25C971D2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C4F414319B41C990" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="ED2E1D840DED04C0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4DB3DB30721641FA" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="F801D3F8BF5A713C" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <Tunable name="none" class="TunableExistance" display="None" muid="B680BB3B7D151170" />
                                <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="F9D650B9F92CA6FD" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="A3FD44A8DA10A303" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="554D9CC831F3A955" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="7BE2F928DE024821" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="337A2092EBA86EBD" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="B4A8D5D437A3F27B" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="378478DA0F5193BB" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A7E857024F8F19AE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E520F61DD2539918" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="376764FDD371743B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B991818C6C361EDD" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="57E8CCAEBFE5198C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="17F228B61D306161" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="18114E4875E3C895" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="550220032E18771B" />
                                        <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="62809D972C42D1B1" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="82EAB670D1034794" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="CA93DC620B65D8A2" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="E5C60060DE899C3C" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="2166589D7A66A903" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="8E7A8963F118271E" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="1F53D7597904B968" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A8602E4B1069806" />
                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="768CF5840E38ECBF" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="E28DA4561C277354" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="state" class="TunableStateTest" display="State" muid="739856A314673D14" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="33CC4AF5BF341884" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                        <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="AB4CA30DEF7DC49F" />
                                        <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="497E4962CEDD9372" />
                                    </TunableVariant>
                                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="61AD08E260302400" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="7E0E352978C34FB2" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                </TunableTuple>
                                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="6201AEA9D81F4C93" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="2AFD3AB51331D52B" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="A9F215C1ECFB39D9" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="B0BB233313B0A960" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="3FDA00877D85171B" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="66D76DE21F9A2A18" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="66B4307E7ACC39BF" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="DC9A814DDD58FAB6" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="CA63BC180E74464F" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="D816EF35D035A9A1" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49B3D5B239269ED9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="6AF2FF877B5E1D59" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                        </TunableTuple>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="996021255185263F" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18A12A0FC2F122FA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="43DDB541D4D691F1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="2C7FE2EC9DB654AA" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="C0899D63093663BD" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                    <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="C6AEE6C93F7DBE43" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="E7CCDCFE610E566C" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="CB500FECD3CC7DB2" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="CD1CFC9DE39A4632" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F6FA57B958458A99" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D0E6DE0668BF675" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6DF116BB23BFDB66" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3C9A26AE7A0DF9C7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="1A23636D68F218A9" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="88E2C83BBD255C1F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6A3CDF3FDF2740E8" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8AA3960A386D8793" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="722A530EF87C88B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E278A660C021EC13" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7EA2F0C8D335C726" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="35DB308A3F943118" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EDDC0E9F67BD25C6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="445E6064B626807B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3024E54DF29D1A0D" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FCCEB208CBF31D0B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="862286015349899E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9830C631D89CA61D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5DA963B2621E2E80" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="A7742013A9852DE3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="F723BE63B1DC9852" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="4880FF837AFA047E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="20C16013A9BF49F1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FC4D4392F1C786BF" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6C9EBD80D17C6834" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3A65999D0A00699C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="99534D92940B05A0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C4E817D4EE529292" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="29C9C15084EA8696" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="561A507512BFB086" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EEC871D768A8215" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B1B15A7098F9B597" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B0C1E1B556C81A56" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="73192BEA5F5367D2" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="705AE5EB68688BD6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F57BAF2779459688" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C38BDFB208347EA7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BED8E3ECF11C7E57" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CAAE86B7D28C8A72" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C7ECD98DFF918D0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="276EA4F3A34033A8" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="47457F2311B599E7" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="89F5D692656AAB96" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="B08BBE8D7F10CE38" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9ACB849524C4D54F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C51EF57A3915C4C" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FDE8D236732B642D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7610973CA7D7354A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="54DAD137E5B1476" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C7CA53E37F4B1DB2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="527443835EDB1EAA" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2398E903EF45C1B6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="521DF07790A66CFB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BFA66471A655B023" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A5D6ED87BF741358" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="ECE053918EB08FEA" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8FB6C997C83E92F0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="35243F963AE44E6C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D03BF19AD5939974" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8315111519F66E1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E5F31C1398D2F0F0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7FE17A12FAC88DE1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FD7EF0B3D2D46673" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="3A2B1F44D1BEFBD6" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="99AD2DDA0750195E" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="20CE97C402CE6EDF" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CBE4AD770BBC297D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CDDEB3589B81890B" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EF0D224AE5F3C83A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E45C78CB7FABE266" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="B4EB277BFD364546" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FD4EBFC64667FF52" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8AC7222230629B6" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DF922F47281420C5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B52A2AE9DB8E60B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DAD859EB2BCBF5D1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="85927F1047ED0F01" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="BDDD7C1A558CF697" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C9EC328F9DAEB461" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2274372DD1224001" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FD00067E09E45836" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="53C8549386BE67EB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BD7F51F36978B0BD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="55461FBE24815A10" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="EAF4BD220CECBB92" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="F84C76238DA2B7EE" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="B722CFF1E9E2600" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="B54F6403BDD794A0" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6F72AC33D218BBF3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7CE0250C2BB1C230" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1DDB73157FE70D82" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7A0DF148BBB751E8" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="E1D626FA77AA4517" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="32261439F41489D9" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="42CFFBC619736EDA" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E5AFB0EA09919BB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BA37D5A215A30EDD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3E8F059B5D3E323B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7B20F240FE4262E6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="3CFCBBB83211E1DF" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7D4686197AD09C8A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C7F5BB9590C5F4F3" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8C9048D0511CE87E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5BDBE89BF370217E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="46BA7578A733FD63" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="315133BE968EDDF2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4485FA913F2AA55B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="FE3D4FCFA0630820" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="E5AB34D035C6C6E2" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CC3FA2CE00EACBA" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="68BCC00C47E0E571" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ECF639B7B5B12E83" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="766C8B16A8823D13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="1CD0B00346E489D1" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="78A781C385F9B593" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="B0CBBD42041A4AAB" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="EF6B9329E12F9DE4" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableList>
                                    <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="F68715CF90B4F7EB" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="1D80B237BBDB672A" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="13497456D9226DB1" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="64C1467EDB5F5C9C" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="6E513E2A18B6C23E" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="1C1DA4E479D80080" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="21254B8344962454" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="4FC959B7EED02B37" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="8F93AB1DA739FCCF" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableList>
                    <TunableList name="weighted_tests" class="TunableList" display="Weighted Tests" muid="677E7978F22D76A6" description="Weighted tests for the individual object. One is chosen &#xA;based on weight, and all objects are run against that chosen&#xA;test set." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="4EC7BD80711CD050" Deprecated="False" filter="0" group="General">
                            <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="B930FA454218E9AC" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                <TunableList class="TunableList" muid="972ADE49F7932904" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="5C37E172DAC0EF61" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="D4CF8510C9746033" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="A95EA30E0FFD447" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="4536BF376D64C2BA" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="7E130FBF573BBE72" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="ECC975F00FCA2CBE" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="45A2CB190616F004" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="DD3A50DC56115BC0" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="918B5897B4CF49E6" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="347B7BA3ED94CAA6" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5E21A39B8DF4CDFA" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="5A640B74D7BAF9B3" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF518B77314D1E81" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5ED462E26A1B76D6" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="6E58D8C650305E64" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="3A9F5375F54869AF" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="FC44BA4065721558" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="3CD4D8322C56FB71" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="FBEC4C735750D5E6" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="1A2561A8B4055417" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="8C7E2B6DDFBB85DE" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="DC3FE06FB80B769D" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="D6FD55D923589DAC" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="8219026162160895" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="C840A17E23BDD2E7" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8FABF8D8371DECE4" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D0525D6C0DCE3788" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5E0D12CE25CD736B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="127FD4D769D1EE41" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="3EA50027226CE0BD" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="8C069DB180D941FE" />
                                                <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="817EAF49B049D2E" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="CAA58923EC558A39" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="972086FA70A2CBEC" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="397CEE6489D3DDB" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A74EA969FB00814" />
                                                            <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="5A74B4A807CA3DA1" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="21FD884C0D5F8AC7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="528D30FC27B95A13" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7EB21F66743E9063" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="3F6662BB7D61EFEF" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="130718F7EC6D127" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FA3B229C83B01C63" />
                                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E630B627B335AD0A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="87DDDDAB1F63229D" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="8BF9AA26983C899F" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="C5E658004B902F4B" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3F7DA2C30911CC" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="B787A20569A2EFD1" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="192F2C3AB54B4365" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="650A1FA6C4C9E418" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="A8C2FB70A29F646" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="72D24E48494FED83" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="C1D420DA3AD6451A" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="BD4CC42ED65EC2E5" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5B48D8E2C16E4A15" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6948CE6752042545" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A8D59F7BEFA90C5E" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="C54A3946803A35AC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="81C47C507DF573C1" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="E6C8102BBFD36E02" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="E795E42B4115689F" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D42F78E8A51362A1" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="675E045105C37C5B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A6A02478AC00DB20" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="E1BA559526023849" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="671F3DCD5BB82C12" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="9CD72F50561FEDFA" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="B82B3084D628ACA0" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="B15DFF2A53B8574C" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="34015356DFC78228" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="837BD833A184FA31" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="1E22F93BB7EC18CD" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="31856DC444591875" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="719C930AFDB25892" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="C2A6C592954CA446" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="F249875AEA581BEA" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="6F58D5E46C48A9BD" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="F5E93A1700CCC94E" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F5BD59DA87A88428" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="16B97B78237186ED" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E25A76BFC655252A" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="38FB464A541D556E" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="B50F401F8F37589E" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="BF1549C4FEC29D24" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="CBEE219D2D44375E" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C4AD0D6E6407030" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="565BAC338B6641EA" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="B54E9AFE8764BBF8" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DB2A42C0998DA64D" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6C8BE84F91711A56" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="E0AC13518C20C639" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B772E479C6242BDC" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6DE808ACB545C7" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="9EAEB54F545CBC22" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D9ACFC75CE6B081B" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5E68807D96046E86" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="BCBE94C8D36AC6B0" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="10DB11EF6D4D9F2D" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="EA86ECCA4A574ED0" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="E4825161E4737C54" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="7FC9714577B97A14" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="C8233747B2D51EC9" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="8B99A448192E1845" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8BC32EEEE98086FC" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="531B289DF6C2726" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="25F4EC918064312F" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A7F1AED405B9E4D1" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="F7D444BE6FAA5279" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="42701C72C547F6DE" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B4519410273BB2EB" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="1C75B28E5CF1D8BB" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="709ADA8933566068" />
                                                    <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="EC824D17D1A76684" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="5A53FB9E3B9C904D" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="1944D61660D465D2" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="C31A2EB02F04F154" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="D22DC7FB4D11DC32" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="E7B6DE1718890F3F" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="8AB0E21623119C34" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="75591F61F5D3E17D" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="EFAE2231260BE3C2" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="644A488D6AA87BFD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="C281F080E358DEC8" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="76455E2D0017932F" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2FB1C7F05AF4224F" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C2B6EE5F64806A44" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="D42D3C99D51B8C2E" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="183F0497ED3A1721" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="26C3E1C3FEC7F1D0" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8B91C381BDD08A0D" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="465656F1D8095045" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="E05F1BE16D481334" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="F07511A82A476077" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8CF156863D53B7D7" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="C755BCB78870E971" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="43A3E647C8FA4710" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="519D808B967ABA65" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9D7E11EA61ED4052" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="78876D0DD5DF69D3" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="355E0F519A941448" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3EA219376A63A121" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="31D55ECAEE6E749A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ABB19672CA3787FB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="670962518D1ED617" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A387BA34B348580D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="154DC2CAE70D8138" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="BB8A049CC467B400" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DE474B67D18882B7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="507546C953CD4E21" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D03B55EB7E7A2F8F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="76A3744BAC56F91D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="369F735DE6892DEA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="16015A96A8815DC2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A6370C52E408A353" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="D4F5CE0D328F1108" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <Tunable name="none" class="TunableExistance" display="None" muid="FF94E01FF08ACD5F" />
                                        <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="51E4301A78EA944D" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="AD9E3E8FBD7F5D57" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="D8DBC130817ABE3A" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="9A60A7D7560642A6" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="56F1749ACDE5D6F3" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="9FCDDFB9639E8783" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F6180D5A046DB0FD" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AD3B8069D0CC9CB7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6098489C742AFD" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7BF47EF5059427A7" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B4199CDF919E603C" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7D26D0EB899BBC8B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="AE054C7F02677561" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="60C159F959D899F" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E287908F8A7E065D" />
                                                <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="CDA980BA5B8A1387" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="AF945B46FE836574" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="647D49E74DC93A64" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="189329589B78454E" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="B1F6DD58C65DC179" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="221BBF937D13E082" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="8169CA44E49F093A" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7040E83E55270516" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="8E33AA9614F879EF" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="E37D8790C741FFE4" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="state" class="TunableStateTest" display="State" muid="A438F94BDEF1B414" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="744A70EF25DB0EA6" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="454158F858CC150D" />
                                                <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="80FB43D78107646A" />
                                            </TunableVariant>
                                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="8D2B00DD1B9E977A" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="F310C7EEE435C636" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="F732EA5D67168D63" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="7D3C5B4FF5A72DFA" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="56CCF7406C5C3BEC" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="41E7D000469B79D2" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="CDB666C243448BAA" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="778BDA35C74E7631" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="BBB6D50210B236EA" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="961AA1A9F6CCB05C" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="A013AB9AE6F27DFB" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="37F1F940C856FBF3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8F839EE274644C04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="CFCB11975F026E51" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8C2B06E3D543D723" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E5AEBB0AB1E42D08" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A98BFC948DADF1D2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="176AAAD52A7DB18A" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="C5E07EFE17D0666F" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                            <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="14D065F628DA4390" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="9F1FB679137E85E8" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="BC8CF3096D380606" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="87558AFF70560099" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="10EA708D077D37CC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="61F90776B8CA6919" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E62352940773C984" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F44877BAEC64C6B9" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="F8582043B572BBB" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E37CA18AE9EADFBA" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CD587EBDC68CB929" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="271646E7CA8D2FF9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="56FE09CF400D7F96" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="685AF2B1FF4440A1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6D1C33E3DADE117F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="42CD674C887578EE" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5DA380A8B15E31EE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="14EAA60B671BE2E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="36C6D80AD64B0C94" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C518CC9B529BFD3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18A3809CE999E4C0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5F70EB2543CCB1F7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="2638E530313E77C9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="10AEEC4B24BE5C76" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="FBFB405CF625676E" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="AA3FC1C1470DF4B7" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9522F9AA76C63A1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5DF8C6742561C106" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5B33991A854316DD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C073E482BE34EC0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="1E0D8D115173C1FD" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9D5753089EB063D6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B1F2CECED103B884" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="524E6286E8E7C1FE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BD92D45B7B6AEFA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AC5065B623713861" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E91B96A0FB3C110B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="AB840CFCABB382D6" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1C893613DEE7820A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B649A51616517A46" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1564D7F6733708AC" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E1CBC1F1CBD4A78F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="321B7E945F972A13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5D06E8F06C4D3B64" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="34F19C06C9E24E3C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="C769C99A9570125" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="1F9574156EA77C3C" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="18B907B8245D0557" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3347C85A5EE14CEE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="147A445AEEA4F18E" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F874E031545A77D0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A53EFC2B305CA474" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="FDC6A1BF7453C24A" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="599D50FA95648987" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="268432EABA5BC3B7" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="71A7B1BF685FF8EF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="968661E24B638B53" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8FD3DBF77DADF9CF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D5F68B11E899857E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="318474E3FB3D34C2" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3D47F1839A5D134A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8ACB7BAA11D4759B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B3EB6E1E89044747" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B5DD6435FA8A2367" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3EA6AA9C952FA312" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="331285C1BAF3F25C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="306D687FC5022E47" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="4CAEAB0DD2EF59A6" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="CEAAADEE93EBA434" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="895FE1DF213F482B" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="66526BDEB0B8C168" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4619497E4CA9CAFE" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6177AD2D1959AA62" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4D3E54248B8EE0D1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="9F607E6BB66A6D1B" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1086E011ED3F0EBF" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="697D891053663222" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A97AB55B0556B29" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CE7FACDBBB3FB68D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8B5A26F0158EC124" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F0E72799290BACA9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="193C7CD3A6BABB0B" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2F4C348A935A9DA3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5688C7E936037254" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="85D991FE59D7F9D1" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8A10D3A3D8F2911" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6B4333F5F9F5D86" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D4A931E65080CA2A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="39ED2187291F38F1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="3588E480F494DCC8" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="602B0026995336C3" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="843348B06CA6A27B" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="FC72787764FD556F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E22FF284D3E8617F" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="78667ECD82218AE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="813DF94837991F07" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="C80913C6657CA9C2" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6922EBD9EF05D6E2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="916294A04F91113" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EF838A1B357391D7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E4BF81458D1425C2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="437BC21D6A53C633" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A07D9AA88C0DB884" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="257EC39E74797781" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BE77CE02FE6B1F0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="33415A48EE1F0141" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A164D0AF8D1D4EFC" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E4F865750BD4EA8B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="706DFDD75396DD84" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="181DAFEC410E165E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4CCEB64B1A2ACDEC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="23A24DF5451D505" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="E76A57B60DE74820" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D4478EFF45544638" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="2C9C61E03B559108" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A187A46A4A7C761A" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AFBE85F1F7B09597" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="40A61554E4D4992" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="2F7E6B705FA6261F" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="FE853D54C745E80B" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="7936AA855B7A00FD" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableList>
                                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="7E7926A727ADE61" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="4453EB491D765CF5" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="1DAE1B0E946FE678" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="E9CC515DD41C024F" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="BB409BFBCACEF713" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="8BA88D659E7CEBD6" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7E821F5A7E65B341" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="EF701E365CEE056F" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="E0E2EED4E93BE7B6" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableList>
                            </TunableList>
                            <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="C8569E1FFE51E74C" min="1" max="None" description="Weight to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Deleted name="force_invite_only" muid="1FE8D665223404F4" />

        <Deleted name="goal_button_text" muid="8C3D43344B90B187" />

        <Deleted name="goal_sub_text" muid="1E8B1124E03438ED" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="50377C1F7078B0A5" />

        <Deleted name="job_display_ordering" muid="98183393269BACB6" />

        <Deleted name="main_goal" muid="AC22842281F28478" />

        <Deleted name="main_goal_audio_sting" muid="EA9F6EA8891A391E" />

        <Deleted name="max_participants" muid="CFAFE6C13313379" />

        <Deleted name="minor_goal_chains" muid="A39D53CF04B262AF" />

        <Deleted name="recommended_job_object_notification" muid="F9444F533E55C9AC" />

        <Deleted name="recommended_job_object_text" muid="E6951520D3A45CFA" />

        <Deleted name="screen_slam_bronze" muid="4E7E9385A6E0096" />

        <Deleted name="screen_slam_gold" muid="518141D9DBD1B0D1" />

        <Deleted name="screen_slam_no_medal" muid="FBC1F1F7C75A52CD" />

        <Deleted name="screen_slam_silver" muid="DB504773DB3E280E" />

        <Deleted name="situation_description" muid="FD0E6D152CB03427" />

        <TunableTuple name="skeleton_job_and_role_state" class="TunableSituationJobAndRoleState" display="Skeleton Job And Role State" muid="DA77D4DBD0ECB021" description="Job and Role State for the Skeleton Sim in this situation." Deprecated="False" filter="0" group="General">
            <Tunable type="role_state" name="role_state" class="TunableReference" display="Role State" muid="51902F39406CB1E5" description="A role state the sim assigned to the job will perform" allow_none="False" Deprecated="False" filter="0" group="General" />
            <Tunable type="situation_job" name="situation_job" class="TunableReference" display="Situation Job" muid="706CC6BCC7081191" description="A reference to a SituationJob that can be performed at this Situation." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableTuple name="skeleton_spawn_point" class="TunableDynamicSpawnPointElement" display="Skeleton Spawn Point" muid="D56528113404E94" description="This Element will create a Dynamic Spawn Point which is registered&#xA;to a particular participant within the interaction. It will be&#xA;added to the zone and available for use by any Sims who want to&#xA;spawn." Deprecated="False" filter="0" group="General">
            <Tunable type="bool" name="allow_spawning_on_non_world_routing_surfaces" class="Tunable" default="False" display="Allow Spawning On Non World Routing Surfaces" muid="DB3393DBB86A0C7C" description="If checked, this spawn point can be generated on routing surfaces&#xA;of any type. If unchecked, it can only be generated on world&#xA;routing surfaces.&#xA;&#xA;If this tunable is unchecked and the participant is not on a world&#xA;routing surface, the spawn point will be generated with the world&#xA;surface type on the same level as the participant." Deprecated="False" filter="0" group="General" />
            <Tunable type="bool" name="attach_to_active_lot" class="Tunable" default="False" display="Attach To Active Lot" muid="2A9CAD6F29266391" description="If checked, the spawn point will be attached to the active lot.&#xA;This helps Sims who are looking to visit the current lot find a&#xA;spawn point nearby." Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="distance_to_participant" class="Tunable" default="7.0" display="Distance To Participant" muid="DC98E97836796CE1" description="The Distance from the participant that Sims should spawn." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="5D5AD53834494B86" static_entries="interactions.ParticipantType" description="The Participant of the interaction that we want the spawn point to be near." Deprecated="False" filter="0" group="General" />
            <TunableList name="tags" class="TunableSet" display="Tags" muid="D8C5C80CF16D470A" description="A set of tags to add to the dynamic spawn point when it's created.&#xA;This is how we can use this spawn point to spawn particular Sims&#xA;without interfering with walkbys and other standard Sims that are&#xA;spawned." Deprecated="False" filter="0" group="General" unique_entries="true">
                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="BC831184ECBA700" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
            </TunableList>
        </TunableTuple>

        <Deleted name="suppress_scoring_progress_bar" muid="221C41CD487BA63B" />

        <Deleted name="targeted_situation" muid="5502218C4286D0EE" />

        <Deleted name="travel_request_behavior" muid="AD6A587CDC5B2A1F" />

        <Deleted name="venue_invitation_message" muid="2ED8AA3B7704FA3C" />

        <Deleted name="venue_situation_player_job" muid="59B1AAA8B798AF3E" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="66F58EF04B750EC5" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="E4D5E61B6C87C044" new_muid="9F6533873B7575DB" />
        </ActionList>
    </VersionHistory>
</TuningRoot>