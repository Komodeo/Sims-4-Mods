<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="snippet" class="ScenarioPhase" module="gameplay_scenarios.scenario_phase" muid="4383A6FC91B69121" description="Container for ScenarioPhase data." instance_needs_reference="True" instance_subclasses_only="False" path="Snippets\Descriptions" use_guid_for_reference="True">
        <TunableList name="goals" class="TunableList" display="Goals" muid="6BA07C87B705A38B" description="A collection of goals that can be either independent or sequential.           &#xA;Each item here is a list of goals that needs to be completed in order.&#xA;Each list in the collection is independent of each other." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableScenarioGoals" muid="55313E9A63557B0E" description="Data containing goal sequence and its reset condition.&#xA;Add only one goal if goal will be stand alone/independent." Deprecated="False" filter="0" group="General">
                <TunableList name="goal_sequence" class="TunableList" display="Goal Sequence" muid="7EA28AD1013D5D4" description="A list of goals which needs to be completed in order,&#xA;based on which each goal is defined.&#xA;Add only one goal if goal will be stand alone/independent." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableScenarioPhaseGoal" muid="B45787ED2B7FEF66" description="A scenario phase goal." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="goal" class="TunableScenarioPhaseGoalData" display="Goal" muid="75B007A1B9485629" description="Data containing the SituationGoal and any additional data about that goal specific to the scenario." Deprecated="False" filter="0" group="General">
                            <TunableList name="goal_loot" class="TunableList" display="Goal Loot" muid="788CC79EFAFDAD67" description="A list of loots to apply as a scenario outcome." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="ScenarioPhaseGoalLoot" muid="FF453048F3767B93" description="A collection of loot actions. Use loot_with_scenario_role for actions requiring actor as subject.&#xA;    " Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="scenario_loot" class="LootWithScenarioRole" display="Scenario Loot" muid="44B711BF15A79339" description="A loot action and a list of targets.              " Deprecated="False" filter="0" group="General">
                                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="AD50D2FEC6DF2F4E" description="The role of main targets for the loot.&#xA;Leave this empty when loot subject is something other than Actor.&#xA;Loot will be applied to every sim in the scenario with specified role.&#xA;Useful for applying loot to the household as a whole by applying it to a role that only one sim &#xA;in the household has." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="1F17A63FDF2EE4A0" description="An alternative way(to actor_role) to access sim_info for the tests requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                        <Tunable type="action" name="loot_action" class="TunableReference" display="Loot Action" muid="7D1EA08B5140C5F3" description="An action that will be applied to everyone in the list of targets." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                                        <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="BB3486FDC5AD903D" description="The role of secondary targets for the loot.&#xA;Fill secondary target only for loots requiring pair of sims. Like relationship loots.&#xA;Loot will be applied between every pair of sims in the scenario with (actor_role, secondary_actor_role)" allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="223D4FE712AEB343" description="An alternative way(to secondary_actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableList>
                            <Tunable type="bool" name="hidden" class="Tunable" default="False" display="Hidden" muid="89F47D2BAED0CDA2" description="If checked, this goal will not appear until it has been completed. The&#xA;goal must still be marked as visible to appear once it has been completed." Deprecated="False" export_modes="server_xml" filter="0" group="General" />
                            <Tunable type="bool" name="mandatory" class="Tunable" default="True" display="Mandatory" muid="8B432683673A2686" description="If checked, the goal must be completed in order to complete the phase." Deprecated="False" export_modes="server_xml" filter="0" group="General" />
                            <Tunable type="ResourceKey" name="outcome_header_icon" class="TunableIcon" default="None" display="Outcome Header Icon" muid="6A3C87F4ECDF04D0" description="The icon that sits next to the header text for each goal&#xA;in the ScenarioLivePanel." allow_none="True" Deprecated="False" export_modes="server_xml" filter="0" group="UI" resource_types="0x2f7d0004" />
                            <TunableEnum type="Pack" name="required_pack" class="TunableEnumEntry" default="BASE_GAME" display="Required Pack" muid="2FA00B5B62BD81BC" static_entries="sims4-common.Pack" description="The pack that the goal may require." Deprecated="False" filter="0" group="General" />
                            <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="16D00921346784B" description="A SituationGoal." allow_none="False" Deprecated="False" export_modes="server_xml" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                </TunableList>
                <TunableTuple name="sequence_reset_conditions" class="TunableTunableScenarioBreakTestSet" display="Sequence Reset Conditions" muid="C62B34528C8EC839" description="Reset conditions for a goal sequence.&#xA;If any of the tests in conditions list pass sequence will be reset.&#xA;Only one test pass is enough for sequence reset." Deprecated="False" export_modes="server_xml" filter="0" group="General">
                    <TunableList name="scenario_tests" class="TunableList" display="Scenario Tests" muid="9883A48D30D4B976" description="List of tuples containing a test and actor role.&#xA;Intended to be used for checking events that may change status of scenario.&#xA;i.e termination of phases/scenarios or resetting goal sequences." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTunableScenarioBreakTest" muid="792D9CB7E2A7B0E3" description="A tuple containing a test and actor role.&#xA;If actor_role is set the test will run for everyone in the scenario with selected role." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="scenario_test" class="TunableTuple" display="Scenario Test" muid="4A064093E803B43E" description="A tuple of tests and actor_role.             " Deprecated="False" filter="0" group="General">
                                <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="5EE4536E3C638899" description="If set actor_role is set and target sim of the test is actor;&#xA;the test will be applied to everyone in the scenario with selected role." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="2AFCFD453DBD8566" description="An alternative way(to actor_role) to access sim_info for the tests requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                <TunableVariant type="None" name="test" class="TunableScenarioBreakTestSetVariant" default="buff" display="Test" muid="8B6B89B0AA72C39F" description="A test that can be used in various part of the scenario.&#xA;It can be selected from a pool of tests that are put together for scenario use." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="aspiration_track_completed" class="TunableCompletedAspirationTrackTest" display="Aspiration Track Completed" muid="CC6D0D06ECB07064" description="A tunable test that tests if a Sim has completed an aspiration track." Deprecated="False" filter="0" group="General">
                                        <TunableList name="aspiration_tracks" class="TunableList" display="Aspiration Tracks" muid="EBCCF04D899C835A" description="A list of AspirationTracks to consider. If left empty, the test&#xA;will consider all AspirationTracks." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" class="TunableReference" muid="865E32C96A4166F1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="levels" class="OptionalTunable" default="disabled" display="Levels" muid="6A31F9BD20CA93FF" description="If enabled, the number of levels that should be completed in a single&#xA;aspiration track. If disabled, all levels in the aspiration track&#xA;must be completed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A4E344F6EC529791" />
                                            <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="90F1417806B11D39" min="1" max="None" description="The number of levels that should be completed in a single&#xA;aspiration track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="D7140BC9BE34C39A" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="12B02211902C7078" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9DA085068789429F" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5D1F940D50A5FD0F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perks_test" class="TunableBucksPerkTest" display="Bucks Perks Test" muid="59859E0D6BF6104" description="A test to check whether or not a household or sim has a specific Bucks Perk&#xA;unlocked." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="5687ED0854CCA859" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B829429D430B3A3C" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="9D6748B741D9A5BC" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE9AC9DA1B46FA4F" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="E69D790B7E9AB10F" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="95E1D2BA91EA2C56" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="2277864F185F883E" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="CA4CFABB1F61F83" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="93B4158F9B17ADCD" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="D321D9BD02805AE7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="1F4967C0D5B3F989" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="6872EDE710AB545D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="EAEAEE78075E08F5" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3CCFF22FCB3D5B47" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="635648AADB20E2EC" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="A99977E59BD8FC18" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="8F14A2E67D2ACF75" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7BE6468EE5E852C0" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="B07F7229838B5EC5" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="CE407CAE69BEDBC4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="300CC53307A05BD2" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="AB7CD712C4C0A50A" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="394CD654FD68949A" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="743C11FE69C27031" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="33357AA2850E620A" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="91CB4E20E256599B" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CFF817E0DB3062B4" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F0346A58F6E0E1E" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3B75C820DF9D7ADF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="892979AFFCEE555F" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="FB097E63C06560FF" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="79687CB900B351F0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="85B9CA9838D5F0D4" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="DC193D0A44431786" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1720BF84B2684F9B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="F77F26CBB32049C9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4B035E8AC0423654" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4726A0C4BAC0B637" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="81DAAF0EE76B46A7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EE41A36A55BAD073" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FDCF0A50B7F37943" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="34523D2DDF720CDC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="1907EA180ACD528" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DC74D8E544C2845A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5557275392BEA995" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E8AD3015D0A47C5A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FEB348045C55FDD6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2C9CF090A96F26BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="926B866FD2689AFE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C99F5A17AAA9DAC6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="7FB715C1DF68DDE6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="237929E050DFD6CA" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="34FE461395C7A520" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="570601EDB664E8E5" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="78F6A1D4978C030B" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="509A3CA60D2BCC6B" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="8F98BEB5CEEBCF9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="B715D4225F6E2CE1" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="B7F2575B04974BA8" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="14E8E993A6668A75" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="43BB4F9E204C7070" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="893786E9EF966EA6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D278BD5E92F0E237" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="67A5FD2201B6FDC8" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="12CFB04A06232531" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="9F29B633B01C8B04" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="D2C0E876C8EBBDDF" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="E51CE0C64C715D7B" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="5AA133E11707447" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="9714819BDF41B876" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5BA75FD4EAFF2824" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="6D0CB7BA8F9D26A8" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="79FF12F1A1F48C54" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="2723860E2B3159DB" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="6427300EAE8B8003" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="BABA1382E1F5F3E7" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="77705C3353E706D3" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="A5FB3A6A547521A8" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="9E15519F3161A9B4" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="4E916AF888E326C1" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="CE6FA1FF8557BF2E" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="D41905487621F0A3" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F35B25FA53DB6B93" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="77C6A8C9CCEA0168" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="F9FAEA91FCBF083E" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="352D33362DEF324E" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="CD18B98C1A283928" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="703A03E51DC53ED4" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="246ED456511655DB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D0C0BD391FF25B16" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4E063BED18CC62A5" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="9B877E44AE43D21" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="FAD9005428D86322" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="B4DAEC8EC6F8573B" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="12709C659C2A9A06" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="1B00B8DEBF64CBE0" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="E2540028D191F7EE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="917714DE764364B7" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="8C20A5660CAB133F" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="6CF4C61CADA22ABA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="A6457BA581BD6090" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="2A743F92DE06A914" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="979EAD092EC24A77" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3B4222DFD56F960A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7A93B0DC1BDCBCF6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="9BD94ECADAC06F9A" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="BE72D33D00C12B34" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="408AEA853C5142B9" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="A6659D7EE3C68645" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="BC4752F48BD774CA" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="24C0DFD779CC63A6" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="F98E84E59C76437C" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="356E5A459D1729AE" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="3D16A2D526319C19" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="EB180BFA21F1D30B" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="4D7A9FDCE09CD02C" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="791B68B3D96F8254" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9D73D8082BDB7357" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9F6DEE760D97A7EF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3D3F133700F34941" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="746A568C78B7CABE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="491E04399FB3944A" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="24F3BAF831E08F59" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="22BE62B6FB2C4A5B" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E9CC69930733E548" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4D33660EE3E7ED55" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="B383DDE14020C33C" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="BA64EE9BC8547A66" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="90C16EDBD871DB9D" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ABC8DEFF7CBF282A" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="476BBF26806EF750" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="EF2B554E31317282" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4E1936DE7177C087" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B74AA8101AEA07F6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="7A016E791DFD33A1" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E85D0163A3D9EA01" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="2FC853DBA92004AB" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="6E3A33503E41E73B" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="A5B4D04E41CFEA00" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="8A96309B0509CED6" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="7687C0F61D0F7DF1" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="88AA6798AE282EAB" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="2DA64AEFDD19F416" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="F924F0594ED38157" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A57302E1A3D0E0D0" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="C9B0FA4B4D77E04B" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="A04A315D333FF271" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="7B56F03806556F52" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="7FD4BCA6702723EE" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="307D89714A8A5557" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="87A40F99934CD88D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="406618461C1860EA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2B98999F4431E65C" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="351BF92A47A660B3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="6F19A5760A4456F1" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="8ED7C03A9398936A" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="1CCB50C6CC992F71" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="4BBFBC237020D1CB" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="2F1AE20443BAF74F" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="DC96690CD49CB04B" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="CD0454FE8AC6C8BF" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="99CF5C5568CD75A8" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1A35370E01272C16" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="EE955F8F9FC6B225" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="F4FCFF2848F96EEE" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="487270076441185B" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="38763D5A385E4FEA" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="777EDDAB882F207" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6C97862B8A9C52B0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="BE8D525519FC0E89" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="37398914C5038B95" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15DB7BFC8C0BC3D8" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="40B6D6B0B61681CD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="F002677807229C3D" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="ED7BAFD329A1EA6E" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="65B9B2F4A018A483" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="1268A3A7CF4D103" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="782C0F9B934A74B4" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="AD804D2FAE304B4F" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="429FD3935E3AD48B" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club" class="TunableClubTest" display="Club" muid="AD0DDF3F6C3344FA" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="15BC63B8C3C34F45" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4EFC7DA90A999748" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="93A879F9B9690617" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="FEF959E4009D5976" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="B6D197AD3A134B56" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="F7DBCC1AA642B35B" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="733D59FAE31B148E" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="9673B4FF647CFEF5" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B49813CF05BB7D87" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="62AF6B0CD20A6B5" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="221C00E94AE29213" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="937344B88606D3B3" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="48F7A116EFC0FEFA" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="EBB82B33F38472A6" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="5EB7FB0DDDFBE26B" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="C89DD7709C211CAD" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3C3FB740E888A36" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F6E2197335C69F9F" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="5C7C0136933277C2" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="83A643F968377778" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8AABB0ECF95B2FAD" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="69E0DF6E8621F9D6" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="CB0D23D2E30F804E" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="825E544D18747DD5" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="14A2306B05E9F929" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="B5E993236966C65A" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8C27672D35A8BB4" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="BCEF4120F170A189" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="63A18C8782C087F8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1B394E9D2C324E7B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="E222A7788FDF9BBC" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4A142BC492DD221" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="D9C03E0B7BC84DE2" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="B7C32B985745091C" />
                                                <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="BEDC6F0D2D03FF7B" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="ADEB9F6E19EC4897" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="496DA18CC2FBCCE0" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B8BE6CB18766CBE" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="897FF839232C755F" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="43F7A8EE1A1C0530" />
                                                <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="1E01602705C1E738" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="153EAF47C379C773" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="C8D6451D9F75140A" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7DFADEB6C7A31606" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="5E1124E0B599BCF2" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="48F20A5A99315C54" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="87AF8CFC2BB40F90" />
                                                <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="48841E6DD19012B4" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="759BD4B2C87C1049" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7C871DB11365F352" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="EEAE5601B49DDAE8" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="E15912059BA508C8" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="B949E28EBC2B5718" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="E4163E98B672F13C" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="D9D49699CC21AB6F" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="542CF06F7A7D130F" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="94F130BD90E96B35" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="899975D0F09A4176" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="4F80435EEEB5145C" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="18A197FCEA2289F2" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="459672A22835524B" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="88076753F449DC34" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="EE56DEF733F2A791" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="F7C466E51DCB81CC" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="9F25CAA8506F8E32" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="52F8D08C1A8990F7" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="5BA2DD4132D6E94E" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="310A088E9374C251" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="1276CAE230FF8D5B" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="93E238204A0D996B" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="EC616B4FA228DE67" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="83840F8F7D32580A" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="8A49FE4394F8C08D" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="7853CF4EF6331E17" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="323BF713B77DAEAB" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="8BCA8C66392DD37C" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="8734E6DF392BDD48" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="9C59E5FEFB45B6" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="A6AF0B97D944AD3D" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="dead_test" class="TunableDeadTest" display="Dead Test" muid="FE6C8D0FBDE2570D" description="Test to see if sim is dead. It is true is sim is a ghost too." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="8DFB0434EBBF874" description="If true, invert the result of this test." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="F4875B3724E77D71" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="E064D99070D31FA5" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="1E1931330837E743" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="90B6DE493E8DD892" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5FFF053801DCC665" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="A0CEBE42C7956465" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="AA54FBB43009168B" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="5FD7D1848E3EC3A4" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2547DBF6D91DBC7B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="3BE37311F5AA8018" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="37298E1CFA75DF93" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="7C506B5795D00957" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="D1AF7924B9809C6B" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="910D3EC95427AD1E" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B86DDD240B94DC16" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="ABFEE335FD34AE54" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="61EFBFF31C1F8CCA" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="246404AC3C4DA931" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="7A7B466F9312E4AD" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="F8694BE74B1D6153" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="9610B4377105E013" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="5B95E16DDCF922DF" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="71365F481C0C922E" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="43C84ED703D23D81" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="2CA790DED8A01CFB" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="BDC16C244F25F2E3" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="D1B08532C9DBCB83" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="307DF07135544AE2" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="CA7A59E74F50420E" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="4A3FC6D4D1C06747" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="8028CBBACD66701C" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="58CBB7311CDB74CA" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="865DE3A4FA7D3822" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="353CA84FF5A002F1" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="8F66098E54CEDADA" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="F2469F6D7A79F290" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="200813B6055532BC" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E5767948AB30A922" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="5AA76797CED33C71" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="12E8A48D1A93B192" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FFEB00FFEBAFEF8" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="3CD0F65875531745" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="9D23BE2BF7C7A92A" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="9BB5FD6F08728F65" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="F51C743DFE0B958B" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="A94D4167607CC56" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="6863513D8A5F99BB" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="6994E6A78D0774C5" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="C4B8C6910A4AD13E" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="CAD7CA351159B42F" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="F99ECE468A1AD711" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="B60C5FE37E876C05" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="551437F454CF646E" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="97D5B6A7A6AC37D5" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="A3CD525231BB8A67" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="25935427D66D1AB1" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="84BF82755D29EC7F" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B41BF8591146C7A3" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="F766BC5D7B37FAC0" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="57F0FC9D648592B6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FCFE2F0C69CE7938" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7CB9B73167E61E48" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="781823F4EFD93F7B" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F1188D76819C4F26" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11F2243AB679A635" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="ACEA10C0072F4336" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="4AD1DFFDE0B9DB7C" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F5C451232EDAD49D" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="D9DC7DEC43C004EA" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="32116891A4B79094" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="D977D34072C56EE" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="17712364A9ACC3CF" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="E3A62C788BCC6813" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="333D3CA884B64E92" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6D76579C835DEB08" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="6110E8EFBCE738C5" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="901E8AA602DC6B2B" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5E0A45F9A68B44E6" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="668F0EE78BDF3B6C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="586E9500F4A43554" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="5A5E45B7CFFBC76A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="4F1DAD36B3108EC3" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="4DEA4D61DBC76AA5" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="C1D4B6113F673737" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B17643994DF2AA3" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1B7DED06F5520908" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="57111BDE5FB907F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="59D7B26DCF17FE0B" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="3ABE9A1509ECACAE" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5A0E55FFE9D21296" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="B1C8EC926AB64D87" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="33A3EDEAED5A09FD" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="4618C18B77B2AB41" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="2B5A8D8AE87F19EE" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="7F5177B789178303" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EFFAC1A66BC60C3E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="30BDF437CCC6CDF3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="C8A25221F4D2F245" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="6D54AFC83A289A9E" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="6F9D04C79BB4384F" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="9F08880677FA546B" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1C26E5F5D335B50B" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="AEE42FEC009AEBE1" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8B4463ECF698D9C4" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="8FB38E292DE183AA" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="1CE09D158D0EF5DA" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="78A75D0481555467" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="39828A558E16A870" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="149658CBAE2161E8" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FAF0BABF5B785B10" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="46CA2680A30E7358" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EADABF40149B107A" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F0016C4E2CA49B6A" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="33D720811E17155F" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="50124C1E513FC31C" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B119AB5838D165A5" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="7732EB959423C50C" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CA0099CB777341D7" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B1148C9801AEC35A" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="E434ED53972BA70" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="619DF10ED73221B0" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="29D792557CE8BCF6" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="78E2A7344A62EEEC" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="DF179565F7D1F54D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="43EE0CB4D2137D4B" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="D99A4E7BB2E95118" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="38E18AF30086EB17" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="6DDC9AC9749F77B3" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C9F4445176B668F6" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="48DB4C3E38C2A5CA" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="6426D8A1555E1102" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9A2ABF73B929D5EF" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="28B69079488849E0" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="5DD48321E8273B65" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DE5DB8785E4C75" />
                                                <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="820875D60788C524" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="EE4532396E5C3005" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="807FBD698CEBF910" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="F23B81D2FA0CCFA2" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="992542E1692C122B" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="1D446301D5BC3426" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="5168B2CE85938116" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="31B8DC0ACBB23224" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="FB36B4A44939D80E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9404B888D5B3DAB6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="D7B715F40E523600" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="CC87906DEC4F4F62" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E7E9DB79C4B5FC7" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="72FFF1F4721FE00D" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="C9D752CC07A0C231" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="26C94B5D7B063494" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6116D44825F235BA" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5B2918493BD8AFA0" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="942670E7151BA08E" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="8512C5431B2D7964" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="14703EF54C595EA1" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7DC4553DAAA8FAC" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="856FD7F84A386CFE" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CFF537B1D03E1F4F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5FB9D7A5B4AF7118" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9180F18E7E79A2CA" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="47F167EE5D414ABC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="1A569C8C0E904362" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="24CB9D4EC04E34CD" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A695C31432D7EA7A" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2DDB6808FEFCE952" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CEF2656583AF540C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BE8E50688FA78380" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2D37731577E91A6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="97CF4BA73C921AF7" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1F32E89118CEEBD5" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="47E86902292B9BC5" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="81431EC4676486DD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DEB8ED95DE22ABDA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="880E7446BC11FB55" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="946BC5A3F6D96644" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3EF8F21B82F27C26" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="9A49D2E1E604E721" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="D9E3EE3DE82D5243" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="EC26D9C3DF0F27A0" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="11D5648D10510F1C" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="7E50DD1A4F433611" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                                        <TunableList name="stats" class="TunableList" display="Stats" muid="F389E60A1DC47702" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="4A041099D6686F1C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="85671D897B23FFAB" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E72B4EE973D51BF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D1470A575D2D8F36" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="AFDFB0540D77DAFC" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="E8EC5DA9C69271D" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="663F4329FC9E7F07" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="764E4152B8293147" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3B4A559E6130D4E0" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A35F20726562A29E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="7F842917BE1170C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="5772F28662116211" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="BACC1BDEC88A1B39" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="3EB35E763E51D7D2" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="F9D1E2C56AF45A14" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="1E1E2B309784AEBA" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B4A2417FF7EE8EDC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9956C19FBD82F878" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="503F0270A5416A55" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="A5A1C34490B7166F" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="E7BDE9E1ED35794" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="9C1426EF9B679092" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="E27B2515C398E7F6" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="80F2AEC43B345F7A" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="44CD4A610ED2049B" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="D5A306D074577C2" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="28C5608416C83EDA" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="F4587EC34E4B0115" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="4F8F853B4DAB72B2" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="D91578C65A573838" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="35F1FBF6840E3EE1" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC63E935E134F48" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F6F03CAAA17E0EE6" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="61696F77E2A929DD" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="917B6B0FC78F3E4D" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="48FAB4175E48A467" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D4F20D1ADC1ACE97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="899F4B7FD7320867" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="3191667D6D715154" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E715FD41BCA28F05" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="25FB9BF3D6CD0F36" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7B05D18B3667EF96" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="192E86EA3B99CC86" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="DAB736D3A48D171F" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="87400A9F88554190" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="20AECBAE2B1BA2F5" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="E46A64E065C5DAB9" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="AC5999551AEF7FC2" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="35453E57CCC709A2" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E6F12E45EEC5DA08" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="157DBAEB023DE30F" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="487F8951911AD1C1" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F58E9DB88A3391A7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="990B376773E5B25" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="D792EF6F806768F8" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="211640A116B1E7BC" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="BF92D7A9776EE64D" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="69CAB2F1CB9F5CB6" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="14C884D3ADDA5715" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="A61E16D69AE10979" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="75F29C5E7E37B885" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="1A426D057230BB18" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="18D4ED7D805F51E" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8BBBA850B4EBB2D8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="65D82BD8C783AF9B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="5F3D412605ACC686" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="B63DFAF6BEA139A4" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="695D8632C3ABC20E" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="92DCA2AFB94E3178" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="42B14C93682504CB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="1ADF91091A7548D5" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="59E92E3408A8E82B" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EF8063A9B3B52C58" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7F571C3141B83BBF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="satisfaction_points" class="TunableSatisfactionPointTest" display="Satisfaction Points" muid="9EFB9CE460F04329" description="Test to see if the target Sim has a tunable threshold of satisfaction &#xA;points" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="AFDFF6EAC2A7F84C" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DA715EF8E9537D98" description="The threshold to control availability based on the statistic's value" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="10933DA6686AB812" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A9BA7ED497FF5378" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="scenario_goal_complete_test" class="TunableScenarioGoalCompletedTest" display="Scenario Goal Complete Test" muid="93D3B1C576243748" description="Test if a situation goal is completed in the active scenario." Deprecated="False" filter="0" group="General">
                                        <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="C386EDA16A51587" description="The situation goal to be checked if it is completed in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="EF2F9D30553C9491" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="D5C8619D690E5C7B" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="89F7DE14CD0F6944" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="1426C044C020F51D" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="4CFAE825A902FCAE" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D83EC4A067A87057" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="95921B2A0B6FDBDE" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="87A38F2C3960397F" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons" class="TunableTotalSimoleonsEarnedTest" display="Simoleons" muid="8E31CC9C48C012AD" description="This test is specifically for account based Achievements, upon         event/situation completion testing if the players account has earned enough Simoleons         from event rewards to pass a threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="SimoleonData" name="earned_source" class="TunableEnumEntry" default="TotalMoneyEarned" display="Earned Source" muid="F3C46B8F7610A00A" static_entries="event_testing-event_data_const.SimoleonData" description="The individual source that we want to track the simoleons from." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="58697259E5163420" description="The simoleons threshold for this test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3334E0201515B0BA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F2E8AA5CE40BA226" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D17CCE6D0C1DE2AF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94FA028BE61DA5A2" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3C80631744B474E3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="2633D656C9E5F49A" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="C30FACE627C80570" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="12876DAB22A7E434" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="539A90BBB2CD52A9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="8CDA3537D90EB3E3" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4B5A41860D882564" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A0C87FA4D10CB500" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="73D68CDC4B452D48" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="state" class="TunableStateTest" display="State" muid="642D0F552ED2779B" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="5F428D4ED7D369CC" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                            <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="2DCFBE439F07EE51" />
                                            <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="AFD7E0AFD1B23509" />
                                        </TunableVariant>
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="7F1C82150862845D" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="EE4817BDC7BB1209" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="285B2E1BA7D5A90D" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="EE0E80615B67DF6D" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="41DA36FBBFEBC3EF" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="DBC848533DDA46A3" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="298237D6A0941775" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="FFABC635722AAA5B" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="91C93B54AB3820B1" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="DF730EAB8ABB197" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="EA4DB90BBFFE6E6E" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="AF6C560625871646" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6D59F78FA355E4FA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="3B21ACAB96F3509F" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EBA63957590CAC45" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6A84F3819EE50F6B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AFE680885BB85547" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="B6CE7B77D8EA88BB" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="CA89210ABFF67A28" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="167B47E106FD9D49" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="4EF1E2867F38F8F3" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="E15BF3F10618BD7F" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="A255ACFA32A1CFC1" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="A3161D696DE3B99D" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="84929A0BFF227BC0" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="267C49A4454273FF" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="D69284DDBDB269F0" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="902FBC079BDD73A7" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="87B3AE975125BC0E" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="CAF70BA29A0E2076" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="72F0528ADA30C249" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="A8EA3EB679AE9E02" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="D49B6E8CF15251DC" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="B4494A67C80688F0" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="FB7FE7A9123F812B" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="7FD72B86C4F7BCC4" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="62A9A4DF220208E1" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="87C53638B3952173" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="BF22C41989C7EF2B" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9763D3D9B06DCF60" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="65BE14030B9F844F" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="E7859E17F1084AA1" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="C76D8C94B55B7A83" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="42118E65E955DF42" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CFE01A29C4615B19" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="3E1A25E8D8923983" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="6E26154ACA9729FB" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="64E7C3B14FF38AC7" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="FCFBF1D4064BEA43" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7EE4ABE7769BB9BC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8F5E6800D57BD622" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="3C096362E185A537" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DFB5DD29D8F70028" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="72B2C64EFDEE28B3" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="FD6EB43537E94455" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="7484FF6ADEF34A" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E574C12C23EBD24" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="CB05F6E868529388" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="59FA431103005A99" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="E8DA032FC2F24D9F" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="DA106419ED27C9DF" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="C2BDE0B80CEDF592" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C2AE3E2EB5E2CB4B" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="AD3568EA57C4CBB" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3526BCEFCB0ABE22" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CD51889F6435A893" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D666957339091427" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5DB3B07B7FB56C33" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="C4B8075202744B77" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D11887ED49185B04" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="24C64AEE17B2BDF2" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="170FF9723E96A85D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5F07F53EB831DF9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2CB4196D17713FBD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8800161D890CF30B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="866311DB8CC25427" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="11BC0C7B7B9C8F67" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A3A7B5E59DE96571" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="915C5B18CFBA4AAD" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7B8A0A7ADC210508" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AFC6DFA959BC377" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="12DD45DE379A5E50" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4D11CB225BD83B67" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="B20365C2E278704A" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="788A8505FC28F56C" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="68C2A96D3EE64B3E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="80E50D78EF2C81DC" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="80BEFCAAC1E2536C" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5CBE24D06500A5F8" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="95DA5C6AF21D4997" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B7849975C187909F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="652876357D70E789" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FE617D5F195A02D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B23F619BE8AF8D9" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="B61374AAAB2A3164" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4D6A2034467EE406" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4977CA9933EAFEB3" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="77BD0C2EADE8969" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CE4FC1D997CDE714" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AC89821B6F227734" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2E5D5D1B7938C36F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="DAFA77AE55706EA2" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4DCA8A5CECC65DDA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AC11EA8D9D762C6B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="56B3AAD0CE57F9E5" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2049D6E82F0607C2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DE7CD4DB28A1311F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E6B9C5B8E73C4FDF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F529E63C50BF738D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="D0207E395118DC3A" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="BC91B9336E7A1096" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FC7146AD94CDAAEE" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="1F19A58874715353" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E6910A870B680893" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FA362D19076679C7" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="41D343EF980F3AC0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F36CF4C1C9B85CBC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="9715C80866D00D11" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BC256BAFAB5992B3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="32D4D0E4DF7EED1F" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1570437BBD3332FF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4215101590D42BDB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="282E4C4BA812D44E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E79AF2835AAFA417" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="8756243C6CC24B05" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BC56D15485DD1C2C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1B6099A8858F7A67" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D4B0D6E12EC30267" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="97FC41537E0E1590" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E3B32389AA6D9641" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9D75F4EFD1F7C2BA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4C0090DBD2FC1374" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="6833176C5F7516EA" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <TunableTuple name="intro_loot" class="TunableScenarioPhaseLoot" display="Intro Loot" muid="6C30CAE770AA961F" description="Phase intro loot.&#xA;These are applied only when the phase starts." Deprecated="False" filter="0" group="General">
            <TunableList name="loots" class="TunableList" display="Loots" muid="854F00FE373EA367" description="A list of loots to apply as a scenario outcome." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="E4C148B21A4F3CB6" description="                " Deprecated="False" filter="0" group="General">
                    <TunableTuple name="scenario_loot" class="TunableTuple" display="Scenario Loot" muid="931BE03296ED0293" description="A loot action and a list of targets." Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="F476C9377D1D979A" description="The role of main targets for the loot.&#xA;Loot will be applied to every sim in the scenario with the specified role using that sim as the &#xA;actor participant in the loot.&#xA;E.g. loot that is applied to &quot;Actor&quot; will be applied to the every sim in the specified role&#xA;E.g. loot that is applied to &quot;SignificantOtherActor&quot; will be applied to the significant others &#xA;of every sim in the specified role.&#xA;Leave this empty if loot subject(s) are globally available participants that aren't related to &#xA;sims in a role.  E.g. &quot;ActiveHousehold&quot;, &quot;AllInstancedSims&quot;." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="5E8CCDA159633049" description="An alternative way(to actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <Tunable type="action" name="loot_action" class="TunableReference" display="Loot Action" muid="FB5B22C1F0311CC6" description="An action that will be applied to everyone in the list of targets." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                        <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="A6E150E2D12604A6" description="The role of secondary targets for the loot.&#xA;Fill secondary target only for loots requiring pair of sims. Like relationship loots.&#xA;Loot will be applied between every pair of sims in the scenario with (actor_role, secondary_actor_role)" allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="FDD875CC48948560" description="An alternative way(to secondary_actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableTuple name="phase_fallback_output" class="TunableScenarioPhaseOutput" display="Phase Fallback Output" muid="7F7A9C9879D98A" description="If all other outputs fail this will be the output.&#xA;It does not have any conditions." Deprecated="False" filter="0" group="General">
            <TunableTuple name="output" class="ScenarioPhaseOutputData" display="Output" muid="2795B117F0E1FC6E" description="Data containing condition and next phase or outcome." Deprecated="False" filter="0" group="General">
                <Tunable type="snippet" name="next_phase" class="TunableReference" display="Next Phase" muid="87E077A0E055FC14" description="The next phase.&#xA;If this is set do not set scenario_outcome, because setting this will&#xA;make scenario progress to next phase and outcome is about what&#xA;happens in the end of the scenario." allow_none="True" Deprecated="False" export_modes="client_binary" filter="0" group="General" pack_safe="True" restrict="ScenarioPhase" />
                <TunableTuple name="output_loot" class="TunableScenarioPhaseLoot" display="Output Loot" muid="FB42D388DAC4DE13" description="Phase output loot." Deprecated="False" filter="0" group="General">
                    <TunableList name="loots" class="TunableList" display="Loots" muid="37151D3842E8CB7A" description="A list of loots to apply as a scenario outcome." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="FC16A39DED9329D6" description="                " Deprecated="False" filter="0" group="General">
                            <TunableTuple name="scenario_loot" class="TunableTuple" display="Scenario Loot" muid="F39C9CE5B36D3ECB" description="A loot action and a list of targets." Deprecated="False" filter="0" group="General">
                                <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="3313A7998A682833" description="The role of main targets for the loot.&#xA;Loot will be applied to every sim in the scenario with the specified role using that sim as the &#xA;actor participant in the loot.&#xA;E.g. loot that is applied to &quot;Actor&quot; will be applied to the every sim in the specified role&#xA;E.g. loot that is applied to &quot;SignificantOtherActor&quot; will be applied to the significant others &#xA;of every sim in the specified role.&#xA;Leave this empty if loot subject(s) are globally available participants that aren't related to &#xA;sims in a role.  E.g. &quot;ActiveHousehold&quot;, &quot;AllInstancedSims&quot;." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="9C691BF738AAD2CF" description="An alternative way(to actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                <Tunable type="action" name="loot_action" class="TunableReference" display="Loot Action" muid="764F7A76FC5F7CB3" description="An action that will be applied to everyone in the list of targets." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                                <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="56B551D3D5AA7D40" description="The role of secondary targets for the loot.&#xA;Fill secondary target only for loots requiring pair of sims. Like relationship loots.&#xA;Loot will be applied between every pair of sims in the scenario with (actor_role, secondary_actor_role)" allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="5EE461E703F0A612" description="An alternative way(to secondary_actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
                <Tunable type="snippet" name="scenario_outcome" class="TunableReference" display="Scenario Outcome" muid="48D612972E8D696E" description="The scenario outcome.&#xA;If this is set, do not set next_phase, because&#xA;outcome is the end point of the scenario." allow_none="True" Deprecated="False" export_modes="client_binary" filter="0" group="General" pack_safe="True" restrict="ScenarioOutcome" />
            </TunableTuple>
        </TunableTuple>

        <Tunable type="int" name="phase_objective" class="TunableLocalizedString" default="0x0" display="Phase Objective" muid="CDF78471856829DC" description="Phase objective text." Deprecated="False" filter="0" group="UI" />

        <TunableList name="phase_outputs" class="TunableList" display="Phase Outputs" muid="DC06C1FDD2ED80C2" description="List of possible outputs." Deprecated="False" filter="0" group="General">
            <TunableTuple class="ScenarioPhaseOutputListData" muid="D88121FA5CC9170" description="Data containing phase output with its conditions." Deprecated="False" filter="0" group="General">
                <TunableTuple name="conditions" class="TunableScenarioTestSet" display="Conditions" muid="502119E3BE82A9B" description="List of conditions. Connected output will be selected only if all of its condition tests pass." Deprecated="False" filter="0" group="General">
                    <TunableList name="scenario_tests" class="TunableList" display="Scenario Tests" muid="FFF2A00F6E70C4A4" description="List of tuples containing a test and actor role.&#xA;Test can be selected from a set of tests that is tailored for scenario use." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableScenarioTest" muid="794FE61C3DE61663" description="A tuple containing a test and actor role.&#xA;If actor_role is set the test will run for everyone in the scenario with selected role." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="scenario_test" class="TunableTuple" display="Scenario Test" muid="82F3DE112B42240B" description="A tuple of tests and actor_role.             " Deprecated="False" filter="0" group="General">
                                <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="FBDCDCA4D6BF3F60" description="If this is not empty and subject of the test is actor;&#xA;the test will be applied to everyone in the scenario with selected role." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="48A0CD23F2B321CB" description="An alternative way(to actor_role) to access sim_info for the tests requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="EAD47718212C015" description="The role of secondary targets for the tests.&#xA;Fill secondary target only for tests requiring pair of sims. Like relationship tests." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="9C8EE26A06E15982" description="An alternative way(to secondary_actor_role) to access sim_info for the tests requiring second sim.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                <TunableVariant type="None" name="test" class="TunablePhaseTestSetVariant" default="none" display="Test" muid="6E62768456D3AABC" description="A test that can be used in various parts of the scenario.&#xA;It can be selected from a pool of tests that are put together for scenario use." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="aspiration_track_completed" class="TunableCompletedAspirationTrackTest" display="Aspiration Track Completed" muid="CC66C861C348E24E" description="A tunable test that tests if a Sim has completed an aspiration track." Deprecated="False" filter="0" group="General">
                                        <TunableList name="aspiration_tracks" class="TunableList" display="Aspiration Tracks" muid="D1042729F3A9CB8C" description="A list of AspirationTracks to consider. If left empty, the test&#xA;will consider all AspirationTracks." Deprecated="False" filter="0" group="General">
                                            <Tunable type="aspiration_track" class="TunableReference" muid="B50E938608FB4C96" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="levels" class="OptionalTunable" default="disabled" display="Levels" muid="BCFDC13524B0F0F0" description="If enabled, the number of levels that should be completed in a single&#xA;aspiration track. If disabled, all levels in the aspiration track&#xA;must be completed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A1E4F72E72509D83" />
                                            <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="13464EC5FCB746F6" min="1" max="None" description="The number of levels that should be completed in a single&#xA;aspiration track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="7378C8D4A29E5B50" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="25E9AB0F14F7A707" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3169E5DBD3447A60" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F775A42E130C6252" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="bucks_perks_test" class="TunableBucksPerkTest" display="Bucks Perks Test" muid="BE6945F80534809D" description="A test to check whether or not a household or sim has a specific Bucks Perk&#xA;unlocked." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="4658526B609B9B3F" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B3484A2DF950984A" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="D386EFAFC0AB6B97" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="938D98D6AB7E5EAF" />
                                            <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="DB97D4CBE64B0D6F" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="145946FF364B16FB" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="19EE5003BA6E4DD4" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="98CEC827C830A0E8" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E7096D0B915CE5C1" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="buff" class="TunableReference" muid="AB1EFD61D0A348CB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="78A433FB29395CFE" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="72F80C83611871A5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="513F0CDB3CB4AE7E" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2FAF1D434BD81A17" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="B9D7D26099A96355" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="buff" class="TunableReference" muid="11A99FACCC0A87" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="52A66A93E25B89E7" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="23E94DB0846A14B7" />
                                            <TunableList name="enabled" class="TunableTags" display="Enabled" muid="A695709659A51513" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="9913A019EE9A3E7F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="19E5C73CEF7AE125" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B2BFA548B130D671" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="426253DE9F25385C" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="628C57D90DBE4B3F" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="65FC8E0E02CE9856" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="81367380A0F707F" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3F6352D105477C14" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B569EE8FAF0857" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="499929D4E95F4A2E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="B049AAF2B3B260E7" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="5D10A877E253087C" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B10FA32A2232708D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E5AF1735A69BB785" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1D279EC7484D3295" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="26FE534FBAF2D0BC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="C6A5644DD26AC368" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="30BF7D59DD867740" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DE25080C279830C1" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="90738FBA69A5BAB5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DEA4487B401B67EA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7D4F20CB0C410B90" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C22E1A1E0F03218C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="89BEFF0E8BAE0490" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D02B31BCAADBF7BD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6381876CDF9AA0BD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C9939E62EDFC95D5" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DF1C5C59EC6F7AEF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A7EBDA15C2D0898B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8DF92D47F4B29FC1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1E1AC1935235EFD8" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="6683D9A3F128A496" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="FE01B82ED82BFD95" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="46A810E433AFC85F" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="B6307EE3DD697E1B" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="5DD4FDBB90ACDAD9" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AA26E07F0A3DA87E" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="365A1665E7F9FA55" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="E4912BDE400D919" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="83BBE52BB424E8AD" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="BA858145C544EEC2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="7B84B80BAD5DA351" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="C7E1BD89D64EB961" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="A237DDF42B1CA917" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="38DCCA060E57EB65" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="804B35B3DF278C4E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1EF65B4D6F80800F" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="CE8F1FD500B763B2" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="B3D5234D8248CA96" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="C42EB17925C921C4" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8E2FCB9CF4540142" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11EAB737B2FB20CD" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F01CB751B891C086" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="CF71830FF9949A16" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="6F32053618C3A833" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="2F5415381700207C" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="E86BDD4D452F6661" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="B49F94FDAADA131A" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="7A445F3BEA06C1EB" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="DA639429A2BC8C76" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="15FB73DE755E9FF6" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="C77582ACB6EC4131" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="FD389FF990F8E332" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1D503CE762982046" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="2561F5193C405E4E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="239E6FA8FE401F1B" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="3B166854F4A12A35" />
                                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="EED8A2924BE4FEE6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableVariant>
                                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="E634E43D39CC1A75" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="career" class="TunableReference" muid="16CF7CBBB4DF7D00" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="923FDAAFEF2062BA" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94659EBFC52A9A20" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F180C4AB9AE71C37" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C2E4692C1F20CAA5" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="BA3B55CD3D645A20" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="F89F01F291EAF9F9" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="A89C9BB784843134" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="724A7C1EADB7DC0E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2ADCA3BB5165EE45" />
                                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EAC3F80391AEE74B" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="FA52E7F084F27AFF" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="3CE3DFFC81AC6C69" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="796F272B56AB4A27" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="7CA7A66B9C55FAE7" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="41C25A2A55FDBBB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FA6EE9EE588BF64E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="3F5378978F219867" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="563F38A100BFF70" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="FD5B69BB32EBCE2" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="21C755B978E1B007" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="FBFC271F01A280C5" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="16727D08187D500C" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="69DCB85307F68EB8" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="F3A6F785052C6C97" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="E7E2885D39F0F267" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="44B84BAB1F596452" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="careers" class="TunableSet" display="Careers" muid="9CD48B9997B84D" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="2DDDCBE5BBD24E1E" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="27F3681B237760CB" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="31E9CBDF70E1D814" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7F46CBBDCC2D4E50" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="220366A9C4723951" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC138197E1599BBC" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8A555CF2C9F7AE82" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="322E1022FFB32A8D" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2DF4CADE08C2E7D9" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="AD65C5FDE35F92B1" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="437C2C6B42353F95" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="816D6BECB03B5CCC" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="74D80052903060F4" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3BD933737834F91F" />
                                                    <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="F292930FE2D16DC4" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DC99020CABFAD9B5" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE99748101FAFBBF" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B145F81410BCB925" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="DB433E800B1E0B17" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="82094E93C8335174" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A9B9D9B50DB9A6C6" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="DB2D34F9F5508CD9" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="B3477FB5EC1DAD4" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="41F507288B57494F" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="F0C59F46BED7EECE" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="1A2307F838DDCB4" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="BEC9822D8A69C160" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="92D92DA363C8BB79" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB4E86F09B6B3B62" />
                                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="9EB33B7F7AFF725A" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="79DFF9B782906826" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableVariant>
                                                <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="6DD23B0F5DB4CC66" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="5CE79803050F9EBC" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="76856A96D49CA965" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3BE53865F8221925" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1BD3871819DE86DB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B5DEB93A0100C7A5" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="42EEE625D8E9EE8F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="FD30628BE66C1512" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="CE42E01820C19728" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any" class="TunableExistance" display="Any" muid="887B2AB5B2D58CCC" />
                                                    <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="9C7A04B75A080636" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="B2F8FB3DCC97F7B5" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E1BF48D15F74DC76" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="9F214B5E34740CC2" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="85F86D0353926CAC" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="984F025F3080B72C" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="6E1CC63FDC2AED89" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3A2979DF1180A678" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="6EEFAEFD60A0CB9C" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="4871B51EF37203C0" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="716FDE30D41F3338" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A7EBF5CC88B74E9D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="CB2B0631D5C5623E" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="92DF69F801C8AF21" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9AC1748A3D110CCF" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B7F14C07CCABD23D" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="61693D513C434FDD" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                <Tunable type="career" name="career" class="TunableReference" display="Career" muid="2721A73B68E155B9" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="3E06CB1BC7630754" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="D343C2423A58E1A2" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="24F55269C3116B5B" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="F0B1D09A3D870945" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="A64BB763441D67F9" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career_daily_task_completed_test" class="TunableCareerDailyTaskCompletedTest" display="Career Daily Task Completed Test" muid="AF5045627FD4438B" description="Tests if the subject completed their daily tasks in their career." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="disabled" display="Career" muid="C61AC29C1CB67553" description="If tuned, this test will run against a specific career instead of &#xA;against any career." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3B39BE4799D51C3" />
                                            <Tunable type="career" name="enabled" class="TunableReference" display="Enabled" muid="41FF44ECFF578A25" description="The specific career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="club" class="TunableClubTest" display="Club" muid="6DB726F68171A58" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="7420C7157B963279" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE5B907C67440BAC" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="F5F7ACE66E6A6EB3" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="AEC2C22EF57D2A44" />
                                                <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="74AE0C83A329F408" />
                                                <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="E89B12CBD6D98425" />
                                                <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="D85F8DB40823E101" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="1DE8455E42C0107" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DEB680F050C51266" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="5C2FDB41B76BE8AE" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Leader" class="TunableExistance" display="Leader" muid="98CD6486FCABB176" />
                                                <Tunable name="Member" class="TunableExistance" display="Member" muid="9FB712BF8B9B37EA" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="F1FAFED2B58EF088" />
                                                <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="27DF093B21F10AAB" />
                                                <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="7CA5568C33C1363" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="9E34594B50DB71F9" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8495306032AF2C8" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D05DE909B5937858" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="FEC1B8D541684923" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="F5D71D552DA301AE" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="85051964DF3789E3" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="16F74ABBB7271612" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="2F1DD1598DEFF7D6" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="18B905635EC10CC0" />
                                            <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="20800AEDA55BFD10" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="E89E0BAF2664AF46" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F228815D6D5070B9" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8AE5A115F8BA52F" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ACBA9E63EB9F865" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4B57AA5110AEAB14" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="801C9D6D1EC80F26" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3BFE7B7E5FF813EC" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="7121480C1954E8ED" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="E5D017721B49EF63" />
                                                <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="6462183D5FE421BF" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="24F158CE106F1611" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="198AB5B53B74E28B" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C005D8CE421FCF74" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="FB59298A0CFD09C7" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="ACACAB100DD2DE87" />
                                                <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="1FDCA760058893E7" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="B08ADCCA8EDA787" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="154C1DEB30C474DB" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C96004786EDD889" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="3A913859CC9CC07C" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="32D81B87DD2E2FAA" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="C8A7AC5F27B540D3" />
                                                <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="7E30F228FB891B36" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="234BEC2B1C903D02" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D9FFDDDCD7B15B2E" />
                                            <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="C7B988F4F2FE2B23" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="CE53539565E15B90" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="70BE5099C03E0FB7" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="1EECE332B470DCC7" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="CDF55B8DBC2A3C44" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="8B6BAD9FF9E23EF4" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="D7AEC89B5031173B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="E9A993809886CB4" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="2272A59B78995289" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="2EFC84F7C3A741E7" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="80CACB650ABCF526" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="B0947B259FEABA8B" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="D17CDDD8DC530ADB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="9E8970C681DCD9C9" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="25413900A1831BEF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="15BA12970A17164C" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="CFD8696160B14D17" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F914EDF3CCDFCF2" />
                                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="E267A1ADED6EE162" />
                                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="D4C17E7223AC68A6" />
                                                </TunableVariant>
                                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="F58B4777A83A01E5" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="AD96568D73BBE102" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="3902F6F74B8A8EB" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="D59C4AF5A346A629" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="9A8AD4987C670F9A" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="B8CED20E3ACF30B4" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="7AAB353DA4C8B57F" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="FFD665525B72490" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="36D0ADB013A15F27" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="6009031CA56B8B2E" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="8FE555DE338BBB04" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="9F1ABC66B23BBB10" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="F90F9748BEDC01D8" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F18BBEF38461F84F" />
                                            <TunableList name="enabled" class="TunableList" display="Enabled" muid="3909754DBA5E293" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="164B78D84363D8C0" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7940410575D39BC2" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="602DBEC79904648A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F8ED59A754A32CED" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="dead_test" class="TunableDeadTest" display="Dead Test" muid="55E305549112C7EA" description="Test to see if sim is dead. It is true is sim is a ghost too." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B9E30D2FB647B406" description="If true, invert the result of this test." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_lot_owner" class="TunableHasLotOwnerTest" display="Has Lot Owner" muid="761E12EEDD73AA48" description="Test to check if the lot has an owner or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="E05E24F38E5A7EDE" description="If unchecked, test will not consider, renting as ownership. If&#xA;checked and a sim is renting the current lot then the test will&#xA;treat being rented as having an owner.  If unchecked and a sim&#xA;is renting the current lot then the test will not treat this&#xA;lot as having an owner." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="has_owner" class="Tunable" default="True" display="Has Owner" muid="27A2AB7B46814433" description="If checked then the test will return true if the lot has an&#xA;owner.&#xA;If unchecked then the test will return true if the lot does not&#xA;have an owner." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="7F2F375FF325073E" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="B717270300D2892E" description="The type of test to " Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="2258091F85190D4" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="3C5CB0A0883445FB" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F98EEAB1C1B54688" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9A7A07E357CD39EA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="count" class="TunableTuple" display="Count" muid="D3D00604C78AE50F" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="76547961C042B11C" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="21FCB38EA402FDCB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="6B03B512F04E3E06" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="E29F70FC12CD520B" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="BE1E82B99F2467B9" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="305BFB865345000A" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="count" class="TunableThreshold" display="Count" muid="2E6B2F145CCA700E" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="346B0E7FD0EE6328" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="63CF8DDC9CB60495" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="22375876B217F90F" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="1ECC0B580BD90B7E" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A2B3078353321B46" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="A1759A1982A9EBF9" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="9918344A6E8EB0D7" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                                    </TunableTuple>
                                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="7C58AFDB687B43C0" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="457F3961EE2737B3" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="FE6529D2243E42AB" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="99B19452A6FC3FF6" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="98B7DFF3F9C3767A" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="B4B1E553451BBBB7" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="42718F5D6CA79BF8" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="9E53B2878178CB9C" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="993713F3C518FF46" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="246D71CAB321FA55" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F7EB6315C2BDAC5F" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="C1BA0A7398580B2B" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C5902227773F9CC1" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="4CE6522DB1179DA8" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="19ADF45685FE84F6" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5DACAF60D9C4BE2A" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="581A4D6AC8DAB0D5" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="A500E1CA85A1CDDD" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="8038FE602CE63400" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8F191DFC3AA3E4C" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="9A2DABE05DAD02B3" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="BDCFBF04015BE63A" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="57F5AEE065CFF038" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="DF0ED2CC43B40660" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="E437CAE3A480A7F9" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="6246CEAA80E48EDA" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="89F1DCFC13997B88" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="75BE92696AEEBA9" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="919204459769E6B0" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="D777C7C5E336C769" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="70D6861E7CDE169" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="D90AA42908610F12" />
                                            <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="81FB7817EDD6DED" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="D486F0E8F6936C8F" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="5AD717BAEC53B805" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="1C207716702A0C59" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="87E5B421CB2DCAE9" />
                                                        <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="EF1550FC0ABAD1BB" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AD9D161554259DDA" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D6EB04DD207E83E9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="316F0B73EE0EBFE9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="811FC0B86DB196D5" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F3E7A77B9707BF91" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4CC73C28E6AD469" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1A16D5FF5D0D7565" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="E0DAE9E1E4C5F4EE" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="1DA3C664D5B2B5D0" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="ADB66B9F7835082F" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="F4AA5D46D763DB4" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="C821A038036D4239" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="99A43028EB4295FD" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="5668D78335F4C5AC" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="6A9E2E873350E502" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6AEEDCA0D38B872D" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="7FF9F7FE5AB53955" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="3343675030669425" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EC174239157AACFA" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B63A4C6D0F4E346C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="94F2390CBCC39279" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="9D69EFBF8647762F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="99F8CAFF1729476A" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="564A008145B74981" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="22BCBB68EA464965" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="64AE293C6E995590" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4520F29158D8D10F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8B513384D17594FC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="5055255F07B7B6EA" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="16C403A14146D86B" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="EACF0D7835680E59" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="26883170D3026022" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F38DC45C3D848260" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="D48332881E0D6247" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="98A1351418FF9253" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="C811CD114311C2B4" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8E1164BF5B06279B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9A04BB20268C7110" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="F207CC45EFD0EB11" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="7DEE75F0728FC00B" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="E0C73CFD9B953BCA" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="B30CC9E94CD465AB" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="873CC62CB94F87B2" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="253FE553DF3CCAF4" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="78A1F0D5A8817CD9" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="FCCF4D2B9C0A7739" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="58DE7ADA51DB7516" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="40B6DEC330D0BBAB" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="A6474865AB8F4DFB" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="88309E494750D63D" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D98973870324B140" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="22F081E0B9E27649" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AA945FF0DBA64BD2" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="81A03D9BC748E9B6" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="F51D8D840563C39A" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DD9FD1C029CD7ED5" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="311DA0301FB3B081" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="809487E35AE8F7CF" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F539A777DF81A39D" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2285FC4E14B3EC7" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="6D8FA51035DAE33" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="905182E746DAC410" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="372DC21C469AAAE3" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="5D51F08DB15C497E" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="B1C60B3B09A39CDE" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="604600822708F6DC" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="6CA15CCD90009076" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="F9A70C69CEE969E2" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="678F6FBBEAF77FC7" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9169A5C89BC62E45" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2686FF03D83AE8CC" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="E91992B0FBA1566" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="53B405EAB0A9827E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="254812585CDB2D3D" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="4048B23685E0CAF2" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BF42C73679F5AB5" />
                                                <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="EF26ABF50AF6CA82" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="E81872C17A38C3BF" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="93D96F4F5A035EB7" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="230993D968B65A09" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="7CAC19913F6F272D" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="435561790FBE1619" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="FA06056F86170F5" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C5F7481951C2E12C" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5298A70027EEB277" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5194B9258BB34B8C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="86F0C42C8498B5F3" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="45353CCD8F0925EE" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1F1F4C927C64C117" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3D9CBB29D2FEC9FA" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="79FFE15F9FAF142F" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="19F8F2A7A6A41BC9" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="3BC7DD78E745FBD3" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="651DF0DE0C81C31D" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B6445271A1E9E60F" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="C58789F0C2CCA3D4" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="423E65D45480A95F" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6C0DE354B984FEB9" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="C9EF46ADC206ABC1" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6AC0927AA401B699" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C4F6FEE8E2F0925A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8A4F838691ED6E5" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2C70266D42F5909A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="891BC21E482B066F" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ED9224BC74D2248" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2EA5A54080369265" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F868C0AD0DD53F6C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5B6764614B87FDCC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5370C61F2D6B9F79" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8106205CE7B2723A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="5B1DAEF42B5CF5E9" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3DE8750CB1C454FD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="506F6DEAE1BF4221" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EDA16A2E1A5C7E02" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="728AE3EADAA9C571" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="804EFC1E3F04EE83" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F378A0FF4928DB56" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BFDA0077D08EEA5D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A834961C1D621510" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="locked_portal_count" class="TunableLockedPortalCountTest" display="Locked Portal Count" muid="7CF476F42EBE44DD" description="A test that checks the number of locked doors." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="lock_priority" class="OptionalTunable" default="all_priorities" display="Lock Priority" muid="F4D27BB0C0D5CDF6" description="The priority of the locks we want to test. None means all priorities." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_priorities" class="TunableExistance" display="All Priorities" muid="F79EC042B542A9D3" />
                                            <TunableEnum type="LockPriority" name="specify_priority" class="TunableEnumEntry" default="PLAYER_LOCK" display="Specify Priority" muid="AF74457993B92FE1" static_entries="objects-components-portal_locking_enums.LockPriority" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="lock_types" class="OptionalTunable" default="all_lock_types" display="Lock Types" muid="6B4BF94121793140" description="The type of the locks we want to test. None means all types." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_lock_types" class="TunableExistance" display="All Lock Types" muid="9B7470D2917727A8" />
                                            <TunableList name="specify_lock_type" class="TunableEnumSet" display="Specify Lock Type" muid="A577E0BBC2C1DD08" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="LockType" class="TunableEnumEntry" default="LOCK_ALL_WITH_SIMID_EXCEPTION" muid="96E5CCCE59B5E55B" static_entries="objects-components-portal_locking_enums.LockType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                        <TunableTuple name="number_to_test" class="TunableThreshold" display="Number To Test" muid="9650429FD616BFFD" description="The number of doors that need to be locked to pass this test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8BBAF5BADDBF26D1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="70EBE8E654F1F87B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="D32C58E1D47C6B26" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="7461805480311E86" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="6DDCD7D86948FB72" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B99D5C1DD5ABD8EB" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="F9B5BA54D7E3C00B" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="3BCD02BA71842CCC" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="27E688F4E888B04B" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="A05CBAF8E554660C" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="9C33982355472671" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                                        <TunableList name="stats" class="TunableList" display="Stats" muid="9282FB51564C012B" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="23CA761F6878599" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="12D92B3D737ED360" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C65EC4D2FCFB521" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="28315D67D767DD9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="nearby_floor_feature" class="TunableNearbyFloorFeatureTest" display="Nearby Floor Feature" muid="CC1B7724E9228C7C" description="A tunable test that checks if a specified floor feature is within a&#xA;radius of a given actor." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="FloorFeatureType" name="floor_feature" class="TunableEnumEntry" default="BURNT" display="Floor Feature" muid="2C0C6BE6C721B0AE" static_entries="build_buy.FloorFeatureType" description="The floor feature type that is required to be inside the radius_actor's&#xA;radius." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="E4AEA890279E3B57" description="The radius, with the radius actor's position, that defines the area&#xA;within which the floor feature is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable name="none" class="TunableExistance" display="None" muid="9211F717BA685FE6" />
                                    <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="97CCF9E0CD9B6DBF" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="2F0414AC59439572" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="ECC927A3E84EEFF4" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D889D76B55AE1EA9" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="FE4EBA7BB18D97AF" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C0F57CF059009720" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="64BA02FF83D96B11" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="C12C772824C9A1E3" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="F70A219CC32DB0DA" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="E8CDD13C907E5B6E" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="41CFDD30B764D6F6" />
                                            <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="669443181ECDAB7E" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="FC2DA05B0B15F5D9" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4A30CF91C3ACB33C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A396050E6BD366D2" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="9598F25C3167258A" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="2A8D20742E3340BC" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="C265A5DAE7FF03B5" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="8516C934F8D5701A" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="5075F91BAE23F7AA" />
                                            <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="834406C45B55D9AD" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="E945E5286EE44E0A" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="EAE8D02FCC9EDB5D" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="DEAC06C910A04D8" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="369CBA4824DFAEF3" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="F7586B236F960688" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="1A88295107302A3C" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7C0CB5F0541F3E6B" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="794E704E9AE87EBB" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="22270C105602345B" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="5DF8CA6C673958E1" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="275E847EE0B7716C" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5F5C45F050B88DA3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="EFC0706F4948C833" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="CAE10BD9BF69510B" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BB2CDBBDE8D3A9A5" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="22894D9F3A3530CF" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="341DF0B7974DA01B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="884274C8AFB55430" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="15DDCFCDE632822E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="7F496737E93872D3" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="test_events" class="TunableList" display="Test Events" muid="ECBEF440A8DEC1D5" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="7D5D640BBCC8AC99" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="BB6B2DA2F2B89E5E" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="135D7B55D072AE5C" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7786635ED78E7F35" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1A937BB19103A8D9" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="11DBE367D3CC8137" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="59984C16D95961EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D71B6285CC577DFE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="8908C3441975E1AE" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="C3FB75C87AB92C1E" />
                                                    <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="6C0ED78C59078741" />
                                                    <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="93B2FFC26C6632F8" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="40003824FCB26F95" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="B5CF219CD6118CCC" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="ED5415A6D14EA182" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="9769CD835E585A1E" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="56F8BDEEFBBE883" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5CDAA54403D9F2CE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3636945F3DCECC4F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="198A532ECF9FE37A" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="D5FBD3C38584D374" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="AA94867B4A7FF4D2" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="681B8BD842FCE28D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B774825C76D3ABA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="BA0A88F8C3A85339" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="86FCE0F6A9DF5A3B" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="420754B160BC9394" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BC61973CA609DAE4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="872DC0EDC37744D0" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="E6C1FBA25840E9CB" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="99F3D507141F1338" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="DD4871C390C2DF32" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="13B2AA02E9DD3B18" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="4CE940B377C8785A" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="BF89DA4803D4B3AA" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="7698FA4D20AD6453" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="4802DDDC3670752E" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="26EF19B94C6AAB7C" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="5EFB9B4F4A1F4B0B" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="8DA756200B94C9B3" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="33A880F4DF67539F" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="2B34F93E88A0FBE1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="D1C5C41E58E0175C" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5533153BF568D9B2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="8567DBEF14FF9F07" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="33E680652ACDE809" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="43F1DA74AA1343A8" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3DCB6300314795D0" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="6CDDD660819FCFF1" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="36737995E3F14195" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="38EF9DACCD9858A9" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="relative_statistic" class="TunableRelativeStatTest" display="Relative Statistic" muid="DD1CB1E47E15DBC8" description="A Test that compares statistics against each other either &#xA;on the same participant or on two different participants.&#xA;I.E. I want this to pass only when the actor has lower hunger than the target.&#xA;I.E. I want this to pass only when the targets's hunger is lower than their bladder.&#xA;&#xA;If either of the Sims doesn't have the stat being compared the value will&#xA;default to the initial value of the stat, or in the case that rank is being&#xA;used, then the initial rank will be used." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="33E16FCA5F13163E" static_entries="sims4-math.Operator" description="The comparison to perform against the value. The test passes if (source_stat comparison target)" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="difference" class="Tunable" default="0" display="Difference" muid="B94AA667D95260A3" description="The difference between the source and target stat in order to pass &#xA;the threshold. This value is added to the source stat value and the &#xA;threshold is checked against the resulting value." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="5928A22F64FC7A2C" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="847F51AA0E61F72F" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="CD823AE3CDE9A403" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="687235AA8DA572AC" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="244CE23419B7A910" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="62158215CCB572E7" description="The stat we are using for the comparison" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableList name="target_stats" class="TunableList" display="Target Stats" muid="3A69C2B8001B372D" description="The stat on the target we want to compare against.&#xA;If there is more than one, all must pass the comparison.&#xA;If there is none, it compares the same stat." Deprecated="False" filter="0" group="General">
                                            <Tunable type="statistic" class="TunableReference" muid="3B423159E30478A0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B31E2A3C2F3F0A3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2165D84AAFC0F2E" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="CACF8E4D0D5FA212" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="satisfaction_points" class="TunableSatisfactionPointTest" display="Satisfaction Points" muid="567B3FB4D1FAC715" description="Test to see if the target Sim has a tunable threshold of satisfaction &#xA;points" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="8069A5ED92777F17" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="27D208134EAE9FBE" description="The threshold to control availability based on the statistic's value" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="475806F318479446" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7E8E9C856EE815F4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="scenario_goal_complete_test" class="TunableScenarioGoalCompletedTest" display="Scenario Goal Complete Test" muid="3382B11FBBAB72E0" description="Test if a situation goal is completed in the active scenario." Deprecated="False" filter="0" group="General">
                                        <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="42D6BBA4754C9004" description="The situation goal to be checked if it is completed in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="scenario_phase_triggered_test" class="TunableScenarioPhaseTriggeredTest" display="Scenario Phase Triggered Test" muid="993C9CB80174A25B" description="Test if a situation goal is completed in the scenario." Deprecated="False" filter="0" group="General">
                                        <Tunable type="snippet" name="scenario_phase" class="TunableReference" display="Scenario Phase" muid="97A52A1E0879CA9A" description="The phase to be checked if it is triggered in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioPhase" />
                                    </TunableTuple>
                                    <TunableTuple name="scenario_relationship" class="TunableScenarioRelationshipTest" display="Scenario Relationship" muid="59497228130B9919" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="ADD5E1A5964937B4" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="E0F69A8ECEA9F708" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="8BFB926FB35D1347" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="2F3CD54944F5CC25" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="1F37698B8EA53777" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="2A53D6F64B5F8B9B" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5591D3A5E0313806" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="28F6C1599E9CC2CA" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="D90FF8CA203F80E3" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="C9ADCDD504C4644D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="881FF81E8F2B7F0F" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="E7A28B2FA4FDBE49" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="97C3E7D857D5CE66" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="E23ACC714C3DF71" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="C3E13848D4EE5582" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableList name="target_scenario_roles" class="TunableList" display="Target Scenario Roles" muid="DB13A4CEF81B5ED6" min="1" description="A list of scenario roles. The relationship test will target all other&#xA;sims in the household of the subject sim that have a tuned scenario &#xA;role." Deprecated="False" filter="0" group="General">
                                            <Tunable type="snippet" class="TunableReference" muid="70AAE65BD82F0D31" description="The scenario role." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        </TunableList>
                                        <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="81547A51A86FC55E" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="D1B1F810BA714933" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="3BC34A3C5F273C36" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D701729F44FE068" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="377C44B2C2409E15" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="734C4681069243A0" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="71996DB92C80527C" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                    <TunableTuple name="scenario_role_test" class="TunableScenarioRoleTest" display="Scenario Role Test" muid="E460F48D2B138C93" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="1190794B2E4D152D" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="8A8C0ABF55B523EA" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="1DC5F08D1E557489" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                        <TunableEnum type="ParticipantTypeSingleSim" name="target_sim" class="TunableEnumEntry" default="Actor" display="Target Sim" muid="1764FD0FBEE46E2B" static_entries="interactions.ParticipantTypeSingleSim" description="The target Sim of this test." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6D47B234A326E219" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A04490FFC394B628" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FED2830B348FAEA8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="2E7BF8B0793DF5F" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="A5B37848462C13C2" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="4750A7C1619B97A3" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="373973D609E51442" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="665C06CF574D4139" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ECE43022E9291DF3" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="BA78594D2D9BDCC4" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="702A15896B3E66B5" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="2CB3EE75BA4ACE4F" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="3E24E8E18A907D5E" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="in_current_zone" class="Tunable" default="False" display="In Current Zone" muid="3115BC8C190AF50D" description="If enabled, check if any matching Sims are in the current zone." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="23C2F8CA73918B41" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="FF1D9E30BB86678B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="75242BD3D5DC7550" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8BCA6256D62C378B" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D31AFEDC3A845B62" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DD553D67A3B9EFFA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6CBB0B47AC4E4D54" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="E1F9A27FA14E158B" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="B94DA33345F0648A" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                            <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="E7DEA823536C1F69" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="F5DFAF180520CD47" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="621E5B54FEA69C77" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="DDF7BB1DC8F1010B" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="EC4B4F0DF9B61A29" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2408FCF347B89B3D" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="BB3E66D28DD461FB" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="CD1BDE2A45F0F5A0" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="8D9BCFEFDB0DB221" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="775919F5921D84F2" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11D36AC55E948A82" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="13965ED1015AD2ED" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="BA333374823019D7" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="69A37964A18627BF" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EFCC35DA6A4E6945" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="6C5C48760D8F7414" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="9144E50727526355" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9D29810FF2532B1B" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="E85A08DE6AABCF5C" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="B5BDAC3C171B90AF" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="A1572DE40A7FFD74" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="F47A85AC0CF12257" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="D6BA406069453DFF" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="F1D41727300E3C01" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                <TunableList name="species" class="TunableEnumSet" display="Species" muid="148363FAFBC0E42B" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="DB9236A57987F36D" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableList>
                                            </TunableTuple>
                                            <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="AAF4A3BB74A93D46" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="simoleons" class="TunableSimoleonsTest" display="Simoleons" muid="3FB80E13FB94C874" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="838449F0886ED52A" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CF9DCCBB2CC5EF6F" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="DCABE99FB25B65EA" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="34675F618DA08A1D" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="E830A76CF057AD66" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="79772603998494AC" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="F14AEB67AE388606" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="3FD85EB9426B7E5E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="DC0ABAA2E1A9CEA6" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="5D16738B820DD986" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="CB3107AF0F9FC252" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="547E10230DA2CBDD" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="9443318C8E70390D" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="878B2DCE8710A6B5" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2743B023D9BB4887" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                            <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="AE65F82880471FD5" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="11D353B3CA272BD6" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="41BB480B489E633" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5CA7B1B240C455EA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6A73628E9844044B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="1F7C2A58489EE559" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="13E80A5FA356C06D" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="1A98785179B129E" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="706F7B592451E873" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="8551A6CE9DEFF461" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="situation_job" class="TunableReference" muid="7BE1374C5541AFF4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="5CA881D72BD87B4E" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="EDD1337BFF651445" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="1D2DB72C78B9A6DC" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="7035B25969617EF3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="496D40B69135C521" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3EA695C18553BB97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7F0C5D679A291BA6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="9AAC47102A58F383" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="BD67DDC7CFC9F6AC" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                                        <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="5768D3EC5AE6F755" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                        <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="2569ECDE7D7347A3" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="90F7DC93E21AA015" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="8946A6DAA792F2FF" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="62961A8E7765BA1A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="CCD26F62ACCB36BD" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="881018ED3CED09E4" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="D423294B3CB4C170" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="75C7515563D27518" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="F7D629ECD6EAA6E0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="173F4F4D9E53E98A" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="A113AEB2181BFEEC" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="state" class="TunableStateTest" display="State" muid="B1B815ED7E65720D" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="6772995470AFC654" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                            <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="B2A8C24E10BDF391" />
                                            <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="178156B92C1628B2" />
                                        </TunableVariant>
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="4E949E9FCF2EE78C" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="54B56349A67B930C" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="BBE2451EB9E01E69" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="60B76DCDF91E7023" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="C3E7ED6984395F74" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="4D1B24A81C32AECA" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="47843A5CAC6A033E" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="CCC313CBD7BA1FCE" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="63F1BAA316D89268" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="E40ED90A1F6A3340" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="ADA6FCBF692564AA" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="5F4DE12E39EF37A2" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9FDC03CAC053E8A6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DEF77827BA7C1B5C" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="1E1A885BF7A915DB" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5603DCE5C9C3C3E2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2E6D2D1737BF0883" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="time_of_day" class="TunableDayTimeTest" display="Time Of Day" muid="5DE11FC53C01D368" description="Test to see if the current time falls within the tuned range&#xA;and/or is on a valid day." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="days_available" class="OptionalTunable" default="disabled" display="Days Available" muid="7567E230F8B86817" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A37E2005C45885BC" />
                                            <TunableTuple name="enabled" class="TunableAvailableDays" display="Enabled" muid="95CD9D5AF113BAF8" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="0 SUNDAY" class="Tunable" default="False" display="0 Sunday" muid="2931F63895FEBF2A" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="1 MONDAY" class="Tunable" default="False" display="1 Monday" muid="926E5FA9E97D64C7" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="2 TUESDAY" class="Tunable" default="False" display="2 Tuesday" muid="4246EEC0D67BE79B" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="3 WEDNESDAY" class="Tunable" default="False" display="3 Wednesday" muid="310096ABF740C460" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="4 THURSDAY" class="Tunable" default="False" display="4 Thursday" muid="73ACD22BF5DEA95" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="5 FRIDAY" class="Tunable" default="False" display="5 Friday" muid="5CF3C7EC86D6169F" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="6 SATURDAY" class="Tunable" default="False" display="6 Saturday" muid="92487CC23759E19E" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_day" class="OptionalTunable" default="disabled" display="Is Day" muid="88147D6DC2E1E503" description="If enabled, allows you to only pass the test if it's either day or&#xA;night, as per the Region's tuned sunrise and sunset times." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7190E280B56A5A59" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="77F47CBEF9B4A86C" description="If checked, this test will only pass if all other criteria are&#xA;met and it's currently day time (between the sunrise and sunset&#xA;times tuned for the current region).&#xA;&#xA;If unchecked, this test will only pass if all other criteria are&#xA;met and it's currently night time (between the sunset and&#xA;sunrise times tune for the current region)." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="time_range" class="OptionalTunable" default="disabled" display="Time Range" muid="B05C5788267F25A0" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F635114DC4E6CF6" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4726EDC810D067F3" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="begin_time" class="TunableTimeOfDay" display="Begin Time" muid="CBDDEDFE6EA92AB4" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="hour" class="TunableRange" default="0" display="Hour" muid="5E778BDBEBF08962" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="784C7433472894C5" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="duration" class="TunableTimeOfDay" display="Duration" muid="9B89D484B5124564" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="hour" class="TunableRange" default="1" display="Hour" muid="424690F0DED37A24" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="7A5B1A99424AD09" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="topic" class="TunableTopicTest" display="Topic" muid="F15DFCB6594D0104" description="Gate topics of the actor or target Sim." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist_topics" class="TunableList" display="Blacklist Topics" muid="A4022C6B4591D4CA" description="The Sim cannot have any topic contained in this list to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="topic" class="TunableReference" muid="AE5090A7A88F06C" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_topics" class="TunableList" display="Whitelist Topics" muid="CB1D3E9F3D0306B3" description="The Sim must have any topic in this list to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="topic" class="TunableReference" muid="C0505CA5FE706762" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="55049D19D205B687" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="BB6FA17B7AD62A92" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="44467D5C967BAA96" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="B8A7E4E7F7CE739F" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="E31E75C35896B1EE" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="69F338CEFEA0DD24" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="59B9259FEE966532" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="BDF8555420758A05" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="7D7E7408F0CA4F12" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="E295B15F01706852" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="920CE5BEC5A7488D" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="trait" class="TunableReference" muid="349DC6FBC4375F03" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="venue_availability" class="TunableVenueAvailabilityTest" display="Venue Availability" muid="1136E0B36C191D71" description="Test for the types of venues available in any Region and possibly compatibility with a participant." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="ownership_test" class="OptionalTunable" default="enabled" display="Ownership Test" muid="66BA2E67CB5B9CE7" description="If enabled then when testing venue availability it will test the&#xA;ownership of the venue as tuned within.&#xA;&#xA;If disabled then no ownership test will be applied to the venue." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CEB1C3D9C5D86F12" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="fail_if_owned_by_anyone" display="Enabled" muid="4C51E728303A0598" description="How to test the venue for ownership.&#xA;&#xA;If fail if owned by anyone is chosen then any lot owner will &#xA;cause that venue to be unavailable.&#xA;&#xA;If fail if owned by subject is chosen then any venue owned&#xA;by the subject will be considered unavailable." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="fail_if_owned_by_anyone" class="TunableTuple" display="Fail If Owned By Anyone" muid="9492178A6D3151C8" description="venues that are owned/lived-in by anyone will be excluded &#xA;and considered unavailable." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="fail_if_owned_by_subject" class="TunableTuple" display="Fail If Owned By Subject" muid="5C68BB4FD271B5A6" description="venues that are owned/lived in by the tuned subject will be &#xA;excluded and considered unavailable." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantTypeActorTargetSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="8C13D2327D8CFAF8" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who cares about the venues in the region. This paricipant will be&#xA;used to test for Region Compatibility if checked." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="test_region_compatibility" class="Tunable" default="False" display="Test Region Compatibility" muid="DBFAC8F0747DA9E9" description="If checked, venues in incompatible regions from the subjects'&#xA;region will be excluded and considered unavailable." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="venues" class="TunableList" display="Venues" muid="AF0D4A262999CFBA" description="A list of venues that we want to be available. If there are no&#xA;venues in the world that match the types in this list, then this&#xA;test will Fail." Deprecated="False" filter="0" group="General">
                                            <Tunable type="venue" class="TunableReference" muid="DDAF09BC611E540A" description="A venue that we want to be available/unavailable." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="C028A3CAD867E9FE" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="1781D34BDEBE25BB" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="1ABA66F9CCCBE866" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="3E6E355FA05DF6D0" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A31B8B9181073C87" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="997B19D1FA7256C1" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="D2B96222B13DDF8" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="6008345DD8D21E9D" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="AA7E4E9D5A6F88D9" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="28163251198A2583" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="244F8F2CB4CCD64E" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="73F1B37373DBBA8" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="AB130DB0C20036F1" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="F34D8AFB9B5B1D59" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="85D80EE234D5F5F5" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7FD262DFD6EA7C5A" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="CEBCB23E6FAA03D3" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="7189E3BAF730917" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="728F4A93835592D9" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="FCEE75FCAD017FAD" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BC165D195209ADC0" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="95DEFE333CB67413" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="13FBF8CD184CF281" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="22AE89C704A31172" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="55ED6950652E0D41" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="588E251A83F1A660" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="9231A2F0491320E6" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E2DAA5CAD3C54E6" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="9F832FB20CA6F0E4" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="D70D00FB105D8C3D" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="2F86E915EF5D1635" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="AEB507769720B668" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="B4EDF218D9C49D95" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="98BAD3C00FD73395" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="4FEC0BD7F4AE8EE" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="27876F079DD56B39" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8D7242748F50E210" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="92CA2BF750D2FA3E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F7A91264D7E3593" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="30C8FA8FE4DA4807" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F3D47147E591EF4B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="28BD6998819A845" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="95E7CC30459AAFC6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3CD63C6C1DA6FD33" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C661D37AE3510447" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C9C64DA57D3101BC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="25A41C1D06B4D8DB" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6F9B85F0AF97E5CB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="305AE8655782F9F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DF8C0F7936421FDA" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AE72071F90BCF204" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3719013EC91EF8DF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="441EC04314DCA764" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6A37B8B31009F8A3" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="BFDEC9F6AB28AD7" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="E20CF8B67976EC97" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="704C8300164367BC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4300E59A8D811897" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="7AD7CC68986EBE6B" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="88CC624FB9AB8DD9" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="31B0195705E40DEF" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1D4E2B602E56BB91" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D37FB8C06C14B290" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E7BE62B7394AF161" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A77ABE039845F4D0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="E0B37B2C1EF03EDD" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A82097860D8E8825" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EDC46A893C23E950" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A2A6DFC253D8F3EC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EF6B11FCDC57795" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="345597B932341009" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C619D53A600FCCC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F7F436C1F059B587" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7B7C9C55E97D7AF2" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C883B74D0AE12586" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="14DEF0DAFA16864" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3F1F6F105B80E67" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C0D71A26903D7849" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C5BBD141039C773A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="78908A494D5657BB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="F3FF22F2F2758FCD" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="B961A9DC85F937F6" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A296766FCE8DCD38" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="DBCDB81FFFE4CBE7" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="965C237DB5920A77" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8F69B3A64A37C469" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3F66883E9F170C05" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="27E84A5287C1F76F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="FADFBA20FC01F700" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="91BE884C69C52D42" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2D77535B0A7DAA6F" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="57558B79C933324E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="48275DD5C03A40A3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C11F9B3FE243E202" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A80B07899DF5C687" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="DBBAFCBA1F0558EC" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="56186FB0FE009EFD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="281244E54F0F2E97" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D26964EA58232434" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BFDAF1E8876E3B4E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68817C86BE360C94" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F8332F6F710849D0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="67D059400FA84E37" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="60825DCCDE9C6CB8" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="output" class="TunableScenarioPhaseOutput" display="Output" muid="2959F14066DA0631" description="A phase output containing loot and next phase or outcome." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="output" class="ScenarioPhaseOutputData" display="Output" muid="86F6BD8D6637AF0F" description="Data containing condition and next phase or outcome." Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="next_phase" class="TunableReference" display="Next Phase" muid="122A5C630EC88FF2" description="The next phase.&#xA;If this is set do not set scenario_outcome, because setting this will&#xA;make scenario progress to next phase and outcome is about what&#xA;happens in the end of the scenario." allow_none="True" Deprecated="False" export_modes="client_binary" filter="0" group="General" pack_safe="True" restrict="ScenarioPhase" />
                        <TunableTuple name="output_loot" class="TunableScenarioPhaseLoot" display="Output Loot" muid="51A8E615CCAC6F7C" description="Phase output loot." Deprecated="False" filter="0" group="General">
                            <TunableList name="loots" class="TunableList" display="Loots" muid="52812D542DBCDE01" description="A list of loots to apply as a scenario outcome." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="4F48D27A686910A8" description="                " Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="scenario_loot" class="TunableTuple" display="Scenario Loot" muid="57B28CB7F977AE5" description="A loot action and a list of targets." Deprecated="False" filter="0" group="General">
                                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="83A395005C2AD2D0" description="The role of main targets for the loot.&#xA;Loot will be applied to every sim in the scenario with the specified role using that sim as the &#xA;actor participant in the loot.&#xA;E.g. loot that is applied to &quot;Actor&quot; will be applied to the every sim in the specified role&#xA;E.g. loot that is applied to &quot;SignificantOtherActor&quot; will be applied to the significant others &#xA;of every sim in the specified role.&#xA;Leave this empty if loot subject(s) are globally available participants that aren't related to &#xA;sims in a role.  E.g. &quot;ActiveHousehold&quot;, &quot;AllInstancedSims&quot;." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="D209A20493C0DCDA" description="An alternative way(to actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                        <Tunable type="action" name="loot_action" class="TunableReference" display="Loot Action" muid="DBC31359675BBC8A" description="An action that will be applied to everyone in the list of targets." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                                        <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="D1EDC0D886FD100E" description="The role of secondary targets for the loot.&#xA;Fill secondary target only for loots requiring pair of sims. Like relationship loots.&#xA;Loot will be applied between every pair of sims in the scenario with (actor_role, secondary_actor_role)" allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                        <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="A4519E0C83C61391" description="An alternative way(to secondary_actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                        <Tunable type="snippet" name="scenario_outcome" class="TunableReference" display="Scenario Outcome" muid="ECB0F69FF7C11189" description="The scenario outcome.&#xA;If this is set, do not set next_phase, because&#xA;outcome is the end point of the scenario." allow_none="True" Deprecated="False" export_modes="client_binary" filter="0" group="General" pack_safe="True" restrict="ScenarioOutcome" />
                    </TunableTuple>
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <TunableTuple name="pre_tests" class="TunableScenarioTestSet" display="Pre Tests" muid="913A3CF3B1D9EE5B" description="A set of tests on the player sim and environment that all must&#xA;pass for the phase to be activated. e.g. Player Sim&#xA;has cooking skill level 7." Deprecated="False" filter="0" group="Tests">
            <TunableList name="scenario_tests" class="TunableList" display="Scenario Tests" muid="71B43CAD8E130005" description="List of tuples containing a test and actor role.&#xA;Test can be selected from a set of tests that is tailored for scenario use." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableScenarioTest" muid="211FC3A771D10DEF" description="A tuple containing a test and actor role.&#xA;If actor_role is set the test will run for everyone in the scenario with selected role." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="scenario_test" class="TunableTuple" display="Scenario Test" muid="A6B485CC3581A038" description="A tuple of tests and actor_role.             " Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="B29B090A0AEDEFA5" description="If this is not empty and subject of the test is actor;&#xA;the test will be applied to everyone in the scenario with selected role." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="F7CB8B20306A22F9" description="An alternative way(to actor_role) to access sim_info for the tests requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="9958FA13D5C738A8" description="The role of secondary targets for the tests.&#xA;Fill secondary target only for tests requiring pair of sims. Like relationship tests." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="EDC293FC134ADEF0" description="An alternative way(to secondary_actor_role) to access sim_info for the tests requiring second sim.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <TunableVariant type="None" name="test" class="TunablePhaseTestSetVariant" default="none" display="Test" muid="1AB9B3633D57F3A1" description="A test that can be used in various parts of the scenario.&#xA;It can be selected from a pool of tests that are put together for scenario use." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="aspiration_track_completed" class="TunableCompletedAspirationTrackTest" display="Aspiration Track Completed" muid="78B55B3FC1F1B1AE" description="A tunable test that tests if a Sim has completed an aspiration track." Deprecated="False" filter="0" group="General">
                                <TunableList name="aspiration_tracks" class="TunableList" display="Aspiration Tracks" muid="A08644A8D67286B2" description="A list of AspirationTracks to consider. If left empty, the test&#xA;will consider all AspirationTracks." Deprecated="False" filter="0" group="General">
                                    <Tunable type="aspiration_track" class="TunableReference" muid="4B50FC0232151DBD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="levels" class="OptionalTunable" default="disabled" display="Levels" muid="DB97C8610BA36F5F" description="If enabled, the number of levels that should be completed in a single&#xA;aspiration track. If disabled, all levels in the aspiration track&#xA;must be completed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B4532EB361C8396" />
                                    <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="22140E47C373FDFD" min="1" max="None" description="The number of levels that should be completed in a single&#xA;aspiration track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="5FDE56760EFCEABE" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="319458DDA9731EE4" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AE0080144D20ACE8" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="65E1322579E7E1A9" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="bucks_perks_test" class="TunableBucksPerkTest" display="Bucks Perks Test" muid="E2A79497C95E362F" description="A test to check whether or not a household or sim has a specific Bucks Perk&#xA;unlocked." Deprecated="False" filter="0" group="General">
                                <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="145F0A1DC7D17CE0" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="930532221585223E" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="44792108B10FD0AE" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="330E00CFE0021FED" />
                                    <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="6E5CF43A4D2CCC6B" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="648F1BE2BA0964D1" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="13DAFC4470468F5A" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="67F9B450C86710CD" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="678882464C2F553F" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="buff" class="TunableReference" muid="1A7ADC9587F8EE4D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="85511E44C8FBACC8" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="24F777963576A907" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="1C98F677655AF5FA" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F7AA5BC47F7AABA7" />
                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2A05857731564EE3" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="buff" class="TunableReference" muid="46E3C2E2975F24FC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="4F2E28FF7E22029B" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EBA7270E169E35B" />
                                    <TunableList name="enabled" class="TunableTags" display="Enabled" muid="68CAE9CD829BCE87" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="773F6DB2C58F1EBF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="24B106FD6A0036BB" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="EB018A895A5C1FCF" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="8D97E31A9FD156B2" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="B9C3BF1CA4FD863C" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="2C0F98E34098BD5C" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A09F880B0F569F75" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="13DA011DBF5DE538" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="74F8B96F6FC11406" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="3F4B3B3998C12ACB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="57A179F1BCB16A65" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="9A9CA1938C640ACF" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="427F043D64D90FB1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9DC980B48A93DBAB" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5880070A02F0914D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="41F77F67FF88B29B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="95CECDF3EC1EA6EA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BBCADA93BCE6A072" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="484F574BF47F4760" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="80AF50C2F909B58F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BBEE32E56191222B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="16E1B74FA9A9F9DC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8A1DE0A1A19D0A2E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="CEE7450B6524F82F" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BBE45C54BEF9D12F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ED8A9E62C4502A04" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="38C6FD9F6A7D0F1C" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="62BCDF35CC8E3C01" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C4F1EC675B34B47E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="895105CA40E54BC9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="AE7BF7926B4130A1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="3A38DE81F27F8473" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="89C2CA37FCC53545" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="9C0EF306630ACFDB" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="7A5DFABB0F33C696" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="F2BD19E20CCA2849" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7F55942E803AD165" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="929BF4CFD44C69A4" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="7D4A88D0D87F89FE" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="B6F8444422CE78A6" />
                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="35FC8B60563A470C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableVariant>
                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="922B027B75C28F56" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="947547977AAC8FB2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="222033A0B697F899" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D720610D42748233" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="68506F2540D562DC" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="DB235B7C98FFB30D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="BC0ED485D33F4CC6" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="CE998B31AD63B078" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="48FA315FF047D122" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="C82549B3CF3CAE0" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC6C960E2B0AE7D6" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="5285606204F17A41" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="88F7C1EAE08932E2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="CA50C3BF6BDBC5E2" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="6C25B3A66C83B5A9" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                        <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="AC2DE399B2B6383" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="DBBA60972A6B415B" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="F7277D447C0BBDDE" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="8CDFD6B76FF38540" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="36BFAC415EE6E9D9" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="5B6FAED3B8F3030C" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="1C407B6AEC0A08AF" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5D9CF1ACD5CC7FE1" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="7ABA7EBC9407EEA8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="6E2370B6FA904E0D" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="826A616767B2B779" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="286356F2B390A0EB" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="B2184F488C622A0B" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="CA2FD0C4C74722E6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="764D70D681B829CF" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE86F866A32F2CA8" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="6F4FF181C9622A9C" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8E4EB95B2C26D8D7" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="574A93F700FE0142" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="642A907783749817" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="F183D8E4393AF7FD" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="A01A23D53DBAF0EC" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6655CC678E40353C" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="58B03BE051CFB67E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1D727EF58DB60565" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="C64D5D76678D615" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="BB88A9B6EFF5B4D5" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="2B448D2767767BC" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2A29D0D537365960" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7A0172DEBD2B3A16" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="ACC2B8D5FAFE8A8A" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="AA57E761C01A5D29" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="2F2B4A35BBE6D5F2" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="6FFB6130D5A26EF7" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="4DF2752CBF36F3EE" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="CA5E3B7FD6A59041" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="53CE30DA4ABD8771" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="BD9C8556A5D58B6E" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="C59D439D963ABCE2" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="2EA760F68169C2D9" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="careers" class="TunableSet" display="Careers" muid="9967BE61E85D25B5" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="31F4884F79306DB0" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="84B3D628D986166B" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CB36410795728D89" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="34AD04C15B321C3D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B0E30CC2AFFF0475" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7ACAEADA524AD038" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="447DBAD8B22E30A4" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="54FD1662CD60D916" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B10CDB629BE2CB0D" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A1F6AF76C27E9CF7" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="65C5089678DB464D" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="4E3423F0CD698D29" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="C53E91F19E76FB28" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9E1DA874F53CE0A1" />
                                            <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="B01EE14602CBE332" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7436474EBFD5F474" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FEB3DF0F9C6414E1" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1AC3B02200E1F51C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="419363D598E5128E" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A1604E2B7F3EC2D1" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="6281795A0C5FF495" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="4B44BAA562C58C5C" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="94BF728AEA6D8FF7" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="5029BC8A331A15C9" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="C41C6A6D42526612" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                        <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="B667847AC845D448" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="E5AC461E0365710F" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="9146853685DADE27" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42541ABF8DD6467" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="AF1A4A4997EB83E4" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="career" class="TunableReference" muid="DB4986B3C929A0AD" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="448CA621D19A7564" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="72CA7FB3DEFF7C00" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6934CF63588B33D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="39758CB694756404" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5E1D20048BE5AE29" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE29266EC08F63" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9B7348DF03C7E1A0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="E158B7E8C05541DD" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="DABA40DC2CD669F7" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any" class="TunableExistance" display="Any" muid="1F719ACD04E4D1FF" />
                                            <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="2FB6EA4FCB2136FE" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="53E8364817FE1757" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="F8005FC43B179A2F" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="C06CE42B90962F0" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="E2AD2E2E00A430F1" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="3F8CB0F4BEF93FAE" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="71644C9BA49EC3C7" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="735B166AD5599760" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="141C3AD7CCB5465A" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="D40697893BFF0DE4" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5814DD773C6EA693" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E72D07496A3659CF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="E1775C6164F5AD" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="E349487D346D05A8" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F25FA29EE98EC09" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="190160530AFA306F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="FB93634B73B706E3" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D4B5213FCC8B6113" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="FD871F6B3522C2AA" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="FE62D534AC8BD442" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="9CABC08179734356" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="68873E3C713B7034" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="1DF522F9191ABB4B" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career_daily_task_completed_test" class="TunableCareerDailyTaskCompletedTest" display="Career Daily Task Completed Test" muid="2AB7C73628386555" description="Tests if the subject completed their daily tasks in their career." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="career" class="OptionalTunable" default="disabled" display="Career" muid="E107383AE44D0ECA" description="If tuned, this test will run against a specific career instead of &#xA;against any career." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AAE21973738009AB" />
                                    <Tunable type="career" name="enabled" class="TunableReference" display="Enabled" muid="DAD546A5FC370F84" description="The specific career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="club" class="TunableClubTest" display="Club" muid="F1DA8CD4FB7263DA" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="2958842A07E33656" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29D55658E39B1D56" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="D1F51170F25D1156" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                        <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="B2BD06FAC566D89A" />
                                        <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="8CF304AF3A18337D" />
                                        <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="BD52EEB5627B138B" />
                                        <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="2CCA965978AD15A1" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="81EF3FADAB0D86C2" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B231A4FE44140331" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="589D976C559F6665" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Leader" class="TunableExistance" display="Leader" muid="3DD45778859A776B" />
                                        <Tunable name="Member" class="TunableExistance" display="Member" muid="F9E01ADA3542070F" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="A6588B06C51297F" />
                                        <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="905CAF3E2C04945F" />
                                        <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="8D4BF8C597B75F52" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="982856B7244E9592" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C316FA8FCE2D642F" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F714FDF4D9FBBAB6" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="9863D59255AE87E4" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="55E8DF853924DDB6" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5FBD9B643AB83B1C" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="25899C460EDAD975" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="9D5459097B68A367" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C0E72AD1DA9D774" />
                                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="C01C63EC7E1A887E" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="CEC22E7B9BAB9C77" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="583921EFA9CF76FF" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="68CC511C08EB630B" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="63FD5D97AA8F5B80" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F6719F46260B9D68" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="C448F0F23A833D2A" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2E6C6BD6DF7FBA23" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="B92D8AE7BBE70461" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="19B2680691DD5DBB" />
                                        <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="4A2DD74AF15998B9" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="ADDD3BC24F54E073" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="2FD67CA4EA313BF6" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6DAA49A73F17276B" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="F1D79ACA801F70A3" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="77F88FC4BADB4FC2" />
                                        <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="325B1EEB5928F5AF" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="CBEDC13B15836B4D" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="5912D0F369C4E02" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C73BD18664FD7A4" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="8CB0F2006BC6CAF" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="497ACDAE0D2918C7" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="2F38DBF3346B36A2" />
                                        <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="47E10D5915160EFA" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="4A32CAA7A1DFB8BF" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="91DEF76E9F1BD5" />
                                    <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="D4EF300F84AF8AE2" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="19E42FC2B2BF30BF" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="61427BC17BCDBF79" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="71247CA3BC8790DB" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="3EA50596FB4FECB6" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="AAE9AC86905368B9" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="E8EB23BC0E1A99A3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="2F8D7AAAD963264F" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="55CBEECE1755ADCB" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="C9CFB5DA6519DAE7" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="113F14690A1041B6" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="96959EBB91B6EEF5" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="A2A5C9D038E5A763" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="FEA76AD348544672" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5ACE6DFC1A928294" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="99720209D9208A4A" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="6E660ACA2FC09145" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9B39999306285D5" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="1004F3E12A2F5047" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="43C5321A20624CA7" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="8DF10C2543E58CB8" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="6DA7603C5AD6B242" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="5DF3F7F12616A1A8" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="8DDB415F28FA0871" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                        <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="3DFC2D2DCD9B5D06" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="F89558D1624F526E" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="311BF30DA6F511DA" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                        <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="146DF1B46031729D" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                            <Tunable type="object" class="TunableReference" muid="D7C2E6A9E2C11CF1" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="83F6C4A9DA7B8FA3" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="276AAE47146DD5F2" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="4B5C2B15095A9CFE" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="93E91C5C0291AFBB" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC230AA5BBE5B4C4" />
                                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="DBE8F0A704C65DBA" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" class="TunableReference" muid="4B71FA1E02A07E97" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="794F335DA214514C" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F26F373E5E299077" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="69244524967445FD" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="dead_test" class="TunableDeadTest" display="Dead Test" muid="794139FC3CB45EF5" description="Test to see if sim is dead. It is true is sim is a ghost too." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="D036037CCE596C4D" description="If true, invert the result of this test." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="has_lot_owner" class="TunableHasLotOwnerTest" display="Has Lot Owner" muid="7D015859CE08560" description="Test to check if the lot has an owner or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="434912F928E3CE04" description="If unchecked, test will not consider, renting as ownership. If&#xA;checked and a sim is renting the current lot then the test will&#xA;treat being rented as having an owner.  If unchecked and a sim&#xA;is renting the current lot then the test will not treat this&#xA;lot as having an owner." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="has_owner" class="Tunable" default="True" display="Has Owner" muid="5B130E74390DC820" description="If checked then the test will return true if the lot has an&#xA;owner.&#xA;If unchecked then the test will return true if the lot does not&#xA;have an owner." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="267868BF0A4D07D6" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="28C4DDB830B8E0EA" description="The type of test to " Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="D88240AAAB80B650" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="5ECF936FF4572DBB" description="The number of household members." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="60BE72637D47B076" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="853ED39CD3D99A4E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="count" class="TunableTuple" display="Count" muid="522D47051F1F4A77" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C85561F7B171C163" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="826FE8FBB8AAD336" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="87D3C811FCFA266" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="3DC9B938E4CC9A05" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="B6BEB5FCE4C083FD" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="533D84BF63AA4025" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="2B0C6E05F7B9E83F" description="The number of household members." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CCA7FA5B785278A6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="1090BBA236D10E7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="48AB9B559CA467FA" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="A6564217419D2CD3" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="FD6C650F0D0B2133" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="3912C039D383547D" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="5DCE0F37F5004F9D" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                            </TunableTuple>
                                            <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="D57DC5A7D8D9A066" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="B7D1868421E57DA5" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="9CEE18F71A0ACB3C" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="9613A994CCB9BEBF" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="390862DF2930A87" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="933B4B044A8EA311" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="30F05440B8ECA2EC" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="1E3F1144418EDE17" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="D75364909D2AC0DE" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="EB58604B3B1201C2" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="8262C94598D7282" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="C61F8A3F609B99B7" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5074C16014155037" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="BDA0B4303BA26849" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="9C1F89208EDC412D" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E39F1FA34DCD15B8" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CEB77960CEC2F988" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="9014B87069AEC340" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="A57455DC55F5E3EB" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B2ADFC1A38F0BE2D" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="56FB13E0FCAD3910" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="78E5476509DEFF56" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="AE0E40801614048D" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="BA46014945BF19AD" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="68ECA52E9B1714A7" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="4B5AF11AAB3B5893" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="5BCCEC27E7BB744B" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="8EAB7B1F15D996F0" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F91130593A0A7BE" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="65FB2D4C0F954E4E" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="511237304F38CA58" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="897CCFFAA2ED7C99" />
                                    <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="97D26DC0AE05B0F" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="9541D31CC2C82A42" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="A926F96475D45A6B" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="831EF96E92B45B2B" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E807A204A0E86117" />
                                                <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="53794BD3A16BB2C1" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="79A5E661EC4D3D01" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6B64DD8A9A0F4A12" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="472930CA528DDD15" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="684B664696258093" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9DD5E8204487698A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1CC538C592FED9A3" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="641167E0BFEA8B6A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="A677487727EC22A1" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="6681665E0394766C" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="F22D8A734AB3CB82" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="9D9EB61B2E082F2E" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="CDF6CF9EB537FD7F" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="94D014DE749A9D2D" Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="4A79D98EE598A879" />
                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="515F6341EC76A88A" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="637C0075A1E62297" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="7348601292873C9E" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="2C6B8F180986F0D7" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="75239333A48C5CEA" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AF3E7648D3797AF5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E26C060D99883FAC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="4FCCFBF639955A4D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="object_state" class="TunableReference" muid="520739E02A372035" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="FAA7F8E4ECF9538B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="7DC6B2BFF7492F31" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="7DA69BCF4F4EB906" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E0AACB034AD6B68A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C1A85619C0A2828C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="4E02262D2BC8837E" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="C555B8826A36D01B" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="94D56B6D0A027B18" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="EDDE6421C5B27F4B" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="9C662A116472B2B8" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="8377BDBEC87E8E5F" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="55AB9D5B8A08576C" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="5F39FD329EAAB909" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FD34C13EDF3FB2A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="62025BC32BE5E368" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="11F5FA0AFF649CA6" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="983EC842C11840DE" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="17CA2BA1D0580A7C" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="33B62A0751BE59A1" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="684D6827DFD95787" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B50EE479BA1E5BA2" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="66C430850407A217" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="CC3D19F59395E2EA" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="56DBD0B500AABB12" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="301E70B21C0CB67A" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="FD1190200C58B5AF" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C4F01FD6A0A66437" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B3ED285ACAE57667" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="B53FFFA66D66D163" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2152FCFD4AE2E778" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="489F763CE51331D5" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="4A754B7CA8C68814" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BF986F0F02F210F8" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7ACF693811CE0EF4" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="23AD4AFE1441101C" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C6496457A5C00FE3" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C03A0E96E149962C" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="1C75BFAB2571B170" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="B1593DCBD68AA31B" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="27CC7FE40DEEA528" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="B38EAD610C940AD8" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="4FD7BF6AEF724AE2" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="CE0857714D1EAC35" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="4771EAD29D89AC62" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="2C0D242DE05AC23D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="8B8536B2F66307E4" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B7B63C3DE3B1E6D9" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6B4BEAB0CE1687A3" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="DF9B1093950C0449" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3A36977ADC9217E" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="454886D3F5D0680A" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="D015CBF03A0F36FF" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2577886E3E33E5FC" />
                                        <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="F9974EFD22C99C1E" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="B43802EF8EC7A3BE" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="EFBBED303BA921C2" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="E741032E4976D22D" Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="6E06514D8487F274" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="2A24F26F964E2483" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="15FDC4A42EFC70E2" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="61A1F27999E75062" />
                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4B0229E4379C561B" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3A2BF8F3FCC7A1BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="B43498AB1130D97C" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="EF26FAE04296DBDC" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="977E8C2E0FEA1482" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="55663E26C6CD1377" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="938C8B0F3320C884" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="154F667EA48871F1" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A80383C219112393" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="30E5495E83EF0A29" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="89F6D836059BF1FC" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="D13DD2DD22355DBE" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="34671B73710DFF6C" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FE1D5BC04BADA89F" />
                                        <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="833B7BE9C8ED6234" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EE9D88CF66461D29" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F5DAB5BD172FF582" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CB5A344435645EFE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BB06D14BBF8EC9F7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="D40CA3F74F8574AC" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="280FE41FEE0B0096" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E125A263636D5A92" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4636327B22B12566" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2DF7BBA2F7C9DF7C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D24F2753C687D7B7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A58A5F315C1CB79B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="A1A8E87A9D35D42A" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="B7CD126CBBB8C984" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F3373B73CA618518" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DD980CA4652610AD" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C9BAF294BC15ADDA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8FE9FCCD86412263" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D4D61C21BFE5213E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="EAB2BFE7AE16C945" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="652E45B546C0B045" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="locked_portal_count" class="TunableLockedPortalCountTest" display="Locked Portal Count" muid="DC8410487A0A9E00" description="A test that checks the number of locked doors." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="lock_priority" class="OptionalTunable" default="all_priorities" display="Lock Priority" muid="F02F41ED2B57A8B0" description="The priority of the locks we want to test. None means all priorities." Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_priorities" class="TunableExistance" display="All Priorities" muid="8872730516A726CD" />
                                    <TunableEnum type="LockPriority" name="specify_priority" class="TunableEnumEntry" default="PLAYER_LOCK" display="Specify Priority" muid="912337FD51661DB1" static_entries="objects-components-portal_locking_enums.LockPriority" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="lock_types" class="OptionalTunable" default="all_lock_types" display="Lock Types" muid="22F2DDFEE9C65B5B" description="The type of the locks we want to test. None means all types." Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_lock_types" class="TunableExistance" display="All Lock Types" muid="B55A6BD30291AA2F" />
                                    <TunableList name="specify_lock_type" class="TunableEnumSet" display="Specify Lock Type" muid="6FCEE7D747826362" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="LockType" class="TunableEnumEntry" default="LOCK_ALL_WITH_SIMID_EXCEPTION" muid="1797A22B429F8C6D" static_entries="objects-components-portal_locking_enums.LockType" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableTuple name="number_to_test" class="TunableThreshold" display="Number To Test" muid="1E60B0D113AC162C" description="The number of doors that need to be locked to pass this test." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C09E4636F97847AA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C9AB80B2F45D4EC5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="ECA66B4868C43A5A" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="4E7919E154BB0F12" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="858088627911714D" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="3AD7586F3F596A5D" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="8D0CF253950455C3" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="E2D8B717A11FAF3A" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="83901C59EBF7A809" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="576F800D00C1DF88" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                            <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="63181C1782454BEB" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                                <TunableList name="stats" class="TunableList" display="Stats" muid="DC08BEA8DA75FD0E" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                                    <Tunable type="statistic" class="TunableReference" muid="637E05160A01E3D8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C924D82F17FF1177" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="29DEB68BEA4D8204" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9BCF353CDB431CBC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="nearby_floor_feature" class="TunableNearbyFloorFeatureTest" display="Nearby Floor Feature" muid="D7656037BF98D6CF" description="A tunable test that checks if a specified floor feature is within a&#xA;radius of a given actor." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="FloorFeatureType" name="floor_feature" class="TunableEnumEntry" default="BURNT" display="Floor Feature" muid="F0701EF38D436DB4" static_entries="build_buy.FloorFeatureType" description="The floor feature type that is required to be inside the radius_actor's&#xA;radius." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="B56632BA461C4764" description="The radius, with the radius actor's position, that defines the area&#xA;within which the floor feature is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <Tunable name="none" class="TunableExistance" display="None" muid="E4BEC65957E180A4" />
                            <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="B557D74F414CD90C" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="4BD5A329996D3D29" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="31A4E9C029DDFC0C" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7A63C0DAD1931AF" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="98178E180867BC08" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B219D1E9E6E034BC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="9CF12F4D55C64A74" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="4CE164AB5F5C5523" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="7A15F3E816B23901" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="3C09FE9FE8C3080E" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="EE5B32A65B5BE5AF" />
                                    <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="29D87E312ED5D53F" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A8C6FE887DC9AABF" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B12C31701CDA8D3A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="36797954BE06137C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="2D057EDF00DBED92" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="7CA3E333657C4A98" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="571856E9E3B4323B" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="21659D1264C27D76" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="72351D57EE12A2B2" />
                                    <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="D687B05C22B9CD53" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="A698791C616AE415" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="400A5DCDC85910BB" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="8B8AED6B7C96BBEB" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="F7FE45A739DE70D1" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="D8F1D9A1B36244AA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="15BDA65FA4477E9F" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="561EC08E00B352B" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="41BABE9B22F4A51F" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="2D751DA1963D4B5F" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="696CF0FE7827FB1" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="D750C117118570AE" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="21D97B2AD505AD34" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="E120C635166C1C74" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="9F6B99C26B5C028D" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D1B88BB5D570AE38" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D711623E52C2B84B" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="57B89F48436E17B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="25356A1860785F2D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="E7AE0A9C5DF8EAF5" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="95AAFAEB9BF28A69" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="test_events" class="TunableList" display="Test Events" muid="F87FCC44725C0736" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="5173E4179EBB3CD2" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="86BBE0CA20BE11A2" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="2780DFB70ED20F9E" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8EB53F76FC5BD5B" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="34D970EC0CE78A31" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CBA78145F78A4356" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D5EB427C6447E146" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AD2FDAD45323307A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="50820C3FB7566424" Deprecated="False" filter="0" group="General">
                                            <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="B1B93898B2018CBF" />
                                            <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="1011624E4BF4DEE1" />
                                            <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="39F8872902F81BA7" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="9C6542AB0F6A0AD7" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="B7956BF2D38643D0" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="6BF376977E64EEF5" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="6269AE102A27B0A" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B68296D248A3F637" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="850162B89D1FBC8F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C0C8C46ED7CA0865" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="C0FD251A46F6A0BF" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="37566B0C432B046C" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="438F015D42B02AF2" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="BAB808C245EABEF1" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="128D075C5DE28382" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5DC5871937E695EE" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="5DA2D17322962125" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2916AA7174408520" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3178AD0F1EB6271F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="95F110BB91D5FE3D" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="F588900F4A523D80" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="E4AFCDA38DC25A92" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="B78A12C05443A29E" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="EC23C5F726E9764" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="44CE4507F579F75A" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="E5C7D84DFDE9B640" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="CE3329CF0E971E7E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="10E242C9E487A0C4" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="83D3F8390AE85221" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="84915E2FFF310C15" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="67085354310F3533" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="AD91A795EC657EBB" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="D79DE5677FF51931" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="5AB8C93586F75FAC" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="FA619D501BD0E3B6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="5C1F46A07BF86ACB" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="1D6A943B005D2F68" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="A842D359EF0EE201" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="29360AAC4E41152A" />
                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="CCF3DAECD8F0303C" />
                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="811BFF847ADB4780" />
                                </TunableVariant>
                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="F9F08B7B98CE617" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                            </TunableTuple>
                            <TunableTuple name="relative_statistic" class="TunableRelativeStatTest" display="Relative Statistic" muid="D12A56DC1A2FB65E" description="A Test that compares statistics against each other either &#xA;on the same participant or on two different participants.&#xA;I.E. I want this to pass only when the actor has lower hunger than the target.&#xA;I.E. I want this to pass only when the targets's hunger is lower than their bladder.&#xA;&#xA;If either of the Sims doesn't have the stat being compared the value will&#xA;default to the initial value of the stat, or in the case that rank is being&#xA;used, then the initial rank will be used." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="376CEC816CD0A07F" static_entries="sims4-math.Operator" description="The comparison to perform against the value. The test passes if (source_stat comparison target)" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="difference" class="Tunable" default="0" display="Difference" muid="E8B5F7F70FBD59F7" description="The difference between the source and target stat in order to pass &#xA;the threshold. This value is added to the source stat value and the &#xA;threshold is checked against the resulting value." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="A12A2E56DA2DA8E3" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="5B27776164F00104" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="D1C1D7DD147414BA" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="7700AD79CF66C3D8" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="D1D5E44C7A8B3CBB" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="2B2C5D2657FE1935" description="The stat we are using for the comparison" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableList name="target_stats" class="TunableList" display="Target Stats" muid="B3BE64B19A22DC42" description="The stat on the target we want to compare against.&#xA;If there is more than one, all must pass the comparison.&#xA;If there is none, it compares the same stat." Deprecated="False" filter="0" group="General">
                                    <Tunable type="statistic" class="TunableReference" muid="1F21FF858C3D443" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="70923834FF5FBC02" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DD1CB1321BA44930" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="425CCA4A6798552C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="satisfaction_points" class="TunableSatisfactionPointTest" display="Satisfaction Points" muid="84988CE738D8D208" description="Test to see if the target Sim has a tunable threshold of satisfaction &#xA;points" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="2E04A11817D35D27" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="93C4CCD5EAC63E82" description="The threshold to control availability based on the statistic's value" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9D4CFE93E43F613C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5C098F56C4765147" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="scenario_goal_complete_test" class="TunableScenarioGoalCompletedTest" display="Scenario Goal Complete Test" muid="68AD626E999A3FE1" description="Test if a situation goal is completed in the active scenario." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="5AF788F05BF4C3EF" description="The situation goal to be checked if it is completed in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="scenario_phase_triggered_test" class="TunableScenarioPhaseTriggeredTest" display="Scenario Phase Triggered Test" muid="6EDD8D45FE9B0621" description="Test if a situation goal is completed in the scenario." Deprecated="False" filter="0" group="General">
                                <Tunable type="snippet" name="scenario_phase" class="TunableReference" display="Scenario Phase" muid="1E81DD892876FB7F" description="The phase to be checked if it is triggered in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioPhase" />
                            </TunableTuple>
                            <TunableTuple name="scenario_relationship" class="TunableScenarioRelationshipTest" display="Scenario Relationship" muid="B438B1161DFF48B5" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="B601A85DABFA526D" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="EB2A33B2C1CAAD57" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="26DA26F46043D24A" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="5C4EA7A15D9DAAD6" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="8CAE79D27768B3F1" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="C4479974A5CD4214" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="B6B85E2D1BEACCAE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="A16B826AD3D47157" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="21CBF785D645EE01" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="185DEBFD480862C7" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="E7B899403A7070C1" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="353169C9B78DED04" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="376D3174A14BA70" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="6EF2FCF0899A9B5D" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="EA23323CE3301421" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableList name="target_scenario_roles" class="TunableList" display="Target Scenario Roles" muid="48D443B4536F66EC" min="1" description="A list of scenario roles. The relationship test will target all other&#xA;sims in the household of the subject sim that have a tuned scenario &#xA;role." Deprecated="False" filter="0" group="General">
                                    <Tunable type="snippet" class="TunableReference" muid="B0590BA1A2145B18" description="The scenario role." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                </TunableList>
                                <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="83B5BCBEF402B77F" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="1A8B8564176C9F27" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="537744EAE03331F4" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A094EFC371CC3EE4" />
                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="93260DAB069F7DD2" />
                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="46B687FF4F78B262" />
                                </TunableVariant>
                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="A419A600D63E5117" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                            </TunableTuple>
                            <TunableTuple name="scenario_role_test" class="TunableScenarioRoleTest" display="Scenario Role Test" muid="BE074AB6E27F3085" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="8969D1AA68526AAD" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="927B9FF1B153AAC" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="AC29B1FF806471DF" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                <TunableEnum type="ParticipantTypeSingleSim" name="target_sim" class="TunableEnumEntry" default="Actor" display="Target Sim" muid="B9C1888806041A1C" static_entries="interactions.ParticipantTypeSingleSim" description="The target Sim of this test." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6F886319A203A236" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6608A4E030FEA133" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="BA7C0326F7AC53A7" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="32C96F285F16E059" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="9E82BD0DA0F6186D" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="8E9B4610E3EB69B8" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="29BD005433D63BB3" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="9120787581BC4DFE" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E08359FF9519102" />
                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="A92F93D09B67E8DE" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="AC8C788F9AA25020" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="8CA3D753952A8A38" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="11AAAF8B27C96115" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="in_current_zone" class="Tunable" default="False" display="In Current Zone" muid="3E52E727648CE223" description="If enabled, check if any matching Sims are in the current zone." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="5C9E970E3AD66980" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                                <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="F4647771CA89C528" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="5BE84D54E978E272" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2D73CDC54521A19F" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="93E1AC112F7A2003" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2FBC54F5BD3E463A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E20CAA7396D40C45" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="67AE4C5D6B3D1B4A" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="75E50816B3104B26" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                    <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="E0D5B199451951C1" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="B63A4631FC217BF6" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D744E7935FAC489B" />
                                </TunableVariant>
                                <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="4786475C6A8B9E85" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="FED09F323B75E72A" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="13A858C553CD3DBF" />
                                </TunableVariant>
                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="F41BB67B9F4BC271" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="C60ADB721131322D" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="2329513E0BB0B101" />
                                </TunableVariant>
                                <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="E2355D8A68152EFD" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3434922065080432" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="C36CE75C732AC43E" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="D1441C791D1CEE2E" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EF1C9AEBC9B2CE8" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="453E6A252A096143" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="A982C7856BB26DF4" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="83142851FCF6AF59" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="163110F5E0CA93B3" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="805365693428987D" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="2D2A9B65046AF53B" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="BDF0F63683A08D38" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="8D355FEE4FE58D43" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="7C3EBC3E80899DB3" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="1A5E1EF45EEEC053" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="57BB1783B5A54F35" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="AC87BE0E5D382C26" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                    </TunableTuple>
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="13D87DFA337DF35F" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="simoleons" class="TunableSimoleonsTest" display="Simoleons" muid="803949038261C25C" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="11EB2181C87AE68D" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="15D5016D651B080B" />
                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="B7D2936CE0801E6E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="FFCAC0D8C9968B99" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="9BAEE24FE1CB1B61" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="8F7EA77A6C136D3C" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="A539568635D2464B" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="40E0D90DEEFABE20" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="555D8E8FD685DB1B" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="858400C90BE5A514" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="6F60491EB4755B37" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                    <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="38C6DEB5BE5DACFC" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="35560C0A3110E688" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                    <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="FE5A448E44F74250" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="2385E704D36325AD" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                    <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="233A363143C717DA" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="8092D1625A674EF" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="D610631B3221DD53" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3747CE7B2F4AF721" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8FE5CC87159DAD91" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="429CF716C8DF5BE3" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="EAE0253BE6486988" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                                <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="2F3027CE2A076AFF" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2DB2D362C2E20F8C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="3E8C6D56A6DB83CD" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="situation_job" class="TunableReference" muid="BD0F3F6E2EE0BB6F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="62F1C4E7EA389BE8" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="AD1ACA25204FDEBD" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="F6B4D1690D67DD6C" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="A0B3B7E0CDBA5CDB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="4851E3EA8380E2EA" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D58909506F98855F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3E46D39694735AA1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="BEDBE23C6B5017A1" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="D12591D54FB95779" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                                <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="FDB453BD5B14663" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="DC67358D6EE24FF" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="3E1237FC36CDB0EA" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="45C2D468060AA291" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E3B166298CF36F3E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="6017F790E4EB966E" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="733A128ED60ED7AA" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="CEDF4167461F8ED" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5263B8CA783B99B4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="EE0B66C9019FC001" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="847AB821CB947423" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="59DD4F5B028790C7" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="state" class="TunableStateTest" display="State" muid="142DD4D75280147B" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="18C4F9589A6269C1" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                    <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="25D9AD3639A4AC6B" />
                                    <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="AAFF6F56A94D01E6" />
                                </TunableVariant>
                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="6A30EF2F94AC036E" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="A9663D35D2BF2335" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                            </TunableTuple>
                            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="7352670513E6F632" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B85623C910C87A52" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="F984A1D233B28D52" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="466C6C9C3FE73CDF" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="EC13F27B3E765105" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="FCD12FB3F51772F4" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="CAEFF92EC3D94AE0" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="A03DC4CDFAFDAB94" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="559B1E71CA422AFE" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="A1C53612212A908" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="795C7786612FFA7C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="40975C3962B7134B" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="D8DC49FD28FDA2B5" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="481022051256F9C5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8403E7CF5B930DC2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableDayTimeTest" display="Time Of Day" muid="AEE41FC0E3E1C668" description="Test to see if the current time falls within the tuned range&#xA;and/or is on a valid day." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="days_available" class="OptionalTunable" default="disabled" display="Days Available" muid="DF90C53018777430" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FC0CBA77A02EFD2D" />
                                    <TunableTuple name="enabled" class="TunableAvailableDays" display="Enabled" muid="AC40FD62CABB0E81" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="0 SUNDAY" class="Tunable" default="False" display="0 Sunday" muid="915FEF742172495C" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="1 MONDAY" class="Tunable" default="False" display="1 Monday" muid="E5491DECC11A569F" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="2 TUESDAY" class="Tunable" default="False" display="2 Tuesday" muid="1352B318D5C6CF13" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="3 WEDNESDAY" class="Tunable" default="False" display="3 Wednesday" muid="5AF99743F8D4D448" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="4 THURSDAY" class="Tunable" default="False" display="4 Thursday" muid="2A8EC583DF2E7232" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="5 FRIDAY" class="Tunable" default="False" display="5 Friday" muid="CB73E4BD4F6273E6" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="6 SATURDAY" class="Tunable" default="False" display="6 Saturday" muid="81BC592C865FF2FA" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="is_day" class="OptionalTunable" default="disabled" display="Is Day" muid="FF5B941F215ADB8D" description="If enabled, allows you to only pass the test if it's either day or&#xA;night, as per the Region's tuned sunrise and sunset times." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8A3940769B1059F" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AAA41DAAE72F81CE" description="If checked, this test will only pass if all other criteria are&#xA;met and it's currently day time (between the sunrise and sunset&#xA;times tuned for the current region).&#xA;&#xA;If unchecked, this test will only pass if all other criteria are&#xA;met and it's currently night time (between the sunset and&#xA;sunrise times tune for the current region)." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="time_range" class="OptionalTunable" default="disabled" display="Time Range" muid="40B8B6DF795C80D6" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="61B71111E7FD9DD" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B84A0DD646CD4259" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="begin_time" class="TunableTimeOfDay" display="Begin Time" muid="8F99F04D198B9110" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="hour" class="TunableRange" default="0" display="Hour" muid="94CB618E605C4D7D" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="A7AA11768CE79224" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="duration" class="TunableTimeOfDay" display="Duration" muid="7CFF317EA0AD4281" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="hour" class="TunableRange" default="1" display="Hour" muid="3E5F1C33DBB06D44" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="35C01BEA7D9BA0A6" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="topic" class="TunableTopicTest" display="Topic" muid="322788B7869E9BD8" description="Gate topics of the actor or target Sim." Deprecated="False" filter="0" group="General">
                                <TunableList name="blacklist_topics" class="TunableList" display="Blacklist Topics" muid="B9072F3F5C9A0395" description="The Sim cannot have any topic contained in this list to pass this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="topic" class="TunableReference" muid="D681D7515938166" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="whitelist_topics" class="TunableList" display="Whitelist Topics" muid="4B390CB5CE58931A" description="The Sim must have any topic in this list to pass this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="topic" class="TunableReference" muid="6E43194520AF9351" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="A19DB1F3A3F84EA6" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="3A293395810EB055" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="AEFD8C1CDCC5154B" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="BB4E9096D53F66B7" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="ED4F3D7DF6CD99E8" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="trait" class="TunableReference" muid="F110514A8E5AF6B" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="BCB798EE38069ED4" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="7BD201D95FE27531" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="5A4CED7CAA63B25D" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="E8668E50AD2560A7" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="3CE7C0D3B0E44497" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="trait" class="TunableReference" muid="9056450099F9DBF5" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="venue_availability" class="TunableVenueAvailabilityTest" display="Venue Availability" muid="521AAFA06F481FC1" description="Test for the types of venues available in any Region and possibly compatibility with a participant." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="ownership_test" class="OptionalTunable" default="enabled" display="Ownership Test" muid="877D085B2A5DD754" description="If enabled then when testing venue availability it will test the&#xA;ownership of the venue as tuned within.&#xA;&#xA;If disabled then no ownership test will be applied to the venue." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8DEF1425ED886166" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="fail_if_owned_by_anyone" display="Enabled" muid="F458ED193840FA93" description="How to test the venue for ownership.&#xA;&#xA;If fail if owned by anyone is chosen then any lot owner will &#xA;cause that venue to be unavailable.&#xA;&#xA;If fail if owned by subject is chosen then any venue owned&#xA;by the subject will be considered unavailable." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="fail_if_owned_by_anyone" class="TunableTuple" display="Fail If Owned By Anyone" muid="FFB30B4F50B1095" description="venues that are owned/lived-in by anyone will be excluded &#xA;and considered unavailable." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="fail_if_owned_by_subject" class="TunableTuple" display="Fail If Owned By Subject" muid="5210ECF952C0F8A2" description="venues that are owned/lived in by the tuned subject will be &#xA;excluded and considered unavailable." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeActorTargetSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="F69C838F5DB185D3" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who cares about the venues in the region. This paricipant will be&#xA;used to test for Region Compatibility if checked." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="test_region_compatibility" class="Tunable" default="False" display="Test Region Compatibility" muid="CD0C49B0BA1AEB66" description="If checked, venues in incompatible regions from the subjects'&#xA;region will be excluded and considered unavailable." Deprecated="False" filter="0" group="General" />
                                <TunableList name="venues" class="TunableList" display="Venues" muid="995AEB5A86A352DC" description="A list of venues that we want to be available. If there are no&#xA;venues in the world that match the types in this list, then this&#xA;test will Fail." Deprecated="False" filter="0" group="General">
                                    <Tunable type="venue" class="TunableReference" muid="C244155ED367453F" description="A venue that we want to be available/unavailable." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="3E39E8D9FB25AEE3" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="4DC542B283F4728" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="AB3564FE71CAB2CE" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="38D9A13BA78F793C" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="BB78D2FB6172CA8D" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="40705F61D22D048" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="6466DAB81CAE66D" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="56FCA7EBE99A5910" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="E5E5373288BD94D7" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="E5330DA75D64322F" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6996E7C7756E569" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="2E5F4EC4762A5B2C" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="CADFD47DAE203938" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="2DA13ADE2DB807D6" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="B049664E24A97E4E" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EB84EC2DF4D31920" />
                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="12850681532A8060" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="987020278163822A" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="CF5EB4C54AC0E9FC" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="8FE9F473FC22F59A" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="16AB89B6C7ABCE7F" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8DBD9B5C96FAB787" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="EB09A5125D57B5C4" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B20E2EAA60811030" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="99F4D63D6E11A37A" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="6A1FF0600D5FBA7B" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="3BB07C144E20C062" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1FC88AC6CF3A39F9" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="9CE45D165CD765FE" description="                    " Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="7FE28E0CA17C5315" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="BF85F97CF50DFA9F" />
                                            <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="979E933E0C4C85CB" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="A9C0802092204021" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B7AF4DED541F7EAB" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="519DF11460B46173" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C067C03FE46AC944" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="86E67E0B31A16C0B" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="720EACE21A0C2164" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C0164862B5C4041D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="E5326222E7479ADA" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="84678D1ECC9917CF" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D8C3DEF9E39B02B5" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5C649E31608408F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9AB0E51232D9725" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5868E38F599AE94A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D6D926E47E700C9D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="E6CAFF54493BA71" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A97E1E8286E9A878" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8D634E01CA6A7FE7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E998C68F8088158F" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="71FDA8624D5FA493" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="377F0706A3AEE82A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A4FCFEC36854F0B0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D912726E06542ED5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="1F2797358B3B6EB9" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="B87A6B7569D0A239" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="73BE8E1D9CA6B75F" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1859ABF9E3EBD7B3" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="129466FE68DD34C5" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15F93583C42A7A13" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="B022A1E90FE2C39B" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B89D288159C9F168" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="779990C2A751FDF7" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6A2A22F94F8F637D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="928D30D5AC0303A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="E3152E266CE9E27F" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AC17A297438226D5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="561E6425BC3000E0" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9900711EFE7BCC97" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="71853C33884FDCC7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F35346905A7FAE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4EDE8CFE3458F590" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="6B7BB659B6C86E6F" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DC2DFF1FC6533FE0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="486C55ADF09DBAE7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4FF77D655F20B872" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="93B27F9681E23B03" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECB5AEB65AED21" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EB9021840CC9ABEE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E5AAFB712ACF9582" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="B6A7A73B906018EE" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="7A5DB1342D93C9B5" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="403A8F033634F211" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="2DA8523FAC0ED874" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="213290F8129CAB29" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D529ADF7CC0F1748" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="94B123E7622D9D24" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AFDC847EE0C16818" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="77CB427A393F51D" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BAC9EBC06B98CFFC" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CD405B4D352639BD" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="27D9AF41867DD02E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DA82C2F69A2E1150" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DB207264A26FE249" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="12C8B8A0E2866049" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="AD744F6F9611DA15" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9C722424BC70FAED" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E8ABFCBB0AC00895" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5876A5E6CEFEED80" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BAF858707FC55595" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B9D7226C6FD26BA1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="79E888EF0425A596" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="43107620A1FCB955" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="E2D0A9D939109E16" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableList name="terminators" class="TunableList" display="Terminators" muid="1213F106C2941D41" description="List of Terminators.&#xA;If any terminator test is triggered, the current phase will be terminated." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="FEA34BE4ABAC3481" description="Data containing termination condition and description text of terminator. " Deprecated="False" filter="0" group="General">
                <TunableTuple name="termination_condition" class="TunableTunableScenarioBreakTest" display="Termination Condition" muid="D0B4F790D78792C7" description="A test to determine if the terminator is triggered." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="scenario_test" class="TunableTuple" display="Scenario Test" muid="C231DD16C830B811" description="A tuple of tests and actor_role.             " Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="AC232E8A0E506892" description="If set actor_role is set and target sim of the test is actor;&#xA;the test will be applied to everyone in the scenario with selected role." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="68E38F0987B0256E" description="An alternative way(to actor_role) to access sim_info for the tests requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <TunableVariant type="None" name="test" class="TunableScenarioBreakTestSetVariant" default="buff" display="Test" muid="3F6AF2E791290DF" description="A test that can be used in various part of the scenario.&#xA;It can be selected from a pool of tests that are put together for scenario use." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="aspiration_track_completed" class="TunableCompletedAspirationTrackTest" display="Aspiration Track Completed" muid="9A11917077805769" description="A tunable test that tests if a Sim has completed an aspiration track." Deprecated="False" filter="0" group="General">
                                <TunableList name="aspiration_tracks" class="TunableList" display="Aspiration Tracks" muid="9E6B904A5599F622" description="A list of AspirationTracks to consider. If left empty, the test&#xA;will consider all AspirationTracks." Deprecated="False" filter="0" group="General">
                                    <Tunable type="aspiration_track" class="TunableReference" muid="4B6654B6719E7F1" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="levels" class="OptionalTunable" default="disabled" display="Levels" muid="81BD621610484436" description="If enabled, the number of levels that should be completed in a single&#xA;aspiration track. If disabled, all levels in the aspiration track&#xA;must be completed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE6ACF04074DAA9A" />
                                    <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="227653466A7637D0" min="1" max="None" description="The number of levels that should be completed in a single&#xA;aspiration track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="C0D05B4164DF8F2" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6399DBC370E2B91" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9B18EDBF134AD44A" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E1B35F8DB2E5CAD1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="bucks_perks_test" class="TunableBucksPerkTest" display="Bucks Perks Test" muid="DD641BB316AC1192" description="A test to check whether or not a household or sim has a specific Bucks Perk&#xA;unlocked." Deprecated="False" filter="0" group="General">
                                <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="17FE06EA4559F14A" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="478183B2E096F9CD" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="BC238E5FDDD839DF" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FC9DBEDF0D946B42" />
                                    <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="8F44103531F0A961" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="18A24319793CDC29" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="6CDF236F6B56F628" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="C54A4EF56FFDFAFE" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8AC1CD7AA5CA69D6" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="buff" class="TunableReference" muid="8D68095B1A099037" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="87196E618AF959F3" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="25A6E4C607D453A0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="9F4586E2160946FA" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B424B2060117343" />
                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="34D8751FA6AE461A" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="buff" class="TunableReference" muid="933216678BF6AEC3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="5BD91013E007C8D3" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4848E2670406834E" />
                                    <TunableList name="enabled" class="TunableTags" display="Enabled" muid="2DDE2F526294F07" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="E922170101ABAC06" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="5C11824AC5237B5B" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="1DD41A509EEDDFFD" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="94E0837BCDA30D4" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="5CAD1EF3C570F43E" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="D946FF5181D76619" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1920B3245D5B21C" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="5E06C24B9579A61B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="704E82C3C756056B" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="67103492602F9C48" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="2AD777E01FAC2D4C" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="3EB3A815DEF10511" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="FF32829F33BCB2F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="355F2B8E9262E841" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8262452041BB97FE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="99AD6060D6277A0B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="EEEE01D40697821B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="94E28C164FCE218D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F96E7B3A93DEEE8D" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C5078278F75B2F1A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2C4BE5B4F092EF75" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="99277030A483663D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="978A894DD4338308" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="48FFA95146CAFFD6" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="38D3EA975113C95F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8B061AC389C0A25E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BE244CAD6BA87B84" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="81CDE7B601D1B9F9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9B95770A7645EF6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2B144ECBF40566AB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="26B2E79CC6833DD2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="5C7E9036A4A1D657" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="C49F5FCC6DBE5094" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="FB7DBF149530B9B" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="B36EA3477DFAAC01" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="3D68FDCC1B9B569C" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A872C7FFD80EACF5" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="910F48BCCA39697A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="59CEC6615EBE2116" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="FC877FA79F55C89D" />
                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="FA79734B54F04409" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableVariant>
                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="57DDD3BBFC293C92" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="E32D3EF3C0982C2D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="A83DF3DFC6EB14B5" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E049EC1AD6CB5FD8" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="22739E6B6B8B20C5" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="58C5FAEF1D698D9B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A8FA1A4487FC7E1C" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="D64D8EED8F900728" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="2C722AEDDC4FD6B5" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="3E9418F648D19199" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A7EBBA7C7E5E8156" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="78A6C16237E1BC1F" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8170DA2CB7C48C6A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="4CB10C41D83F29BF" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="D6CD4497560A324" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                        <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="FB0A92F6CD50B37D" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="72DEDB1FF8EBD3E4" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="25675D0E7E294166" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="26F793EB6A679128" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="5C76B9E3432DCB6B" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="3319CD189229D08C" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="F09531395B08A835" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6C04DA7E85D8514E" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="D1EA8765ABA5A0B8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="774EA6F5C2BC4165" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="BC25D621E172BEF7" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="C82CD6778D0B18E0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="1E7A68F828937C50" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="D710BCE104640168" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="A2B5D1DDEC407457" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AD4191BDDBEBA3E" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="68B37E67894E2098" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1F86B858091D1889" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="630986A6247935B1" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="C8C2E185A82D7A3D" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="1126F9F3201D47FB" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="D42726BA866A3057" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D19E3D52E0F78A17" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D16479B779B95450" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="4A2EBE487F49B7C" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="A7B6754D9351130C" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="541DE603350DD5EC" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="63DFB877BFBD3DF0" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AED3C23758DD3CBE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B0FD158432B51D99" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="9C1EBB4D97A9FBE1" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="1891E512F80A253D" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="F8EDE23498EF1390" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="A9F67ACC9AC0D3E3" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="6B49E24FC636E2E9" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="67136BCB027490E7" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="F18DD7EBB6F2E9AB" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1A562EF0D6F15BDE" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="9BCBEBA4A01738F6" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="AC7EE17BF16C2A8A" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="careers" class="TunableSet" display="Careers" muid="CAB5EB62AE5258D4" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="DBA2E54AF0D71891" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="788E3CA9F441D20A" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="27E1550E67D9D102" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F17FB4946FF24030" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="21FF676FB2C1D4DE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DCC36F11C601AD77" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2AB786BA1AED7C37" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="8583690456001C0B" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="EC229FCA6E7FA3" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A9E44D0BC9207A5B" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="FA313407626B6346" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="448BBAD5EC670037" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="2DB9A6B0342D6A80" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4A23D8E6D839D46" />
                                            <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="7DFB50215073E906" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BA2DA3D4B452F123" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="309911A0558D8228" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="EA0D0EA842C7" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="EE0237CA1890ED1F" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="24DC24D16141F619" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="FDE237D44F5CFDC4" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="7DFF91D0865DE00A" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="3512201693419A79" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="6984325989A71A18" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="207BD043C9398208" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                        <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="57535CCC292F2392" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="3EB07322A4B8C43" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="88FF2C0C24D78DCB" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48D29A8C3A537AF4" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F7A4011A9A6D8DA3" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="career" class="TunableReference" muid="9F89331AF88A1436" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="BF3DEF1054C92719" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="2596369989F16C6F" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B87B715D593DDE04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D7391E9B9239F4B3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="108EA5819CB9CF54" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CFBD3AF73B85FF87" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="97843CC440B21FB8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="1C6753F50B83875D" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="E45AF8C0E0BBDE71" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any" class="TunableExistance" display="Any" muid="AA36FFF3E38975FA" />
                                            <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="D1BF88BC7AC9CE32" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="B274F51D989AFBE0" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="105AF4B87C84E968" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="A14F72EB9801EB91" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="2236D34A55220224" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="97B3C7B0B9DA1C93" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="E277C8970F6F5BE" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="426829F0D1FCCA2" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="3BCD15A1C4899EE3" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="E08A58835676D064" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2C31EAC3FDBF9290" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4B553ED0BC8422B7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="4D037A969F9E3976" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2DD2541C1E50ABC8" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48A29ECFDBF87248" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="233269B791B3C5E4" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="1CC9AEDA18323B13" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="29B8C2E48C6CAA38" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="93434614CAC61BD8" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="79B747690835D056" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="AD0BF62B9DD17C18" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="DEAD8653CC10907A" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="4854ED2AB00151B6" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="club" class="TunableClubTest" display="Club" muid="91F40C0B6E9F7A73" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="771E4DF75D7EAEB4" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2EB58F7F8D68CF50" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="C2C1C9281ED1932E" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                        <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="3437D5B8A2E1DC31" />
                                        <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="352D3B64C4D4E711" />
                                        <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="9AC289CBA2565CCD" />
                                        <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="2E851659F3AFDF74" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="BCDA3F13A3403442" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5E3F0F0CF6FD92D2" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="8F5E8BD65A6839A3" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Leader" class="TunableExistance" display="Leader" muid="E788D795D8A1BEAA" />
                                        <Tunable name="Member" class="TunableExistance" display="Member" muid="F45C065527C7BF77" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="F7D5FB53A513A56D" />
                                        <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="4370237C85EB4314" />
                                        <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="8220534FC364F190" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="869150A44D19A7FD" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F5DFE915F029F4B" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D943F08600C27608" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="B29C236E584B8EAA" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="86FD5D0B799DCE06" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B79184D4567335E8" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A6EB2311EEC78DCF" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="91D3E048366647DE" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4748935A3DD4B2E" />
                                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="6B511A796871F9CB" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="694B8165194CB5BA" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="71682F076550312F" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F9DB6F33707527B4" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BA489B82A19738C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A7119757D00DAAA5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="6EF89E134D74D847" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2600BD4A69AEB1DB" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="FEBFF07723B918AB" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="5699CD6A8A0BB56B" />
                                        <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="537BE17FD15D5857" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="F8DA984BA41622FC" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="A3871834C83D16B2" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="996FCFED8F0A08D3" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="B518E9726FAFCDC0" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="7D6C6FF467287CEE" />
                                        <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="305D50679820A3C9" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="B6CBC256C1B11174" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="1B9544294A8D3801" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AA84B40808F1587C" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="9C4C63DC53169809" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="8AF0DD39F536FDD" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="B8B115E6B4454C39" />
                                        <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="1C957903C26ED4B7" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="C984308DFFEC8BFD" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FE45D4F846B043B" />
                                    <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="AC97B545C842278E" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="9A10035C040C4B01" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="EC3BC80DCC6CD173" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="31CE08DB59FC6B3" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="D510AED2AE6BCD89" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="18502ADC1C7DAC08" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="DA4A24C324B9091F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="9A833D3D46F2B2E1" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="467775D7C44C7733" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="FE24B17E48E260CD" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="F560911D99F2DD68" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="8DC77AF4DEA6C2A6" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="14B59F6481141722" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="AB225B56EB6AE234" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="3E4F96691EB70B0A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="C63C5072C21EB7CC" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="47D8519D18F60494" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ECD961243E1DBD20" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="D34A9212A3B93642" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="4CC43F5F7F85923F" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="6C180970A55F56F1" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="346D9D14A2816824" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="4ADBBADE5543E56F" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="C76CC40B255E40EC" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                        <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="8ACCC677D6927E2D" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="146233A9C3C75EF2" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="474A2F0E76361E4D" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                        <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="10C8116FDE523C90" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                            <Tunable type="object" class="TunableReference" muid="9D5C0C89EABB5FD" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="dead_test" class="TunableDeadTest" display="Dead Test" muid="39B42060AA9981A9" description="Test to see if sim is dead. It is true is sim is a ghost too." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="709CADED9AA652BA" description="If true, invert the result of this test." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="D0689729CE5BE00D" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="16E3366D38149976" description="The type of test to " Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="AE944F3C82BB1155" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="E056A379DE13D707" description="The number of household members." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4A08F50E3D3F02D6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="807ED046978673BD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="count" class="TunableTuple" display="Count" muid="A2B825141189CEBB" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="D15B0955767F7CA7" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9999A078F4F48BF7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="572058B628503F5F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="826B46E5A94712EF" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="F0B0A99AAC50BD04" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="4ED58C90DADBFBF6" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="51F9C44CA3FE458A" description="The number of household members." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ECD080B11364C931" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="6A037BFAFD559E8D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="F0118692556D9350" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="9235439D3A381B29" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="CD4CBDF6B6BD6924" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="4DBFEC82215CE188" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="EEF747269A34D655" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                            </TunableTuple>
                                            <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="9FF1FDA616823ADE" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="9B55972980DC0993" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="C880342EF9CE2EFD" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="BD6DB27526B69EC9" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="B5BA6C7A9647022D" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="15FDE5EEF7673ADF" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="FE4F947C651B4B0E" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="630AEF775F5F719A" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="23D22913ED186616" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="299530EE25CCE4B7" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="549A1959A3F90F73" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="81DD1FAD66AD766E" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CF48D86DE74B458B" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="5D0DF720F29A55BC" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="9D963F56110C77DC" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F276F99B533FB0A" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="AEF168EEB21FC8D6" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="86592B997AAC260A" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="93F8F6EBCA35216C" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2EAD19D5F9ABE0F6" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="1DA0FE8BD900E3B5" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="1227BE3C3AC5C964" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="8FB1A81F36924D89" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="1C63C9DB63F57B8C" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="993AFAFB9FB132CE" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="EDE579D04827DDBF" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="CF91004B79D2F74D" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="11B83578E41C0758" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="3C6D5EF153BBA8C5" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="DB3356EF9A7F999" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="17A0568BAACF66C7" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="7393917E6FA138D6" />
                                    <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="928BC9F7F6CBE20D" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="1DB4F256480DA029" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="32EE0986F86EC692" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="8CDC120F68B23D6A" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC9FFC6BE666C059" />
                                                <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="16FA624255900977" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="28EFC6389EB113BC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="DB22D01D03887EBC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="357F0875C4F188BD" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="6E5B33DACF2304AB" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C899E35283500071" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EE197E3D68A26A4B" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E810E44F58543BAC" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="D1979943B95B4169" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="EBCC1CE4231C106A" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="8C896B5E965536EB" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="72E5B06873FB4E09" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="B2C1D99B08FC6D" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="A3A37ECC7DCD703E" Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="8EBA5930EB5023FD" />
                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="6F58C29F98C6A3F8" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="F027417FBF567A05" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="CFF1818149CE61CC" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="9190D2B9CA948AC9" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="10E189F06CD8E711" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="72BE63CFE1F68206" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="37486ADAE5622B92" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="27F3ED80E81D37E7" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="object_state" class="TunableReference" muid="7EC3B2846691ACB7" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="4DDA1E61CE64765F" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="E7A3B5F6657F1939" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="BEE7FEB83F3E47BB" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="11F6C7DA69BAC5FB" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5BD790AB17C8053C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="226B0ECF2727240B" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="A607404C79311C7D" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="5FF6B4E4149A4F3A" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="78E5CBB386F2617F" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="29D57A67FED1620" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="90F696A9630AAE97" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="9944EF86CCA0D6B2" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="38F8F097091FB5D0" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="35361D761AF15AF6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="EC3C4587912C7A7B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="D73396600C4CA202" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="36092CAE04D2EDB6" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="382D1B1ECF9379CB" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="1948962B7F9F5BB6" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8DABCAA8E3C01DA5" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EE524F3AE2D911BE" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FA14382C52E4F9EF" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="D812AF9DF83CAE83" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="542FA2D631F064DA" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="CBAB7C97D4C0993D" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="9A041C78F04BFC68" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="901D3D092C2B7407" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CA698FC229331A8D" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="F7CF1E4232F67BB2" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A37B51CB6DC4C9B5" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F2D2C85D53162567" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="126AA7B1F01EE2A3" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F2EAB65C697FE0C8" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EB4E4E2CC3490AF0" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="242248287A8B8C07" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C347BC6C77F494F1" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="75787A32E59F124" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="D017263626FEDC24" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="B42E4DF386A3D6EE" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8C61F4EABCCC78F0" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="7DF6777A5C099C57" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="1543C98A7B4C0D6F" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="C53C3CFFA8CCE88" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="76A2ABC6EF3A75D0" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8E9BCFE9AE20182A" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="64F56BA24819647A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B000E5DF3946B4F3" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5DCD2904D9950322" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="5A0DF0C9F9263040" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1C6D89F5EF8824C1" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A636069AD58E8CD" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="AFAA2F903800CD55" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6E8D12C677E79820" />
                                        <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="D0DE63EA6EAE8030" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="AD2F5E6247FD447F" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="BBFF2212FCF39990" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="2F56DCE84F6C57BA" Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="83F556DC920E1057" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="FEB3D07000EF4A84" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="38DDFD49EF1AFEE2" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6509E6371D4B76E6" />
                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="C81291BCE891C05E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="320CF07F3DB4973C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="6E606DA71F8D1BA3" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="CA400FC4B6B7F163" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="28C7CE3FE5FE2DFC" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="125F2BC1E95885F0" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="4371D7EF96C5B54" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5BC92A2D9CD14E18" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F2AEF87BA6BC1530" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="79D27ABC14FA1453" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="FC9CBAD29591B27A" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="CB6968C997650AA2" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="268299A03C25985E" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2E6B446D3553E71B" />
                                        <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="9797AC124DBA7A57" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="59D3E006A18F6790" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E38DC2B5ECD3CED3" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9D1C6B07C746DF62" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1B8852301E798A8C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="B07FF743E1859393" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FA063BA72B1E5451" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="34E1864AC9D58D5E" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2EA01D63C5E9F4CD" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1EAAA01210FC087C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F197C50A7502070B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8BBA047007F3B05F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="D4F96083C032B633" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="66ADFB7B2C40D9AD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2ECF93DE2CF04AE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D34AB599DDCD31D9" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="37C212364A91CA8A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="95B777A7EF1A532E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2ED4E72361F74E18" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="260003CB7EBDF22D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="EBCFD1636844BAB1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="18BBE3EF56C83F99" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="E5AF27A588DE919A" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="50B0B6087CEF2894" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                            <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="C7F2453E6E9DD356" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                                <TunableList name="stats" class="TunableList" display="Stats" muid="FAB7CA219F505F32" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                                    <Tunable type="statistic" class="TunableReference" muid="616B55836A21E67A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="732296284EB389E3" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="45F824091F5D973F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F9ECD0A3715DC47B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="5B178DBA59A4F610" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="7217C2FF7EAE9E64" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="2E12C738BC05025F" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA12410BA16A3057" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5C9FD03129A0448F" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="45C2E7506F2A4A13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E4FF779A971C2997" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="C9046E98E6B08700" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="CEAD0B947465D5D7" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="429050E2C8D6732" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="983A3EE66486312E" />
                                    <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="7E95C9D52184FAD1" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6847C578103CCEBF" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="827FE021DBEE273E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C65EDECFCFDE80E3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="CCE475B7DCA3F9C0" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="DAA85D08A0FA242F" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="B1DB5E9320AE0544" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="159BA0FB5F4F1D6C" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="F339A5916914C1D3" />
                                    <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="29F18C676EB01AC5" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="5E41F0DC1D96E17" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="DA0A84406B389CAA" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="4A29C5849FFEEDB0" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="7EEA119C59ACDC0A" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="16B9AA8352573CA4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="4BB541F370F00" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADE6B21D917CEFF4" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6D5F20B1A3E012A6" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="10F3D01E88E70B81" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="5D497B928BC6C843" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="92BA92B868A57D0" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C61055DA97F6CDE7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="27C915488E93BA24" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="FF9AFA5102196539" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D71F31EDF396BA55" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="14E143995FE6BE39" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="19AA252FEF1FEAF1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E11DBF805D5856ED" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="B6998F809E7FF25C" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="E93316B8C722DBAF" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="test_events" class="TunableList" display="Test Events" muid="7FE5FBBE3D78F023" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="F383ED06D164CDA" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="AD343D5CD0FBF4DE" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="AA546AD25FD76326" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ADF014EEB2B75714" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6CFAC39801163AA9" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6CFC75C7D118FAB1" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="793E25D7B4FB03F0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="95CA756E0D291ED7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="5448D29F674F9762" Deprecated="False" filter="0" group="General">
                                            <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="14CA1480C9275F44" />
                                            <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="3117B5646FD02B44" />
                                            <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="F2B870CE477C7309" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="4C22E5302F78BFE2" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="E8634BDDF877DFEF" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="240647C443BDC32F" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="5C174EBBAE858302" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="248A1611359F2D45" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EA13D95A6328A100" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A66EFE311341F7A2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="6CA1C373517B32D" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="9A33F777A52BAD98" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="F9A0D47418A781E0" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="3C055963A4854581" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A681D6260C27CCC0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B413BE4263CAA342" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="57298795477B4411" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6DE8DFAB400DF92" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="75513AE400F4AFEE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="satisfaction_points" class="TunableSatisfactionPointTest" display="Satisfaction Points" muid="B22B96B1143742B3" description="Test to see if the target Sim has a tunable threshold of satisfaction &#xA;points" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="B51555EE82DE8A0D" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AEF3E9C6F2FB69F0" description="The threshold to control availability based on the statistic's value" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B93063EF2C041B63" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B89C8B52CDE8CD02" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="scenario_goal_complete_test" class="TunableScenarioGoalCompletedTest" display="Scenario Goal Complete Test" muid="BFA8AFF20D0067E4" description="Test if a situation goal is completed in the active scenario." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="FB6151ED59D94F13" description="The situation goal to be checked if it is completed in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="BC835662F3E93C08" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="8E1103F89AC9792F" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="9882170C36E4A7D5" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="2F6D3555859C01C5" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="7F77284F7320712A" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="16CE2D021364EC1" />
                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="4FFCB0950D631CE8" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="82F02CEAD49D147D" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="simoleons" class="TunableTotalSimoleonsEarnedTest" display="Simoleons" muid="6DC9D16CBD76286B" description="This test is specifically for account based Achievements, upon         event/situation completion testing if the players account has earned enough Simoleons         from event rewards to pass a threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="SimoleonData" name="earned_source" class="TunableEnumEntry" default="TotalMoneyEarned" display="Earned Source" muid="3053A4135AF75D9" static_entries="event_testing-event_data_const.SimoleonData" description="The individual source that we want to track the simoleons from." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BA16F6C5844C1FE" description="The simoleons threshold for this test." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="22717C645307805A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7E9490758D62B9FA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9F1F9F891046911C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E8F9B3820CFFE5CF" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="EC6453196450F9B1" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="EFA6C72869287301" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B8A0E67EB87BC862" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="D4DB8605066A9EAC" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="5BA5A8C98BCC3868" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="4D4B5EDE06CBB8FD" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="195A8B5D8E16B1C5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9743B3746183F9B8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="A6781833BD090E3C" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="state" class="TunableStateTest" display="State" muid="A197D3C908E9195B" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="688C256D0FB4256F" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                    <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="DCA3C2CBB5F81CB2" />
                                    <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="20CB57CA70C3F2D8" />
                                </TunableVariant>
                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="3420D043D4A2D741" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DA6780AA87EB2EDE" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                            </TunableTuple>
                            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="C5CACE01E945BB58" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B179E61624EDD5A1" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="ABA792FF1C6C01E3" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="A78580AA6A55F9B9" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="E86A02EE01814E94" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="D2F979E28FF1A0CE" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="74B3537ECB6C7D3A" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="2EB2B27CF1F06F82" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="74F7A116A3BD8D07" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="50265FF0C2E04A0F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="14723AB969ECD8B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="90123AFD3C191CE7" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F955D2A1170C388C" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB45C88AD11010DA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="2079F54DC13BAC46" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="FC1696A095180284" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="EBE1C008E39674CA" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="9E3E4F22FAB0C0AC" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="E45B2031E3066C42" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="8BEE71514961DD56" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="trait" class="TunableReference" muid="1AD9E69DF1D2335E" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="43B88E10D3E719A0" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="162A011BE4B55550" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="79B2EA6954B9FDA5" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="E1D4AF826D49B15D" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="18581E54A12F6B14" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="trait" class="TunableReference" muid="77AF685032AFE19C" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="F4D4E69FF2D419AE" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="A4F16121EFB75F7D" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="9BCCDEC8F307012A" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="C08468A93B66074D" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="C60A534F33CAFD79" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="3165D986B8961D30" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="CAB8FDD2D3544A90" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="7BD92EC6A6D6405D" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="85661AC8CF382ECE" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="F0E0F241527C7339" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5739824E50225A76" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="CB682F62A2B2010C" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="48075A5F35C480D2" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="81543DE89592C3F9" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="BD46C995CCDEBA20" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1902B7B21F6E74F8" />
                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="8D1FC95678B6070D" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="A1A60377DEB109AB" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="31ED298FEC73FF6F" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="86C6069C5CFFA24" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E36E2403F477C65D" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="51A4C04E6748EE6" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="E1614C590E23062A" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="ED22EF07430E518B" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D3147C873B41B970" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="7480BF4DB7824481" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="4A8A8CEE7A4E136B" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4851BBA9BE50572" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="C56FD956AF99A64C" description="                    " Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="775DE3137AADA217" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="D64E726E84D29B62" />
                                            <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="7988D73941927A27" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="8099A9DC9D315AFC" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4D3AE3E8AC872A10" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="EF5A2E86EB558B71" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="FA88417D625A73F1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="480C34D6307573DE" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C6E7FC0CEA18153C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1F4E6DCF351AD571" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="D09359CAF372136C" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3AAA0CF567A5517D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2FA76E1C1907D749" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="90E35794CFB17F47" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B851337EE09EDC5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="331FAEACF1B650A8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="70E265337C82894E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="296325C67D894221" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CD6D08B07F73AC1D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="27B684629AFBEE4B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="94ADCA25BFD3FE6F" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9EFE7C4D886DA6E3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D99DAF9EB2E617DC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AAA3A1E3ECEC2AF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="65B36142DB329C33" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="31417195A9BFCFE" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="F89F4DEA8604321C" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="615B7339CCA0FD45" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7892B56FBE47FD68" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="746E789E5DE7B043" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7034B613C8298C0B" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="1B3670416D56D6D7" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2725A735C007B384" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C15871930015C3AC" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E64BF1F23E5670D8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2677ECFE6561CC91" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="2D4C54CFA976101B" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="59286FF299824BF0" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E16817E5F7C1ED12" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="40025B58EFA8D21E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="82DAA12C43855667" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="ECB5417EE8796EE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="38F90AB450E4EF37" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="E188C32261A5ECC7" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DD26CF5DBFC792EC" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B6C02EBEDB48B88C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="81AAE89A3C43F511" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="36A9411D9DB234B9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4FCB49E1274B0626" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="86C2D851F1BFE91F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FFBBEF10496200F3" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="8A55E986C5245515" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="971382DF352E5015" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1E50148E966FCC2C" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="890DCE418B7482AC" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="397A5D4A7AEB761D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B484EC0440DCDCC0" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="213B7E6608DC0E43" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D1DABB9F7F6497B7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="94E7F488B831C96A" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="407ED7DD5EA92FE4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B6038D8787B1DCBB" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6068FC9B47ABC3B3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="74DC2A92956651F3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B2D6990390CECCEF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="33AF10627B2FA74A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="1BB99B719E179995" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7C62F9D199D745AA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="45B1F053988A93A7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3D8AD81F34302592" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D808FADF7C080955" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BCC9B116D2DC9E5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6C80D358980B10A7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B45393BF1C0910C1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="E99404991477FFB3" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
                <Tunable type="int" name="terminator_description_text" class="TunableLocalizedString" default="0x0" display="Terminator Description Text" muid="9B7FB3D25DDAB832" description="Description text for terminator (only for debug purposes)." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="27459C087E23A471" />
            <Action type="kRemove" old_muid="B68F5DFBCD31E774" />
            <Action type="kRemove" old_muid="7B3AC857DCF6D6AF" />
            <Action type="kRemove" old_muid="F474D7039E0AD088" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="6AED2E712F13EB6" />
            <Action type="kRemove" old_muid="9CED7952A302C92B" />
            <Action type="kRename" old_muid="3E286F3338A9CEC8" new_muid="FC16A39DED9329D6" />
            <Action type="kRename" old_muid="48AC334FE4B75705" new_muid="2795B117F0E1FC6E" />
            <Action type="kRemove" old_muid="19252FF28B00E348" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="C4EB9D41E04CEB2F" />
            <Action type="kRemove" old_muid="7578FA2D9CDC3628" />
        </ActionList>
    </VersionHistory>
</TuningRoot>