<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="snippet" class="ScenarioOutcome" module="gameplay_scenarios.scenario_outcomes" muid="D54987B78228137A" description="Container for ScenarioOutcome data." instance_needs_reference="True" instance_subclasses_only="False" path="Snippets\Descriptions" use_guid_for_reference="True">
        <Tunable type="ResourceKey" name="outcome_bonus_reward_icon" class="TunableResourceKey" default="None" display="Outcome Bonus Reward Icon" muid="E95BD311F821852A" description=",&#xA;If enabled, the icon to show under the bonus reward section&#xA;of the scenario outcome panel." allow_none="True" Deprecated="False" export_modes="client_binary" filter="0" group="UI" resource_types="0x2f7d0004" />

        <Tunable type="int" name="outcome_bonus_reward_icon_tooltip" class="TunableLocalizedString" default="0x0" display="Outcome Bonus Reward Icon Tooltip" muid="AEFBD4732B16AFAC" description="Tooltip text for the bonus reward icon." allow_none="True" Deprecated="False" filter="0" group="UI" />

        <Tunable type="int" name="outcome_description_text" class="TunableLocalizedString" default="0x0" display="Outcome Description Text" muid="A6667D412A46AA4D" description="The text that will display as the player-facing for&#xA;outcome description." allow_none="True" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="UI" />

        <Tunable type="ResourceKey" name="outcome_icon" class="TunableResourceKey" default="None" display="Outcome Icon" muid="4ED07BCB810A81D6" description=",&#xA;The icon to show next to this outcome's description&#xA;in the outcome panel." allow_none="True" Deprecated="False" filter="0" group="UI" resource_types="0x2f7d0004" />

        <Tunable type="int" name="outcome_next_steps_text" class="TunableLocalizedString" default="0x0" display="Outcome Next Steps Text" muid="D9E6047402BA3002" description="The text that will display when this outcome is achieved to&#xA;let the player know how they can continue with the household&#xA;they played the scenario with." allow_none="True" Deprecated="False" filter="0" group="UI" />

        <Tunable type="ResourceKey" name="outcome_reward_icon" class="TunableResourceKey" default="None" display="Outcome Reward Icon" muid="9E7163DF9D0F5E09" description=",&#xA;The icon to show under the reward section of the scenario&#xA;outcome panel." allow_none="True" Deprecated="False" filter="0" group="UI" resource_types="0x2f7d0004" />

        <Tunable type="int" name="outcome_reward_icon_tooltip" class="TunableLocalizedString" default="0x0" display="Outcome Reward Icon Tooltip" muid="EB66934CCF876186" description="Tooltip text for the reward icon." allow_none="True" Deprecated="False" filter="0" group="UI" />

        <Tunable type="int" name="outcome_title_text" class="TunableLocalizedString" default="0x0" display="Outcome Title Text" muid="AAC53CE859573772" description="The text that will display as the player-facing for&#xA;outcome title." allow_none="True" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="UI" />

        <TunableTuple name="scenario_outcome_loot" class="TunableScenarioPhaseLoot" display="Scenario Outcome Loot" muid="DD41BC045020B1B0" description="Loot Actions for the outcome of the scenario." Deprecated="False" filter="0" group="General">
            <TunableList name="loots" class="TunableList" display="Loots" muid="78606E070BE55819" description="A list of loots to apply as a scenario outcome." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="508846D0C45F4366" description="                " Deprecated="False" filter="0" group="General">
                    <TunableTuple name="scenario_loot" class="TunableTuple" display="Scenario Loot" muid="A61FA8FB63D29243" description="A loot action and a list of targets." Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="C7390CD187829B4C" description="The role of main targets for the loot.&#xA;Loot will be applied to every sim in the scenario with the specified role using that sim as the &#xA;actor participant in the loot.&#xA;E.g. loot that is applied to &quot;Actor&quot; will be applied to the every sim in the specified role&#xA;E.g. loot that is applied to &quot;SignificantOtherActor&quot; will be applied to the significant others &#xA;of every sim in the specified role.&#xA;Leave this empty if loot subject(s) are globally available participants that aren't related to &#xA;sims in a role.  E.g. &quot;ActiveHousehold&quot;, &quot;AllInstancedSims&quot;." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="11978BD49BA60A82" description="An alternative way(to actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <Tunable type="action" name="loot_action" class="TunableReference" display="Loot Action" muid="BA4B67B020AA5E71" description="An action that will be applied to everyone in the list of targets." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                        <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="98F3DDFA848579EF" description="The role of secondary targets for the loot.&#xA;Fill secondary target only for loots requiring pair of sims. Like relationship loots.&#xA;Loot will be applied between every pair of sims in the scenario with (actor_role, secondary_actor_role)" allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="F7D83E7995CB2848" description="An alternative way(to secondary_actor_role) to access sim_info for the loots requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims." allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableTuple name="tests" class="TunableScenarioTestSet" display="Tests" muid="B2226E2EB9CD52AD" description="A set of tests that all of them should pass to reach this scenario outcome." Deprecated="False" filter="0" group="Tests">
            <TunableList name="scenario_tests" class="TunableList" display="Scenario Tests" muid="65498CFBA61A86DF" description="List of tuples containing a test and actor role.&#xA;Test can be selected from a set of tests that is tailored for scenario use." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableScenarioTest" muid="6354A968A27909DE" description="A tuple containing a test and actor role.&#xA;If actor_role is set the test will run for everyone in the scenario with selected role." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="scenario_test" class="TunableTuple" display="Scenario Test" muid="88E0EF2EC9CC93CA" description="A tuple of tests and actor_role.             " Deprecated="False" filter="0" group="General">
                        <Tunable type="snippet" name="actor_role" class="TunableReference" display="Actor Role" muid="E1A1E6C2B0C84B7F" description="If this is not empty and subject of the test is actor;&#xA;the test will be applied to everyone in the scenario with selected role." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="actor_sim_filter" class="TunableReference" display="Actor Sim Filter" muid="3301BF9A7E92636C" description="An alternative way(to actor_role) to access sim_info for the tests requiring &quot;Actor&quot;. &#xA;This will not create a new sim like in situations. &#xA;It is just a reference for the sim filter in the scenario_npc_sims.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <Tunable type="snippet" name="secondary_actor_role" class="TunableReference" display="Secondary Actor Role" muid="1D4A76006E1FAC43" description="The role of secondary targets for the tests.&#xA;Fill secondary target only for tests requiring pair of sims. Like relationship tests." allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                        <Tunable type="sim_filter" name="secondary_actor_sim_filter" class="TunableReference" display="Secondary Actor Sim Filter" muid="51131E1875008B44" description="An alternative way(to secondary_actor_role) to access sim_info for the tests requiring second sim.           " allow_none="True" Deprecated="False" filter="0" group="Sim Filter" restrict="TunableSimFilter" />
                        <TunableVariant type="None" name="test" class="TunablePhaseTestSetVariant" default="none" display="Test" muid="3F70BBCFBC375DB8" description="A test that can be used in various parts of the scenario.&#xA;It can be selected from a pool of tests that are put together for scenario use." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="aspiration_track_completed" class="TunableCompletedAspirationTrackTest" display="Aspiration Track Completed" muid="C9E2CF91C514242C" description="A tunable test that tests if a Sim has completed an aspiration track." Deprecated="False" filter="0" group="General">
                                <TunableList name="aspiration_tracks" class="TunableList" display="Aspiration Tracks" muid="BA9CC0DAF37A31C" description="A list of AspirationTracks to consider. If left empty, the test&#xA;will consider all AspirationTracks." Deprecated="False" filter="0" group="General">
                                    <Tunable type="aspiration_track" class="TunableReference" muid="6B0C196A19B9E5F0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="levels" class="OptionalTunable" default="disabled" display="Levels" muid="4C073F9564B2C50B" description="If enabled, the number of levels that should be completed in a single&#xA;aspiration track. If disabled, all levels in the aspiration track&#xA;must be completed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E6B255AB7B6746DA" />
                                    <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="96D5EAD2918B4BCE" min="1" max="None" description="The number of levels that should be completed in a single&#xA;aspiration track." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeSingleSim" name="target" class="TunableEnumEntry" default="Actor" display="Target" muid="43E76B7ADFF48D4C" static_entries="interactions.ParticipantTypeSingleSim" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="87C1438A1B6878E1" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE77E8B97A17DC85" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4768A7F83250CFCA" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="bucks_perks_test" class="TunableBucksPerkTest" display="Bucks Perks Test" muid="BD1B13783B7729B1" description="A test to check whether or not a household or sim has a specific Bucks Perk&#xA;unlocked." Deprecated="False" filter="0" group="General">
                                <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="5D96C8B35EC287C5" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="824BC7B0A7252953" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="96B784D6DDACE1ED" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F4F836E556C3C31D" />
                                    <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="182349777380CDA0" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="DE6FA1D852610ADD" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="DB2EB0ECF9B04634" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="747A19D7DCFF233" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A37D6936BDDAF49" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="buff" class="TunableReference" muid="885DF54D47F00128" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="blacklist_tags" class="TunableTags" display="Blacklist Tags" muid="AF7DF1B4987F916B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D1CF13EC7458367" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The Sim must not have any buff that matches any of these tags to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="A0FB8C03D965BB31" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BFDE3C1E421AC8AE" />
                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="B5A6A7E72B4380AD" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="buff" class="TunableReference" muid="3D64293663D7CBDE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist_tags" class="OptionalTunable" default="disabled" display="Whitelist Tags" muid="D45B4BA5F8584D09" description="If enabled, participant will test for buffs which match tags in the defined set." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CAACD7CA18BD3EED" />
                                    <TunableList name="enabled" class="TunableTags" display="Enabled" muid="EE8B4C86CDE57334" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="C7BC03F3BBA77886" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The participant must have at least one buff which matches a tag in this list to pass the test." Deprecated="False" dynamic_entries_prefix="buff" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="C12F9A66BDBDBD80" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="3B1C0405E66DE67" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="57FCAD8CA3BDFF90" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="8299269A4DD05154" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="E0D1509129A5D7E7" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="BBBA3B34D767E914" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A2C311C9C5202F4B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C13FC2F6E1132D2D" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8F864AFC69104701" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="615809F24D2425DB" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="C1DE39698B23DA43" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A5BD7B8BE597D5CC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="DD467295739A3EAD" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C86BF81610C05EC6" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="760377763883B917" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="943BD11BDD65DA19" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="85C65092252E8A76" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B55ABE1CCE68D074" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B44B4E9CCCF5AE01" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BBB1CFCB5E373AE4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B39795E657B8E352" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BB12659549DA1A0E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="203C21D2A309F879" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F0948E796EEA6D72" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D6C47F17F49A1341" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5B060845C930CC7D" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2FD5A03E7449F03B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="15813C305521A4E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C6B3A59CF45DD65" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6BA0D5FD0ACC277F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="2AC27E582A104949" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="3FBF8CF62C83769C" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="28C2DF6DB522D0E1" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="5DB9594529D73EF4" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="B4491F03BE92EB7" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3B8B733AF31B063E" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="14AFA12EECCE4AD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="7C6D6EB99FA299BC" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="A503BFC5C1E121A7" />
                                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="D75F845BF22FA16D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableVariant>
                                        <TunableList name="career_list" class="TunableSet" display="Career List" muid="6265E0727CCFB7D3" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="7408CC88BB4BA0F3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="6691CF4FC440161D" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8777C9869CCE9231" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="7A64F1E79B2DF907" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="A114F49DFBB90C4C" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="4DE844A9D70BEDB9" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="F8359C1ED335006C" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="6DD050D3B6DCAFAD" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EC3C68D3CBB1818A" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="11E8710582EDB087" />
                                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A6FA0FCCDBFF200D" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1471BB8222582973" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="52EBA4A7E691C2BA" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="2DF83D6D37311CBC" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                        <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="1D82240652A209E4" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="DFFF6DE0E4AA3FA3" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="44FEDED7CCB9C75" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="68FD1CAD815DAAF5" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="D0AEE8897CF1F422" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="B81F3DB6A017A389" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="B1D82AE539361380" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3A20B19821A33ECF" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="AD2A597BF4E5D2D2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="8CE2C4D567463D71" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="B41A81514A0D2742" />
                                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="3173A98AA227B4D5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableVariant>
                                                <TunableList name="career_list" class="TunableSet" display="Career List" muid="EA266A62D9FD09A7" description="Should be another option in 'career', as if both are set, will be&#xA;a validation error. Instead of checking if just one career is present,&#xA;this will check if any one of the given careers are present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="career" class="TunableReference" muid="C484A80C6A1D583A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8E589AFE6580B978" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9619E302A39861FD" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3DA760FC72F90C00" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="A7727C43B59D9E50" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="76B08116A7BB5E14" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="F31B53A1C68EA26C" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="513A58087F1A0E8D" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="42DCDE062CD58059" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C3536F79D114907C" />
                                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="136B4A58D3A28FD2" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C8EA2ECE9B3B9313" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="FB95B96CCE84361F" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="CA8CC74E3996695B" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="86983419FA48AA01" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4E0593A1B8A508A1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E3E14DBCA7DA8218" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="BA2AA587A6D4E473" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="2B259C4FC02C15B3" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="career_source" class="Tunable_CareerSourceTunable" display="Career Source" muid="2E2F6D85630F463B" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="career_source" class="TunableVariant" default="single_career" display="Career Source" muid="56FE9FACD19C1CCC" description="Which career(s) to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="all_careers" class="Tunable_TargetAllCareers" display="All Careers" muid="E98F5ABCAC2615A" description="Test against all careers on the subject." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="898954E7CA30E08A" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="single_career" class="Tunable_TargetSpecificCareer" display="Single Career" muid="45989D0AD04785AC" description="Test against a single, specific career." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="career" class="TunableReference" display="Career" muid="527C81976C285107" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="some_careers" class="Tunable_TargetSomeCareers" display="Some Careers" muid="4BDD48BC77393C7" description="Test against a subset of careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="all_must_pass" class="Tunable" default="False" display="All Must Pass" muid="B044B5966F8A405F" description="If checked, will fail if any career fails, even if others pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="careers" class="TunableSet" display="Careers" muid="4F73968DADEBB5FD" min="1" description="The set of careers to test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="career" class="TunableReference" muid="F3688E03E9421788" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="655B3A875D156BEA" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="67EF6E9DB9009E43" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="14AA9C309EC4820" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9D08CC5AF05245AE" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE3C86D476226D6E" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FC967F41C2953EBB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="6D8AB0C475EFCE06" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="A583326655F5038E" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="4820B754B4404F68" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="E48923E0340C2585" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="87CA346276AC243F" description="If true all subjects must have a career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="story_progression_requirement" class="OptionalTunable" default="disabled" display="Story Progression Requirement" muid="CD8AAB47DF505D5D" description="If Has Career is tuned to true, the subjects must have a career that allows for the specified modification&#xA;by the story progression system.  If Has Career is tuned to false, this field is ignored." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="465C2E67C97BB75B" />
                                            <TunableEnum type="CareerStoryProgressionModificationType" name="enabled" class="TunableEnumEntry" default="JOIN" display="Enabled" muid="6BE2541FF6F657E2" static_entries="event_testing-test_variants.CareerStoryProgressionModificationType" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="129B8E90A9C110DA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E716C900473412DF" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A8066F050A0D78D4" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="has_career_icon_override" class="TunableCareerHasIconOverrideTest" display="Has Career Icon Override" muid="812CBC519527A15D" description="Tunable test that checks a career has icon override." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="313AB79C5E8F4204" description="The career to check whether it has an icon override on the subject. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="18E9C04854679B6B" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="5C0816AE8BC1BB0" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="CCF28D37A57563A5" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="5826458E073AA53D" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="E0211B8E595FEDB7" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                        <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="591DA5E52E3081DD" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="D17319F150C9A577" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="BFA6C45731A1DB12" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9ACEE85B32ED1E49" />
                                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="175B84BE1A7E103F" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="career" class="TunableReference" muid="9FF507244C8EA441" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableVariant>
                                        <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="9EFF8D8F27439817" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="253C6C6352F8006D" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4509FB8109493AE3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="26160CEC3AC0AA6C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="504BCA15801948B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF22C87070511036" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="783E6D2128436F78" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="in_career_event" class="TunableCareerEventTest" display="In Career Event" muid="6BD19C9D49639E85" description="A test for whether a sim is in the specified career event." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="career_event" class="OptionalTunable" default="any" display="Career Event" muid="F0BBDF802EE83A86" description="The career event to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="any" class="TunableExistance" display="Any" muid="56E26553E92A1240" />
                                            <Tunable type="career_event" name="specific_CareerEvent" class="TunableReference" display="Specific Careerevent" muid="4B1704ADE13195A1" allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="1DBDEFD904148D9" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4CC1331A006C193F" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="2466A7F3297EA2AB" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="33268897873BEA45" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="6AD56A4EE21C1CF3" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="838E762CCD276604" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="CB96C04AB2561344" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="EEDE4F5F9D8427D8" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="F51425E90A3AD61C" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8461505869BC5388" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="76ACA7A75DD15835" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="77544B6B14810F3" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="48A7FC62FE24AD32" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4CDF6DFA283DC9D8" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D81B5484EF1A5D27" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="9D4F910E222850BD" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4605BD79963F2D90" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="CD3D1EB842E34DBD" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="fallback_to_picker" class="Tunable" default="True" display="Fallback To Picker" muid="DED35F9260041B5F" description="If the tuned career is not set, should we expect the career to&#xA;be passed in via PickedItemIds?" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="3BE70F1ADF875B65" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="79ABE956E5CC92E5" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="1ACC144FF058B64B" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career_daily_task_completed_test" class="TunableCareerDailyTaskCompletedTest" display="Career Daily Task Completed Test" muid="B0994A71D99A0F1F" description="Tests if the subject completed their daily tasks in their career." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="career" class="OptionalTunable" default="disabled" display="Career" muid="C44D306E277EE3D0" description="If tuned, this test will run against a specific career instead of &#xA;against any career." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="607B879B6236BEE3" />
                                    <Tunable type="career" name="enabled" class="TunableReference" display="Enabled" muid="8CA7405BA4AC2D33" description="The specific career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="club" class="TunableClubTest" display="Club" muid="1DE3FB1CEE3D9CC9" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="496B62254F9C2C63" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E03F57E5A5FA320D" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="A2F80F528903724A" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                        <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="D8A3BFE181CA317C" />
                                        <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="1B4C76FD278B9702" />
                                        <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="619FDBF1BE2E930A" />
                                        <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="C420E24E2C88EDEC" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="43934562C2F3EE3A" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="701685CF3D5783C5" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="4DF10361E274C199" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Leader" class="TunableExistance" display="Leader" muid="FA529BAC9A31A25A" />
                                        <Tunable name="Member" class="TunableExistance" display="Member" muid="FF6040E6A5C9536A" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="67883CD1798E5539" />
                                        <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="D82545D270815BA2" />
                                        <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="5FB7DAA7911F2B5B" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="15BEBCAD7EF716DC" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F56019FDC523E204" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2FE11A836588F3DA" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="CEF5576330673E56" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="246CA7F062AB8DE7" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E60484B49C8EC8F5" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8A14B764AF2D37DB" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="49BF5647463C9E39" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9564557E8F0EECA7" />
                                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="1092B1605085B594" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="90ED59D210627E0F" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BB3C7A51DEE78C05" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="6EB8965395D9F470" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7F086E7A6B4D001D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="70248D2BF4CEFDAF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="1695604EC574097C" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D2AF5A017C0ABBA3" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="B0A27E4EE33E3A13" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="17023475EE497BA" />
                                        <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="FA6F9FFE74D835D" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="A5BA85A71EC5649B" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="7EE251102587B1F5" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D07D7812A681221D" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="60B1E187EB694F5D" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="2ED7B9BE466ED3B0" />
                                        <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="AF042E6CA03E4011" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="4E7AC93960930CDC" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="62110D0674AF645B" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A0616C3BBE36E49B" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="E75F8B785A0DC261" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="43DC42B1A5C509B" />
                                        <Tunable name="none" class="TunableExistance" display="None" muid="C1803C6DFC4D0BA3" />
                                        <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="9F2FD983DF7FB93A" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="FDE6DC5382B8EE83" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="432AD8F39CDB0D17" />
                                    <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="A0690297724CF53F" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="DEB562B854EBBCEB" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="D6A6710F336C512" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="ACE82DC9D0BB16EB" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="5572222611A8CF31" allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="DEFDD57E0EA96820" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="EAE3217510E755F3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="B55B64C54E55F9BF" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="DC252581912596F2" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="94996B3EDBB5051D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="49991E8001B9459D" Deprecated="False" filter="0" group="General">
                                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="7F21F77D10320520" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="4711FB687CE6E739" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="9FF4A225505616FE" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="relbit" class="TunableReference" muid="D70C324548D81796" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="B1EBBB6AB39E3ACC" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="6338472B03DF6E5E" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="65F2E84464E1AD76" />
                                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="808D8E7043DCD54E" />
                                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="38350882E74C6E4A" />
                                        </TunableVariant>
                                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="F6B338D0E7332983" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="44A15BB297537718" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="37C18C268D31F32E" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="283E247B8EFD47BC" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                        <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="790CB8822B3C6EC1" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="E6EB7D7566596E62" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="19A881EF16515EB0" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                        <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="A10CAE0B3C29E306" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                            <Tunable type="object" class="TunableReference" muid="84A388FFE208E005" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="BA4330DE3B5E7230" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="F249056EEC17BDE2" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="C43933352112DA8F" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="C78E7E6D864E0ED4" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ED2144616C2709C7" />
                                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="63AF9C9B42F0C75E" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" class="TunableReference" muid="40FAABE938AA4DB0" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2FAD6E01DC094E16" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="70EA7D29E9AE07EA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="5251D888FC2233C7" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="dead_test" class="TunableDeadTest" display="Dead Test" muid="CE994A6C39735856" description="Test to see if sim is dead. It is true is sim is a ghost too." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="F1A366BD1B210881" description="If true, invert the result of this test." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="has_lot_owner" class="TunableHasLotOwnerTest" display="Has Lot Owner" muid="C202020312563CFE" description="Test to check if the lot has an owner or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="6467859093836E78" description="If unchecked, test will not consider, renting as ownership. If&#xA;checked and a sim is renting the current lot then the test will&#xA;treat being rented as having an owner.  If unchecked and a sim&#xA;is renting the current lot then the test will not treat this&#xA;lot as having an owner." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="has_owner" class="Tunable" default="True" display="Has Owner" muid="8A55B7D49E311770" description="If checked then the test will return true if the lot has an&#xA;owner.&#xA;If unchecked then the test will return true if the lot does not&#xA;have an owner." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="92641980D179BA50" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="D790424D3EFD291F" description="The type of test to " Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="659E58AF5CEE63D" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="BEDD207B1A754265" description="The number of household members." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D190F284B3241C3B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F95A3B36F1BBE155" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="count" class="TunableTuple" display="Count" muid="AD45BF603F6714B" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="3A1B0CC17A0C9F0C" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A6289D6BA2FDCAF1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="76B362ABCDBB28BB" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="EDFE9E075DF020B4" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="7EA39222470E69C1" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="test_sim_infos" class="TunableTuple" display="Test Sim Infos" muid="B49D594E99A4111B" description="Use this option when you're testing that a number of sims&#xA;in a household pass some tuned test.&#xA;ex. At least three sims in household are toddlers." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="count" class="TunableThreshold" display="Count" muid="E738BAE7B0F868D5" description="The number of household members." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="745BA4D06D19400C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="79D105F010F93495" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="test" class="TunableVariant" default="sim_info" display="Test" muid="9EB6EB2AC9E7AA96" description="A test to apply to each sim in the household. If the test&#xA;passes for a given sim, that will count toward the total." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="scenario_role" class="TunableScenarioRoleTest" display="Scenario Role" muid="2BCAEA3598FCD2A3" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="E8D482AB59133B49" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="21B59FB86F721A1B" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                                <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="91EACEE5A2E829CF" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                            </TunableTuple>
                                            <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="C060E0844D092CAA" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="8D48E7213613BFF6" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="89BB3A8DBCCDD983" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="28A1EFAF7C4D7319" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="1B85BDFABADF41B7" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="90A5FEAF95CC568A" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="2B0086717251545D" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F0E768A3BC4D31A6" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="DA453D061968506C" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="361EEA59A9FDD8DE" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="F487CB563DACE4C3" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="357315ED9C9EAFE3" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6047D00AAA272075" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="43563FA984C5C018" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="A5F9AC8E3B14945C" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6F2ADE4F820DA8B5" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DEAAE7D5343158C4" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="1BE851DA0BC8AF15" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="7A3686DB51127EFE" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2657AE0050E9A4B8" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="88F1C47F70F63817" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="C5FBC1339E8E21E4" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="F2F0439BEDC7FE5D" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="94744444BC8DD15" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="DAA239AAD81B292" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="17110B28471DFBAF" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="F678C006602A2A54" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="E4D4082F42CDA5A7" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7A1B1AF58641FBD3" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="AFAA31CDC5E08BD0" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="867E03856094E9C0" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="A66466A950F40AD7" />
                                    <TunableTuple name="has_object_in_situation" class="TunableTuple" display="Has Object In Situation" muid="24EB1D9DEF2078AA" description="                &#xA;                " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="scheduled_situation_special_object_test" class="TunableScheduledSituationSpecialObjectTest" display="Scheduled Situation Special Object Test" muid="468B2F5CCE67D22A" description="Check if an object is the special object for a drama node's situation." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantTypeSingleSim" name="host_sim" class="TunableEnumEntry" default="ParticipantType.Actor" display="Host Sim" muid="2BCA6319833CC78C" static_entries="interactions.ParticipantTypeSingleSim" description="The sim to compare against the host sim of a situation. " Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="531F43A9AF80A7E5" description="Tagging requirements on the object. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="453116DFD7407734" />
                                                <TunableTuple name="enabled" class="TunableObjectTagFactory" display="Enabled" muid="71736CCD88C67192" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="5841E2AFBE62D6B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FA1727468575E0F2" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D3843D2831CEE154" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="situation" name="situation_type" class="TunableReference" display="Situation Type" muid="DFEA3B1D339783A4" description="The type of situations you want to look for. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7A13A2E702532A10" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4336C2C6593E7FFD" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="739CCD5019C1896F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="1EA9BD3AA893BB1C" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="DFC0896460474B43" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="A615C9E26B21F596" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="DB544E857E0D7B3" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="94988C4A4740B99F" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="FA93BAAB013CB851" Deprecated="False" filter="0" group="General">
                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="B55C328ABCD89128" />
                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="3941EBA123D669AF" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="865586153047B1FE" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="F921514342DD9572" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="FD4D1B15F5050642" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="7835422A8A603368" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="76CAF6827270FE99" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="EF955D2CC486E655" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="77D01DD9B279B583" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="object_state" class="TunableReference" muid="821640D1F63E09A7" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="AFFD71440892BD78" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="58A78EC7FE2909FF" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="528AE0ADDCE6F5D0" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6F7D4AFE99F1F957" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="367755D5AA817AB2" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="73C05CCDF990EAD6" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="171BC6C29D670ADD" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F8771F44A6B14DE3" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="F13FF1FCA1A6063C" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="E4EBBDF8F9172D8B" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="EF92CC5F8ECE5158" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="289C3A213715381" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="A32BAA58C9AB5370" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E1979B1886CB3FCD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="C78D830011250E90" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="7160535DF699A79B" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="78B4B59AD1FE6909" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="54817ADCB35C2C76" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="88C069CEF130911D" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A97FF86B4F44C2CB" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A1F9DE70C0D0E53E" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9A534FFC076B5E11" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="84681274A7F0A01A" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="B4F059F811483A95" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="5D6787C8203391F7" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="B933F861E0457E64" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7189845C96070A3A" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B870FE2E5AE3C7B6" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="A426B3CBE0734DCC" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1E797216D2E4CB5A" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1331DA4561677CE3" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_in_pond" class="OptionalTunable" default="Don't_Test" display="Is In Pond" muid="E3B171F947674371" description="If checked, test if the subject is inside a pond.&#xA;If unchecked, test if the subject is not inside a pond.&#xA;If disabled, don't care either way." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="ED1CA5B307B67FC6" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="30E63A689989475F" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="FD86E0B0F1EE5414" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="96BDBF97BB7C7D3E" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="AEE57723124629A9" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="5D0420553891BDC9" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="83DB2F5226679298" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8FCAB364FFE26D01" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="D1B697BB84168836" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="C5C663C98F49A560" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="43D621B37740FBD2" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="CE3F09698778C171" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="4ED8E94A14964A4E" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="5AB8F7B94C91258E" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C120B93BB5E84B5A" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="45214D1F853F0305" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="CF60CD0EA98FE7E9" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3BA156FE7B480452" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6FB88FD21082D65B" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="C8E34A753E4D752" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="492B91637C3B2C3F" />
                                        <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="1D6084A113BE2101" Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="AC2FD00D55BE9DA3" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="A3B9942294F2D82C" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="4F6D36BBE03B87AF" Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="44A3B23B159C203" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="74A4327156EE3A2F" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="76F9148454997406" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2043406B73F13D5E" />
                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="81B34A83217AA3AA" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5777F3BBB331D69C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="D09EFC27D4249E11" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="AD975D38AF5E2E67" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="34EEFFB47B037C9C" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DE9E4E5790DF1419" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="1B9B2D62908933C2" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3C91891EB559CF83" />
                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="94C711A1BBFD1EFB" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B2C481A4DB5E0373" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="595EABB44EE1A23F" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="6428C752FA4F6595" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="EF65AD040FFDF8CC" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BADF9D74382EB0F3" />
                                        <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="F70FAA4999C2E6BC" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CBC8EDA941BC80CC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="255B3927C520DC47" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FF90EEC19F35ABED" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6E77DA562A01E924" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="BF86BCD0EC5BC619" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C747D14CC9F9ED20" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="536DF6D4D8FED2F4" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CDFACE73C8DC8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="99371625E9F0203D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CDDD876152F638EF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C2B03B8C85B23F2D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="D72138D868E02555" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A1887C7EC6E6B470" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ACDD0547AE1ABC4D" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="55AD2B562D774B1E" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3BD5C2F4CDEBA19B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3200DCBEA6AA71B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A6117576E494A112" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D957A67B95F87D08" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="DA3FF5AF99A6A425" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="locked_portal_count" class="TunableLockedPortalCountTest" display="Locked Portal Count" muid="C7244E90EB5728E8" description="A test that checks the number of locked doors." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="lock_priority" class="OptionalTunable" default="all_priorities" display="Lock Priority" muid="1EC29C7CA5D82F4D" description="The priority of the locks we want to test. None means all priorities." Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_priorities" class="TunableExistance" display="All Priorities" muid="8BBB981CEEDC1FDB" />
                                    <TunableEnum type="LockPriority" name="specify_priority" class="TunableEnumEntry" default="PLAYER_LOCK" display="Specify Priority" muid="A919E5A9187FF5C4" static_entries="objects-components-portal_locking_enums.LockPriority" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="lock_types" class="OptionalTunable" default="all_lock_types" display="Lock Types" muid="ECEE7FE210665637" description="The type of the locks we want to test. None means all types." Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_lock_types" class="TunableExistance" display="All Lock Types" muid="B2BF55545E528AA6" />
                                    <TunableList name="specify_lock_type" class="TunableEnumSet" display="Specify Lock Type" muid="B951DDAB1DD8EBEC" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="LockType" class="TunableEnumEntry" default="LOCK_ALL_WITH_SIMID_EXCEPTION" muid="4C9071DCA5EEC165" static_entries="objects-components-portal_locking_enums.LockType" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableTuple name="number_to_test" class="TunableThreshold" display="Number To Test" muid="A9B43B98EB329011" description="The number of doors that need to be locked to pass this test." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EBDDEC869C60590C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6F20F809B0D85372" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="8DA94AA885323D11" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="8C02A75C6A5C6782" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="B4756338FBAF6E50" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="BDA9C2FBCEB99BEE" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="4C5D07DB380CEBFA" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="3620FA280A8BDE3D" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="7E02656311BCEE2" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="1128917D90112D9D" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                            <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="2D2061F0E9A6D367" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                                <TunableList name="stats" class="TunableList" display="Stats" muid="D77EC745819E4DD6" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                                    <Tunable type="statistic" class="TunableReference" muid="59FA2A49D2209D98" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E4E94E4BA6BFBBED" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C1C583E576C7CD68" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6915997C1FE4755B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="nearby_floor_feature" class="TunableNearbyFloorFeatureTest" display="Nearby Floor Feature" muid="2B0C5EC8FCD872D0" description="A tunable test that checks if a specified floor feature is within a&#xA;radius of a given actor." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="FloorFeatureType" name="floor_feature" class="TunableEnumEntry" default="BURNT" display="Floor Feature" muid="F05F410791ADFB49" static_entries="build_buy.FloorFeatureType" description="The floor feature type that is required to be inside the radius_actor's&#xA;radius." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="94B7B9A46105FCF" description="The radius, with the radius actor's position, that defines the area&#xA;within which the floor feature is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <Tunable name="none" class="TunableExistance" display="None" muid="AA0AAD402DF97202" />
                            <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="1C4DB51A3ECD168E" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="FE022F7DE73CE566" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="824C68909BDD45D5" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="917C7E55F26312D5" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="1657C96E6D523E3" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B1C35F9E8B4A39AF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="94AC542E9012BFDD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="2BEEC3CDC6321517" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="6853F2F8190E2CB8" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="8C8073366A976C44" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                    <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="D3ECA3BA7B341912" />
                                    <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="59C53DC2A1E75253" Deprecated="False" filter="0" group="General">
                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="73FFFBE9708E35E6" Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9F05554E17552C2B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B9579EE7494D0770" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="445CE2EADD631E6B" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="9653339187543047" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="1F8C886E53070199" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="3C2CDDEA7405C33D" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="AC313DD8EC08F1D3" />
                                    <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="FA3A8EFFDAF5220B" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="C97216E56DF32A4B" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="C1454E5B2ABB3E58" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="D16C96412AF9CF58" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="B8BC2BA92704356B" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="C47ADB952CE6246B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="BD8EC9640EF8FC58" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2F92C0C23D23D94D" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="91F43A2DE588482B" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="20563D5B10C36C31" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="18C35C58CC1E9700" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="CB5D433555496A27" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB487F6FA54EE524" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="DFC535C4A28B4701" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="CE94F5C004EBB3E" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81FBBFABD5C15673" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="55061D84C513DC32" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A7C5E9BB3C85748F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="92AEA5D039A1D7D0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="A4EE7BC876DFBE94" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="161EBA6EE8920340" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="test_events" class="TunableList" display="Test Events" muid="F7E3EFBE2C97A8F6" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="9328B9F56C6562AA" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="F0FF4DCB73D8C616" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="FA6968A2F2FC2A88" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5F0833747AA80E17" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="687FD2C69D0D5555" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7E79C72A84EC961F" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="41187DDE700A1F96" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5CE17D567601F3E7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="773DCCB8C9E1E892" Deprecated="False" filter="0" group="General">
                                            <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="F763F8A38D3A76B2" />
                                            <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="85D8F6BCFEF928BA" />
                                            <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="DC9EA2951F30057F" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="B122DD74FE322102" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="47F4F27976358567" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="A7D02D6C12320948" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="72DE95527CB793F3" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D0FCCE3BA4642090" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3C5E8369D6377CB5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B53ADBEA03DA7584" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="75D5CBF7861072D8" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="977B58F3E8005E0E" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="F257FC0A3F7497AE" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="87BCA6CBFED05293" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C36D2D373D4BC61" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="BE6B1AE685158AD" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8090E2781DA86718" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FD6AF7BBD5CF3EEB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="66C74FD6A294F9FE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="4E80947195C636AE" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="DCAD69F15D4DB3D2" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="DA31530201B4EB87" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="BD5BA882F6AF3196" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="32F2181EB8B73B25" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="C302CF7A40312318" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="2226114B776B4842" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="F264825129FB181E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="CF38B7671F756108" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="4488D2CE73234403" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="1D30A7138AD00A3" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="FAB29194FDBA80E9" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="4835ED94D25C9C82" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="621B4E9E5A57C7C0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="574A95348F25330D" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="320F106105838B09" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="8EA26EE7A6266D19" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="EB9F0123457F569C" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="77DBB30B2D08F478" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4042AF8BB54C6C16" />
                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="17AA2D33A0522124" />
                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="FEDC6DFCDF8B06A0" />
                                </TunableVariant>
                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="2602CE463EF70D1D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                            </TunableTuple>
                            <TunableTuple name="relative_statistic" class="TunableRelativeStatTest" display="Relative Statistic" muid="5601353A0F5D993D" description="A Test that compares statistics against each other either &#xA;on the same participant or on two different participants.&#xA;I.E. I want this to pass only when the actor has lower hunger than the target.&#xA;I.E. I want this to pass only when the targets's hunger is lower than their bladder.&#xA;&#xA;If either of the Sims doesn't have the stat being compared the value will&#xA;default to the initial value of the stat, or in the case that rank is being&#xA;used, then the initial rank will be used." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="12764083E60329C0" static_entries="sims4-math.Operator" description="The comparison to perform against the value. The test passes if (source_stat comparison target)" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="difference" class="Tunable" default="0" display="Difference" muid="ECC9030AF6304561" description="The difference between the source and target stat in order to pass &#xA;the threshold. This value is added to the source stat value and the &#xA;threshold is checked against the resulting value." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="AD02FEB29DE964EB" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="775CDE71C4451A9A" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="FBD2B5620F50470F" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="51DB26A8C8593A00" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="81E7F861BCE9175A" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="8496C1125DCD9339" description="The stat we are using for the comparison" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableList name="target_stats" class="TunableList" display="Target Stats" muid="D0CB30BD9035AF8E" description="The stat on the target we want to compare against.&#xA;If there is more than one, all must pass the comparison.&#xA;If there is none, it compares the same stat." Deprecated="False" filter="0" group="General">
                                    <Tunable type="statistic" class="TunableReference" muid="3165ECD52AE33E05" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CDB281B1D4FCF1A7" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="423982B0A6AC6F6C" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="40A4B9338A261CC5" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="satisfaction_points" class="TunableSatisfactionPointTest" display="Satisfaction Points" muid="252605B181A5628F" description="Test to see if the target Sim has a tunable threshold of satisfaction &#xA;points" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="91F7E5386021CCC2" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7D95000D486B63D1" description="The threshold to control availability based on the statistic's value" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="69176AF4F34ACA1C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C45EF5C103ECF377" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="scenario_goal_complete_test" class="TunableScenarioGoalCompletedTest" display="Scenario Goal Complete Test" muid="32C30DC077E0B497" description="Test if a situation goal is completed in the active scenario." Deprecated="False" filter="0" group="General">
                                <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="63FED4264A86A72C" description="The situation goal to be checked if it is completed in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="scenario_phase_triggered_test" class="TunableScenarioPhaseTriggeredTest" display="Scenario Phase Triggered Test" muid="12518807CCA40E75" description="Test if a situation goal is completed in the scenario." Deprecated="False" filter="0" group="General">
                                <Tunable type="snippet" name="scenario_phase" class="TunableReference" display="Scenario Phase" muid="FE2D9F7E6716F27B" description="The phase to be checked if it is triggered in the scenario." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioPhase" />
                            </TunableTuple>
                            <TunableTuple name="scenario_relationship" class="TunableScenarioRelationshipTest" display="Scenario Relationship" muid="68878A2FF7A18ED" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="56203498A9EA0D66" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="1F8ACEE06142BAC8" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="A41E0E30B643A832" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="76B1BA2909364A5D" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="D2A626B163C22B73" allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="9608D68B215CE401" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="89531F422FC7C886" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="8EBB4A5CB62B09D6" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="BDE7978FA7AFBD4B" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="19D755AB97FD86BB" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="359473AB4A6C1028" Deprecated="False" filter="0" group="General">
                                    <TunableList name="match_all" class="TunableSet" display="Match All" muid="393110CC3867024D" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="777D681F880BC15" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableList name="match_any" class="TunableSet" display="Match Any" muid="4864853BC6D411A5" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="relbit" class="TunableReference" muid="68A6B28441DBFB95" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableList name="target_scenario_roles" class="TunableList" display="Target Scenario Roles" muid="220882A1B0DE96C1" min="1" description="A list of scenario roles. The relationship test will target all other&#xA;sims in the household of the subject sim that have a tuned scenario &#xA;role." Deprecated="False" filter="0" group="General">
                                    <Tunable type="snippet" class="TunableReference" muid="67B9B367304D64C3" description="The scenario role." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                </TunableList>
                                <TunableList name="target_sim" class="TunableEnumFlags" default="TargetSim" display="Target Sim" muid="F20D3FACBDF154F5" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="247B6778FD2AD28D" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="CF50D485293F175B" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F73F3D0120A67DB2" />
                                    <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="28706B883D85F2F4" />
                                    <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="9744A03CFA5F0D3E" />
                                </TunableVariant>
                                <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="7DB330E34C41D069" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                            </TunableTuple>
                            <TunableTuple name="scenario_role_test" class="TunableScenarioRoleTest" display="Scenario Role Test" muid="9CEAC0A247B536A7" description="Test the active scenario status of a target sim." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="E78E5A6CFD9CA5B2" description="If checked, inverts the normal result of the test." Deprecated="False" filter="0" group="General" />
                                <Tunable type="snippet" name="role" class="TunableReference" display="Role" muid="1970CB686001918E" description="If tuned, we will test if the target sim has this role. " allow_none="True" Deprecated="False" filter="0" group="General" restrict="ScenarioRole" />
                                <Tunable type="snippet" name="scenario" class="TunableReference" display="Scenario" muid="5822033922ECC70E" description="If tuned, we will test if the target sim is part of this scenario." allow_none="True" Deprecated="False" filter="0" group="General" restrict="Scenario" />
                                <TunableEnum type="ParticipantTypeSingleSim" name="target_sim" class="TunableEnumEntry" default="Actor" display="Target Sim" muid="49F9D9D84ED684B4" static_entries="interactions.ParticipantTypeSingleSim" description="The target Sim of this test." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="7EFBB1FBB1878B0E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A7D7E1F276726706" />
                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C9576DDE2F88A130" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="FE847F642D2E50FD" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="412E341CACE9CCF6" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="1CEE956FE2849BF0" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="4955C8CC30E15E32" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="A8FFB67449E21C92" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B9A50E05E8A64BF" />
                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="DD8DF793E0DF6A4E" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="97AC2A56752BCB56" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="876D2E33FFD5FFBA" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="8FC4742EB4704530" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="in_current_zone" class="Tunable" default="False" display="In Current Zone" muid="AB5F8C3FAE4874CE" description="If enabled, check if any matching Sims are in the current zone." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="F50AB1DEC422C3FD" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                                <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="CD989FA347E180D9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="D54320C04F0E234B" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="233750BC32C1D05B" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="235F8570DAF90C71" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C5E3CA859D5F402" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="46A94D09FE762EE5" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="811749CA99607D26" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="49E940464D28993" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                    <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="E11F139D95300578" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="CECB034C93D68A75" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="EBDB6EBFB29FC5BC" />
                                </TunableVariant>
                                <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="A9AD9AC060BEDEBE" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="4F3D79CC1127E851" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="EB91BEAABB234CC0" />
                                </TunableVariant>
                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="8783AB019E05DD" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="3D8FF5C8C881C8A2" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="280910182CFE654" />
                                </TunableVariant>
                                <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="A315818D26378C9E" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A30B8D065C89575E" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="FBC3904B50E0D84E" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="5F3B4CCF15433775" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DAA492716DA6670B" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B1D37ECB61C6FCA2" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="777379557EEDD8F0" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="39EE5D44FFB94D38" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="417061BEF1638CA4" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="81C8AA3A5C6155C4" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="82FC2F3FEAE90B0D" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="9AB5AC01A03AAF8C" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="510D950A334C0580" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="9AF1976E730B4594" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="60EAC072E60E4A11" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                        <TunableList name="species" class="TunableEnumSet" display="Species" muid="B9AB7F405449AA0E" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="8A1B42CCD421F1FA" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableList>
                                    </TunableTuple>
                                    <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="9A8C3CA3A76F3FFA" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="simoleons" class="TunableSimoleonsTest" display="Simoleons" muid="616AA10439E94138" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="60B78BAED50CA146" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C42DAF5B5E53B72C" />
                                    <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="3D1B4F76F35B5A7E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="3C3207F0D5DCF397" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="CDEE73DE831D85B5" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="D7C12FEEC30E8F80" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="65A7A0404DE6A3F7" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="24F78EFE03AAB9DF" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="43C392AE06041146" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="7794FD785F13E64C" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="C1CC1FC0E7F8B895" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                    <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="5E8DBC7CAC3F9304" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="1B953C4AFC04C380" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                    <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="DDCCFE954429A1F2" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="4CD070D6F721300A" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                    <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="DC1720F514C56E05" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="3D214828550DD4CD" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="7451C49B87713D12" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4D6837F41EF0AE9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F9105C80E3C45E70" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="974B4A81760D3E83" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="BC33E4547417F2AF" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                                <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="9F79DFA9DCD27DE2" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3B754C1958F453D8" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="969476427A401CA2" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="situation_job" class="TunableReference" muid="A41CD89A510ECC49" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="9CC0E0A4D2DE2C6E" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="6C2D9A6979177E4" description="If checked, the result of this test will be flipped so that a test that would return&#xA;True will now return False and vice versa." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="E195B0F3FBD1A994" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="AB742D5AE1CF3D4F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="E0E0DDE220948F91" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E88B01D06AFD256F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CC552D6BD60320C6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="570C5E54D1C230C4" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="9B346FC5566F76CB" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                                <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="561B8C7FB72C7F8B" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                                <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="8F3AF651A8628C6D" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="5075573363A5E0F4" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="11626FA20855ECA5" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="799F9ED1D7B41ABD" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="E6A99AB233A2E458" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="B04F79C048964CDC" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="F1D27399A48B91EA" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="59A23E836D18240C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="CE01F125339827A8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F2E0FEAD784C4D99" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="E8BA4C80AECCCB93" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="state" class="TunableStateTest" display="State" muid="5E612BA4F43930D5" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="DA3B4A0525DD823B" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                    <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="3AF26C9BAAD075F" />
                                    <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="C6DB88C098762B50" />
                                </TunableVariant>
                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="7ECE94512895F7DC" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="70CA8C8AC4F15850" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                            </TunableTuple>
                            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="2FE3C97343C8CA28" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="8DE25747A901E4CE" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="F1794D397D213ED6" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="811140797520771C" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="D2C7F6B7FB32B5C3" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="765B86AC2B993B1D" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="669D652EA902413E" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7C0EFBD646DEBDDD" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="DB50C553D8C54CCF" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="A1E2ECB8C3D81A0D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E5222E6F99F38270" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C5D80501F21E58E3" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="540399DEE9D6E246" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6DDCD5CC33E82E76" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="84B5C51B9C5F05E1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="time_of_day" class="TunableDayTimeTest" display="Time Of Day" muid="17199038F0D88838" description="Test to see if the current time falls within the tuned range&#xA;and/or is on a valid day." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="days_available" class="OptionalTunable" default="disabled" display="Days Available" muid="C4D7DE350C5E20A3" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5A5DB378BC70D0C3" />
                                    <TunableTuple name="enabled" class="TunableAvailableDays" display="Enabled" muid="4F8D0352C818DFC8" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="0 SUNDAY" class="Tunable" default="False" display="0 Sunday" muid="D821BF078B55B753" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="1 MONDAY" class="Tunable" default="False" display="1 Monday" muid="2322C4C20CA8E285" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="2 TUESDAY" class="Tunable" default="False" display="2 Tuesday" muid="CB97B1A87D66C669" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="3 WEDNESDAY" class="Tunable" default="False" display="3 Wednesday" muid="B5A0917FE901BF30" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="4 THURSDAY" class="Tunable" default="False" display="4 Thursday" muid="8BFB74170FA0270D" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="5 FRIDAY" class="Tunable" default="False" display="5 Friday" muid="D6B1C850BCC9CDA" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="6 SATURDAY" class="Tunable" default="False" display="6 Saturday" muid="E1386C6CF6EBF14D" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="is_day" class="OptionalTunable" default="disabled" display="Is Day" muid="A9F391C8835EA914" description="If enabled, allows you to only pass the test if it's either day or&#xA;night, as per the Region's tuned sunrise and sunset times." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9233E2B3B14533F" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2B831A4DDB0C4F51" description="If checked, this test will only pass if all other criteria are&#xA;met and it's currently day time (between the sunrise and sunset&#xA;times tuned for the current region).&#xA;&#xA;If unchecked, this test will only pass if all other criteria are&#xA;met and it's currently night time (between the sunset and&#xA;sunrise times tune for the current region)." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="time_range" class="OptionalTunable" default="disabled" display="Time Range" muid="BE6256E29289891F" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="37E26B0F9A7CEC91" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8A594237EB38042A" description="The time the test is valid.  If days_available is tuned and the&#xA;time range spans across two days with the second day tuned as&#xA;unavailable, the test will pass for that day until time range is&#xA;invalid.  Example: Time range 20:00 - 4:00, Monday is valid,&#xA;Tuesday is invalid.  Tuesday at 2:00 the test passes.  Tuesday at&#xA;4:01 the test fails." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="begin_time" class="TunableTimeOfDay" display="Begin Time" muid="635ACC8AFEA91A41" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="hour" class="TunableRange" default="0" display="Hour" muid="81DC31F7CCB95DEF" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="C948779C4BB2141D" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="duration" class="TunableTimeOfDay" display="Duration" muid="D939CCF3148752F7" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="hour" class="TunableRange" default="1" display="Hour" muid="1171216237210648" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="B2B0FF3B4E5F80D3" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="topic" class="TunableTopicTest" display="Topic" muid="219B624C90A3A22D" description="Gate topics of the actor or target Sim." Deprecated="False" filter="0" group="General">
                                <TunableList name="blacklist_topics" class="TunableList" display="Blacklist Topics" muid="2F912D14B8E3F28D" description="The Sim cannot have any topic contained in this list to pass this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="topic" class="TunableReference" muid="3417BF82C158671" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="whitelist_topics" class="TunableList" display="Whitelist Topics" muid="AA46FFAAED9A80E7" description="The Sim must have any topic in this list to pass this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="topic" class="TunableReference" muid="1C0C1FCCF4AEC404" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="A5B595791F2D2911" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="D4E342E3B7C5DB1E" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="880B84CD86FF6D0E" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="1E31C318199719FC" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="4CEB5A0F0CC5D16A" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="trait" class="TunableReference" muid="331DFD649DC81C2F" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="EF946AB54C7468A5" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="B3E905C6B96541ED" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="E1E7392ADF80F91F" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="95CAE9AD1A18529E" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="D5000C6A856B821F" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable type="trait" class="TunableReference" muid="965B142284110C8E" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="venue_availability" class="TunableVenueAvailabilityTest" display="Venue Availability" muid="D735A6EBEDA9FB0" description="Test for the types of venues available in any Region and possibly compatibility with a participant." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="ownership_test" class="OptionalTunable" default="enabled" display="Ownership Test" muid="EC58677A721AD7A8" description="If enabled then when testing venue availability it will test the&#xA;ownership of the venue as tuned within.&#xA;&#xA;If disabled then no ownership test will be applied to the venue." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7462AB70EFA74E4" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="fail_if_owned_by_anyone" display="Enabled" muid="DC07EBE3E0410364" description="How to test the venue for ownership.&#xA;&#xA;If fail if owned by anyone is chosen then any lot owner will &#xA;cause that venue to be unavailable.&#xA;&#xA;If fail if owned by subject is chosen then any venue owned&#xA;by the subject will be considered unavailable." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="fail_if_owned_by_anyone" class="TunableTuple" display="Fail If Owned By Anyone" muid="E6B735F6C34744F1" description="venues that are owned/lived-in by anyone will be excluded &#xA;and considered unavailable." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="fail_if_owned_by_subject" class="TunableTuple" display="Fail If Owned By Subject" muid="74287A6D7006BA4A" description="venues that are owned/lived in by the tuned subject will be &#xA;excluded and considered unavailable." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeActorTargetSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="4EB493F48ABF4098" static_entries="interactions.ParticipantTypeActorTargetSim" description="Who cares about the venues in the region. This paricipant will be&#xA;used to test for Region Compatibility if checked." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="test_region_compatibility" class="Tunable" default="False" display="Test Region Compatibility" muid="B1B4022466A190FE" description="If checked, venues in incompatible regions from the subjects'&#xA;region will be excluded and considered unavailable." Deprecated="False" filter="0" group="General" />
                                <TunableList name="venues" class="TunableList" display="Venues" muid="E288304B9680B775" description="A list of venues that we want to be available. If there are no&#xA;venues in the world that match the types in this list, then this&#xA;test will Fail." Deprecated="False" filter="0" group="General">
                                    <Tunable type="venue" class="TunableReference" muid="94B70194602CCC2C" description="A venue that we want to be available/unavailable." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="3C6DA2BA5B200B4A" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="9DE22F473E03EBBB" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="4C2DA0D3635FCB1A" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="D828505724F89DAE" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="838CE99E801B7E28" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="F639D399FC8CE154" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="432C6001B9E68371" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="zone_source_invalid_fallback" class="Tunable" default="False" display="Zone Source Invalid Fallback" muid="78D06C4B22E7337B" description="If the zone source is invalid, specify the return value of the test.&#xA;By default, if the zone source is invalid, the test will return False." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="737C8D32F2E5176B" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="E03834D4651EABDC" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="86EA425B3E2B030B" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="685C702F9B72F68B" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="8F607D2FC836D63F" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="4FAAEFEFDDE7B08D" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="33ABE2323290B807" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3E363E6B9DE21484" />
                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="5D887B0FC190E3D5" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="4A64ECB3E7EC049C" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="C039266937EEACE7" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="3568234B6345383C" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="52DF4AAF1489EC0A" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="312D54EE81199473" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_reserved" class="OptionalTunable" default="Don't_Test" display="Is Reserved" muid="BCC6824839C3E51B" description="If enabled, test if the specified zone is reserved by the zone&#xA;reservation system. This usually indicates a system is using&#xA;that zone in such a way that it should not be available for&#xA;most other purposes." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DC819C870CC8A4B2" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="33F5DFD15FAF9001" description="If checked, this zone must be &#xA;reserved. If not checked, it must be unreserved." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="F28C5C51550B68A4" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="2CBAB010A105663A" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="41A48830B6BD30F9" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="E3FF8DD3C6D73AD6" description="                    " Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="484AE250F793E448" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="6C0B769D890FCF2E" />
                                            <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="12241B780D8129E4" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="A16707A0C9406D45" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4D0554DCF930C514" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="82C9B38286483BF8" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="129345513919898F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A9C3D6BBE0B1B6AA" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B428CB04340A68BC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B86DD51AA24B87B1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="5EA12E79E9D0E86D" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5554F79EE5945C29" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="697953D43F9F977C" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AB698898A752FD3E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="624C45C3B6C7B69C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CE4B1489F0374EF0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3C1DC207E0A8774F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="583934AAD62A3936" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="622E5EEA996D9414" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="870D0BFEB5DF6788" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="21A44C7EC780938" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B108048E961B7F5E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6965FDF897FDC4C4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C5308D858A89AF8E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C7545AABC8350E8A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="FAAE2196248D2547" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="31BD849572FB8559" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="866BC049EF3FD3DC" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6B6772A6BFB8398E" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="DB6B8FA93284B052" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2A06A7100F941262" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E617957D7AD99C47" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3DF4D550E4253EE9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4DD75E5C1003EDB4" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="FEC6C1AB064355BC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D0A4FF1A5041F264" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="DDA319373E83DAA9" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DD0702398685A154" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2AFEE97ACC07E1F6" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="947559F0A1FD8FE5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="28A88A12770F77EF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="11C0CBA88F5C49ED" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="76D6692DDA217924" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="DFA3A7EB23E30555" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F22BF6F8219B4BB6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="684F1F88A8AD32B6" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EB02C72F74045761" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7FD38F7C664AB4AA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="12C941AA4E3E5A32" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4B4C577EDADF895" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="27252CC61023E774" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="2AE3B2E831045A73" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="E7E1900AA0208188" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F89275F17B4043D3" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="FB274DC6A2CE4B2A" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B664010FFC277D12" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6DB2BA9C67295B8A" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="115146B4094D39D2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A0EA71871AA139E7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="B34058BE98F9AABB" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3DACAD253997D738" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F64F3604B6225E5B" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E2FF88C8204AA1AA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="76B40E0102C250E8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="ADF9DC97D2DEFBD3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="FC635342F6DDFBF2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="3D8F2D2B7994FADB" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C8F7DD0BEAF31140" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9712CCC63063346F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4F5D7EC9DBF55A62" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="222455D29C9DD6B1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EC490F1FE43B01B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6B69019D7DDE1B3E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="EA7646518A7B8EA8" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="8CF45C3B72693111" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Tunable type="bool" name="visible" class="Tunable" default="True" display="Visible" muid="BAF9CF5F4CD7D4C1" description="If checked, the outcome text will be visible in the UI, such as in the scenario cards." Deprecated="False" export_modes="client_binary" filter="0" group="UI" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="7FF6629DD6A6F9E4" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="2DDEEC806D717DF" new_muid="508846D0C45F4366" />
        </ActionList>
    </VersionHistory>
</TuningRoot>